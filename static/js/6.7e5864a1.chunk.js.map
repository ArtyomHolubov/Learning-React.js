{"version":3,"sources":["../node_modules/semantic-ui-react/dist/es/lib/eventStack/index.js","../node_modules/semantic-ui-react/dist/es/elements/Loader/Loader.js","../node_modules/semantic-ui-react/dist/es/elements/Rail/Rail.js","../node_modules/semantic-ui-react/dist/es/modules/Sticky/Sticky.js","../node_modules/semantic-ui-react/dist/es/views/Feed/FeedDate.js","../node_modules/semantic-ui-react/dist/es/views/Feed/FeedExtra.js","../node_modules/semantic-ui-react/dist/es/views/Feed/FeedLike.js","../node_modules/semantic-ui-react/dist/es/views/Feed/FeedMeta.js","../node_modules/semantic-ui-react/dist/es/views/Feed/FeedUser.js","../node_modules/semantic-ui-react/dist/es/views/Feed/FeedSummary.js","../node_modules/semantic-ui-react/dist/es/views/Feed/FeedContent.js","../node_modules/semantic-ui-react/dist/es/views/Feed/FeedLabel.js","../node_modules/semantic-ui-react/dist/es/views/Feed/FeedEvent.js","../node_modules/semantic-ui-react/dist/es/views/Feed/Feed.js","../node_modules/semantic-ui-react/dist/es/views/Card/CardDescription.js","../node_modules/semantic-ui-react/dist/es/views/Card/CardHeader.js","../node_modules/semantic-ui-react/dist/es/views/Card/CardMeta.js","../node_modules/semantic-ui-react/dist/es/views/Card/CardContent.js","../node_modules/semantic-ui-react/dist/es/views/Card/CardGroup.js","../node_modules/semantic-ui-react/dist/es/views/Card/Card.js","../node_modules/semantic-ui-react/dist/es/collections/Grid/GridColumn.js","../node_modules/semantic-ui-react/dist/es/collections/Grid/GridRow.js","../node_modules/semantic-ui-react/dist/es/collections/Grid/Grid.js","../node_modules/semantic-ui-react/dist/es/elements/Segment/SegmentGroup.js","../node_modules/semantic-ui-react/dist/es/elements/Segment/SegmentInline.js","../node_modules/semantic-ui-react/dist/es/elements/Segment/Segment.js"],"names":["instance","Loader","props","active","children","className","content","disabled","indeterminate","inline","inverted","size","classes","cx","useKeyOnly","useKeyOrValueAndKey","rest","getUnhandledProps","ElementType","getElementType","React","createElement","_extends","childrenUtils","isNil","handledProps","propTypes","Rail","attached","close","dividing","internal","position","Sticky","_Component","_this","_len","arguments","length","args","Array","_key","call","apply","this","concat","state","sticky","stickyRef","createRef","triggerRef","addListeners","scrollContext","scrollContextNode","isRefObject","current","eventStack","sub","handleUpdate","target","removeListeners","unsub","update","e","pushing","ticking","assignRects","didReachStartingPoint","stickToContextTop","didTouchScreenBottom","stickToScreenBottom","stickToContextBottom","isOversized","contextRect","top","bottom","window","innerHeight","didTouchScreenTop","didReachContextBottom","stickToScreenTop","frameId","requestAnimationFrame","context","contextNode","document","body","triggerRect","getBoundingClientRect","stickyRect","offset","height","bottomOffset","setState","stick","bound","_invoke","unstick","_inheritsLoose","_proto","prototype","componentDidMount","isBrowser","getDerivedStateFromProps","componentDidUpdate","prevProps","prevState","componentWillUnmount","cancelAnimationFrame","computeStyle","styleElement","_this$state","undefined","width","render","_this$props","_this$state2","containerClasses","elementClasses","triggerStyles","ref","style","Component","defaultProps","FeedDate","FeedExtra","images","text","imageElements","_map","image","index","key","join","createHTMLImage","FeedLike","icon","Icon","create","autoGenerateKey","as","FeedMeta","like","createShorthand","val","FeedUser","FeedSummary","date","user","FeedContent","extraImages","extraText","meta","summary","FeedLabel","FeedEvent","hasContentProp","contentProps","Feed","events","eventElements","eventProps","childKey","eventData","_objectWithoutPropertiesLoose","finalKey","Content","Date","Event","Extra","Label","Like","Meta","Summary","User","CardDescription","textAlign","useTextAlignProp","CardHeader","CardMeta","CardContent","description","extra","header","CardGroup","centered","doubling","items","itemsPerRow","stackable","useWidthProp","itemsJSX","item","Card","handleClick","onClick","color","fluid","href","link","raised","Image","ui","wrapped","Description","Group","Header","GridColumn","computer","floated","largeScreen","mobile","only","stretched","tablet","verticalAlign","widescreen","useMultipleProp","useValueAndKey","useVerticalAlignProp","createShorthandFactory","GridRow","columns","divided","reversed","Grid","celled","container","padded","relaxed","Column","Row","SegmentGroup","compact","horizontal","piled","stacked","SegmentInline","Segment","basic","circular","clearing","loading","placeholder","secondary","tertiary","vertical","Inline"],"mappings":"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","file":"static/js/6.7e5864a1.chunk.js","sourcesContent":["import { instance } from '@semantic-ui-react/event-stack';\nexport default instance;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey } from '../../lib';\n/**\n * A loader alerts a user to wait for an activity to complete.\n * @see Dimmer\n */\n\nfunction Loader(props) {\n  var active = props.active,\n      children = props.children,\n      className = props.className,\n      content = props.content,\n      disabled = props.disabled,\n      indeterminate = props.indeterminate,\n      inline = props.inline,\n      inverted = props.inverted,\n      size = props.size;\n  var classes = cx('ui', size, useKeyOnly(active, 'active'), useKeyOnly(disabled, 'disabled'), useKeyOnly(indeterminate, 'indeterminate'), useKeyOnly(inverted, 'inverted'), useKeyOnly(children || content, 'text'), useKeyOrValueAndKey(inline, 'inline'), 'loader', className);\n  var rest = getUnhandledProps(Loader, props);\n  var ElementType = getElementType(Loader, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nLoader.handledProps = [\"active\", \"as\", \"children\", \"className\", \"content\", \"disabled\", \"indeterminate\", \"inline\", \"inverted\", \"size\"];\nLoader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** A loader can be active or visible. */\n  active: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A loader can be disabled or hidden. */\n  disabled: PropTypes.bool,\n\n  /** A loader can show it's unsure of how long a task will take. */\n  indeterminate: PropTypes.bool,\n\n  /** Loaders can appear inline with content. */\n  inline: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['centered'])]),\n\n  /** Loaders can have their colors inverted. */\n  inverted: PropTypes.bool,\n\n  /** Loaders can have different sizes. */\n  size: PropTypes.oneOf(SUI.SIZES)\n} : {};\nexport default Loader;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _without from \"lodash/without\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey } from '../../lib';\n/**\n * A rail is used to show accompanying content outside the boundaries of the main view of a site.\n */\n\nfunction Rail(props) {\n  var attached = props.attached,\n      children = props.children,\n      className = props.className,\n      close = props.close,\n      content = props.content,\n      dividing = props.dividing,\n      internal = props.internal,\n      position = props.position,\n      size = props.size;\n  var classes = cx('ui', position, size, useKeyOnly(attached, 'attached'), useKeyOnly(dividing, 'dividing'), useKeyOnly(internal, 'internal'), useKeyOrValueAndKey(close, 'close'), 'rail', className);\n  var rest = getUnhandledProps(Rail, props);\n  var ElementType = getElementType(Rail, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nRail.handledProps = [\"as\", \"attached\", \"children\", \"className\", \"close\", \"content\", \"dividing\", \"internal\", \"position\", \"size\"];\nRail.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** A rail can appear attached to the main viewport. */\n  attached: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A rail can appear closer to the main viewport. */\n  close: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['very'])]),\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A rail can create a division between itself and a container. */\n  dividing: PropTypes.bool,\n\n  /** A rail can attach itself to the inside of a container. */\n  internal: PropTypes.bool,\n\n  /** A rail can be presented on the left or right side of a container. */\n  position: PropTypes.oneOf(SUI.FLOATS).isRequired,\n\n  /** A rail can have different sizes. */\n  size: PropTypes.oneOf(_without(SUI.SIZES, 'medium'))\n} : {};\nexport default Rail;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _invoke from \"lodash/invoke\";\nimport { isRefObject } from '@fluentui/react-component-ref';\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React, { Component, createRef } from 'react';\nimport { customPropTypes, eventStack, getElementType, getUnhandledProps, isBrowser } from '../../lib';\n/**\n * Sticky content stays fixed to the browser viewport while another column of content is visible on the page.\n */\n\nvar Sticky = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Sticky, _Component);\n\n  function Sticky() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n    _this.state = {\n      active: true,\n      sticky: false\n    };\n    _this.stickyRef = /*#__PURE__*/createRef();\n    _this.triggerRef = /*#__PURE__*/createRef();\n\n    _this.addListeners = function (scrollContext) {\n      var scrollContextNode = isRefObject(scrollContext) ? scrollContext.current : scrollContext;\n\n      if (scrollContextNode) {\n        eventStack.sub('resize', _this.handleUpdate, {\n          target: scrollContextNode\n        });\n        eventStack.sub('scroll', _this.handleUpdate, {\n          target: scrollContextNode\n        });\n      }\n    };\n\n    _this.removeListeners = function (scrollContext) {\n      var scrollContextNode = isRefObject(scrollContext) ? scrollContext.current : scrollContext;\n\n      if (scrollContextNode) {\n        eventStack.unsub('resize', _this.handleUpdate, {\n          target: scrollContextNode\n        });\n        eventStack.unsub('scroll', _this.handleUpdate, {\n          target: scrollContextNode\n        });\n      }\n    };\n\n    _this.update = function (e) {\n      var pushing = _this.state.pushing;\n      _this.ticking = false;\n\n      _this.assignRects();\n\n      if (pushing) {\n        if (_this.didReachStartingPoint()) return _this.stickToContextTop(e);\n        if (_this.didTouchScreenBottom()) return _this.stickToScreenBottom(e);\n        return _this.stickToContextBottom(e);\n      }\n\n      if (_this.isOversized()) {\n        if (_this.contextRect.top > 0) return _this.stickToContextTop(e);\n        if (_this.contextRect.bottom < window.innerHeight) return _this.stickToContextBottom(e);\n      }\n\n      if (_this.didTouchScreenTop()) {\n        if (_this.didReachContextBottom()) return _this.stickToContextBottom(e);\n        return _this.stickToScreenTop(e);\n      }\n\n      return _this.stickToContextTop(e);\n    };\n\n    _this.handleUpdate = function (e) {\n      if (!_this.ticking) {\n        _this.ticking = true;\n        _this.frameId = requestAnimationFrame(function () {\n          return _this.update(e);\n        });\n      }\n    };\n\n    _this.assignRects = function () {\n      var context = _this.props.context;\n      var contextNode = isRefObject(context) ? context.current : context || document.body;\n      _this.triggerRect = _this.triggerRef.current.getBoundingClientRect();\n      _this.contextRect = contextNode.getBoundingClientRect();\n      _this.stickyRect = _this.stickyRef.current.getBoundingClientRect();\n    };\n\n    _this.didReachContextBottom = function () {\n      var offset = _this.props.offset;\n      return _this.stickyRect.height + offset >= _this.contextRect.bottom;\n    };\n\n    _this.didReachStartingPoint = function () {\n      return _this.stickyRect.top <= _this.triggerRect.top;\n    };\n\n    _this.didTouchScreenTop = function () {\n      return _this.triggerRect.top < _this.props.offset;\n    };\n\n    _this.didTouchScreenBottom = function () {\n      var bottomOffset = _this.props.bottomOffset;\n      return _this.contextRect.bottom + bottomOffset > window.innerHeight;\n    };\n\n    _this.isOversized = function () {\n      return _this.stickyRect.height > window.innerHeight;\n    };\n\n    _this.pushing = function (pushing) {\n      var possible = _this.props.pushing;\n      if (possible) _this.setState({\n        pushing: pushing\n      });\n    };\n\n    _this.stick = function (e, bound) {\n      _this.setState({\n        bound: bound,\n        sticky: true\n      });\n\n      _invoke(_this.props, 'onStick', e, _this.props);\n    };\n\n    _this.unstick = function (e, bound) {\n      _this.setState({\n        bound: bound,\n        sticky: false\n      });\n\n      _invoke(_this.props, 'onUnstick', e, _this.props);\n    };\n\n    _this.stickToContextBottom = function (e) {\n      _invoke(_this.props, 'onBottom', e, _this.props);\n\n      _this.stick(e, true);\n\n      _this.pushing(true);\n    };\n\n    _this.stickToContextTop = function (e) {\n      _invoke(_this.props, 'onTop', e, _this.props);\n\n      _this.unstick(e, false);\n\n      _this.pushing(false);\n    };\n\n    _this.stickToScreenBottom = function (e) {\n      var bottom = _this.props.bottomOffset;\n\n      _this.stick(e, false);\n\n      _this.setState({\n        bottom: bottom,\n        top: null\n      });\n    };\n\n    _this.stickToScreenTop = function (e) {\n      var top = _this.props.offset;\n\n      _this.stick(e, false);\n\n      _this.setState({\n        top: top,\n        bottom: null\n      });\n    };\n\n    return _this;\n  }\n\n  var _proto = Sticky.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    if (!isBrowser()) return;\n    var active = this.state.active;\n\n    if (active) {\n      this.handleUpdate();\n      this.addListeners(this.props.scrollContext);\n    }\n  };\n\n  Sticky.getDerivedStateFromProps = function getDerivedStateFromProps(props, state) {\n    if (state.active !== props.active && !props.active) {\n      return {\n        active: props.active,\n        sticky: false\n      };\n    }\n\n    return {\n      active: props.active\n    };\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {\n    if (prevState.active === this.state.active) {\n      if (prevProps.scrollContext !== this.props.scrollContext) {\n        this.removeListeners(prevProps.scrollContext);\n        this.addListeners(this.props.scrollContext);\n      }\n\n      return;\n    }\n\n    if (this.state.active) {\n      this.handleUpdate();\n      this.addListeners(this.props.scrollContext);\n      return;\n    }\n\n    this.removeListeners(prevProps.scrollContext);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (!isBrowser()) return;\n    var active = this.state.active;\n\n    if (active) {\n      this.removeListeners(this.props.scrollContext);\n      cancelAnimationFrame(this.frameId);\n    }\n  } // ----------------------------------------\n  // Events\n  // ----------------------------------------\n  ;\n\n  _proto.computeStyle = function computeStyle() {\n    var styleElement = this.props.styleElement;\n    var _this$state = this.state,\n        bottom = _this$state.bottom,\n        bound = _this$state.bound,\n        sticky = _this$state.sticky,\n        top = _this$state.top;\n    if (!sticky) return styleElement;\n    return _extends({\n      bottom: bound ? 0 : bottom,\n      top: bound ? undefined : top,\n      width: this.triggerRect.width\n    }, styleElement);\n  } // Return true when the component reached the bottom of the context\n  ;\n\n  // ----------------------------------------\n  // Render\n  // ----------------------------------------\n  _proto.render = function render() {\n    var _this$props = this.props,\n        children = _this$props.children,\n        className = _this$props.className;\n    var _this$state2 = this.state,\n        bottom = _this$state2.bottom,\n        bound = _this$state2.bound,\n        sticky = _this$state2.sticky;\n    var rest = getUnhandledProps(Sticky, this.props);\n    var ElementType = getElementType(Sticky, this.props);\n    var containerClasses = cx(sticky && 'ui', sticky && 'stuck-container', sticky && (bound ? 'bound-container' : 'fixed-container'), className);\n    var elementClasses = cx('ui', sticky && (bound ? 'bound bottom' : 'fixed'), sticky && !bound && (bottom === null ? 'top' : 'bottom'), 'sticky');\n    var triggerStyles = sticky && this.stickyRect ? {\n      height: this.stickyRect.height\n    } : {};\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: containerClasses\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      ref: this.triggerRef,\n      style: triggerStyles\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: elementClasses,\n      ref: this.stickyRef,\n      style: this.computeStyle()\n    }, children));\n  };\n\n  return Sticky;\n}(Component);\n\nSticky.handledProps = [\"active\", \"as\", \"bottomOffset\", \"children\", \"className\", \"context\", \"offset\", \"onBottom\", \"onStick\", \"onTop\", \"onUnstick\", \"pushing\", \"scrollContext\", \"styleElement\"];\nexport { Sticky as default };\nSticky.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** A Sticky can be active. */\n  active: PropTypes.bool,\n\n  /** Offset in pixels from the bottom of the screen when fixing element to viewport. */\n  bottomOffset: PropTypes.number,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Context which sticky element should stick to. */\n  context: PropTypes.oneOfType([customPropTypes.domNode, customPropTypes.refObject]),\n\n  /** Offset in pixels from the top of the screen when fixing element to viewport. */\n  offset: PropTypes.number,\n\n  /**\n   * Callback when element is bound to bottom of parent container.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onBottom: PropTypes.func,\n\n  /**\n   * Callback when element is fixed to page.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onStick: PropTypes.func,\n\n  /**\n   * Callback when element is bound to top of parent container.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onTop: PropTypes.func,\n\n  /**\n   * Callback when element is unfixed from page.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onUnstick: PropTypes.func,\n\n  /** Whether element should be \"pushed\" by the viewport, attaching to the bottom of the screen when scrolling up. */\n  pushing: PropTypes.bool,\n\n  /** Context which sticky should attach onscroll events. */\n  scrollContext: PropTypes.oneOfType([customPropTypes.domNode, customPropTypes.refObject]),\n\n  /** Custom style for sticky element. */\n  styleElement: PropTypes.object\n} : {};\nSticky.defaultProps = {\n  active: true,\n  bottomOffset: 0,\n  offset: 0,\n  scrollContext: isBrowser() ? window : null\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * An event or an event summary can contain a date.\n */\n\nfunction FeedDate(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var classes = cx('date', className);\n  var rest = getUnhandledProps(FeedDate, props);\n  var ElementType = getElementType(FeedDate, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nFeedDate.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nFeedDate.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nexport default FeedDate;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _map from \"lodash/map\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createHTMLImage, customPropTypes, getElementType, getUnhandledProps, useKeyOnly } from '../../lib';\n/**\n * A feed can contain an extra content.\n */\n\nfunction FeedExtra(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      images = props.images,\n      text = props.text;\n  var classes = cx(useKeyOnly(images, 'images'), useKeyOnly(content || text, 'text'), 'extra', className);\n  var rest = getUnhandledProps(FeedExtra, props);\n  var ElementType = getElementType(FeedExtra, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  } // TODO need a \"collection factory\" to handle creating multiple image elements and their keys\n\n\n  var imageElements = _map(images, function (image, index) {\n    var key = [index, image].join('-');\n    return createHTMLImage(image, {\n      key: key\n    });\n  });\n\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), content, imageElements);\n}\n\nFeedExtra.handledProps = [\"as\", \"children\", \"className\", \"content\", \"images\", \"text\"];\nFeedExtra.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** An event can contain additional information like a set of images. */\n  images: customPropTypes.every([customPropTypes.disallow(['text']), PropTypes.oneOfType([PropTypes.bool, customPropTypes.collectionShorthand])]),\n\n  /** An event can contain additional text information. */\n  text: PropTypes.bool\n} : {};\nexport default FeedExtra;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\nimport Icon from '../../elements/Icon';\n/**\n * A feed can contain a like element.\n */\n\nfunction FeedLike(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      icon = props.icon;\n  var classes = cx('like', className);\n  var rest = getUnhandledProps(FeedLike, props);\n  var ElementType = getElementType(FeedLike, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), Icon.create(icon, {\n    autoGenerateKey: false\n  }), content);\n}\n\nFeedLike.handledProps = [\"as\", \"children\", \"className\", \"content\", \"icon\"];\nFeedLike.defaultProps = {\n  as: 'a'\n};\nFeedLike.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Shorthand for icon. Mutually exclusive with children. */\n  icon: customPropTypes.itemShorthand\n} : {};\nexport default FeedLike;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthand, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\nimport FeedLike from './FeedLike';\n/**\n * A feed can contain a meta.\n */\n\nfunction FeedMeta(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      like = props.like;\n  var classes = cx('meta', className);\n  var rest = getUnhandledProps(FeedMeta, props);\n  var ElementType = getElementType(FeedMeta, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), createShorthand(FeedLike, function (val) {\n    return {\n      content: val\n    };\n  }, like, {\n    autoGenerateKey: false\n  }), content);\n}\n\nFeedMeta.handledProps = [\"as\", \"children\", \"className\", \"content\", \"like\"];\nFeedMeta.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Shorthand for FeedLike. */\n  like: customPropTypes.itemShorthand\n} : {};\nexport default FeedMeta;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * A feed can contain a user element.\n */\n\nfunction FeedUser(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var classes = cx('user', className);\n  var rest = getUnhandledProps(FeedUser, props);\n  var ElementType = getElementType(FeedUser, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nFeedUser.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nFeedUser.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nFeedUser.defaultProps = {\n  as: 'a'\n};\nexport default FeedUser;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthand, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\nimport FeedDate from './FeedDate';\nimport FeedUser from './FeedUser';\n/**\n * A feed can contain a summary.\n */\n\nfunction FeedSummary(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      date = props.date,\n      user = props.user;\n  var classes = cx('summary', className);\n  var rest = getUnhandledProps(FeedSummary, props);\n  var ElementType = getElementType(FeedSummary, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), createShorthand(FeedUser, function (val) {\n    return {\n      content: val\n    };\n  }, user, {\n    autoGenerateKey: false\n  }), content && ' ', content, content && ' ', createShorthand(FeedDate, function (val) {\n    return {\n      content: val\n    };\n  }, date, {\n    autoGenerateKey: false\n  }));\n}\n\nFeedSummary.handledProps = [\"as\", \"children\", \"className\", \"content\", \"date\", \"user\"];\nFeedSummary.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Shorthand for FeedDate. */\n  date: customPropTypes.itemShorthand,\n\n  /** Shorthand for FeedUser. */\n  user: customPropTypes.itemShorthand\n} : {};\nexport default FeedSummary;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthand, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\nimport FeedDate from './FeedDate';\nimport FeedExtra from './FeedExtra';\nimport FeedMeta from './FeedMeta';\nimport FeedSummary from './FeedSummary';\n\nfunction FeedContent(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      extraImages = props.extraImages,\n      extraText = props.extraText,\n      date = props.date,\n      meta = props.meta,\n      summary = props.summary;\n  var classes = cx('content', className);\n  var rest = getUnhandledProps(FeedContent, props);\n  var ElementType = getElementType(FeedContent, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), createShorthand(FeedDate, function (val) {\n    return {\n      content: val\n    };\n  }, date, {\n    autoGenerateKey: false\n  }), createShorthand(FeedSummary, function (val) {\n    return {\n      content: val\n    };\n  }, summary, {\n    autoGenerateKey: false\n  }), content, createShorthand(FeedExtra, function (val) {\n    return {\n      text: true,\n      content: val\n    };\n  }, extraText, {\n    autoGenerateKey: false\n  }), createShorthand(FeedExtra, function (val) {\n    return {\n      images: val\n    };\n  }, extraImages, {\n    autoGenerateKey: false\n  }), createShorthand(FeedMeta, function (val) {\n    return {\n      content: val\n    };\n  }, meta, {\n    autoGenerateKey: false\n  }));\n}\n\nFeedContent.handledProps = [\"as\", \"children\", \"className\", \"content\", \"date\", \"extraImages\", \"extraText\", \"meta\", \"summary\"];\nFeedContent.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** An event can contain a date. */\n  date: customPropTypes.itemShorthand,\n\n  /** Shorthand for FeedExtra with images. */\n  extraImages: FeedExtra.propTypes.images,\n\n  /** Shorthand for FeedExtra with text. */\n  extraText: customPropTypes.itemShorthand,\n\n  /** Shorthand for FeedMeta. */\n  meta: customPropTypes.itemShorthand,\n\n  /** Shorthand for FeedSummary. */\n  summary: customPropTypes.itemShorthand\n} : {};\nexport default FeedContent;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createHTMLImage, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\nimport Icon from '../../elements/Icon';\n/**\n * An event can contain an image or icon label.\n */\n\nfunction FeedLabel(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      icon = props.icon,\n      image = props.image;\n  var classes = cx('label', className);\n  var rest = getUnhandledProps(FeedLabel, props);\n  var ElementType = getElementType(FeedLabel, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), content, Icon.create(icon, {\n    autoGenerateKey: false\n  }), createHTMLImage(image));\n}\n\nFeedLabel.handledProps = [\"as\", \"children\", \"className\", \"content\", \"icon\", \"image\"];\nFeedLabel.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** An event can contain icon label. */\n  icon: customPropTypes.itemShorthand,\n\n  /** An event can contain image label. */\n  image: customPropTypes.itemShorthand\n} : {};\nexport default FeedLabel;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { createShorthand, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\nimport FeedContent from './FeedContent';\nimport FeedLabel from './FeedLabel';\n/**\n * A feed contains an event.\n */\n\nfunction FeedEvent(props) {\n  var content = props.content,\n      children = props.children,\n      className = props.className,\n      date = props.date,\n      extraImages = props.extraImages,\n      extraText = props.extraText,\n      image = props.image,\n      icon = props.icon,\n      meta = props.meta,\n      summary = props.summary;\n  var classes = cx('event', className);\n  var rest = getUnhandledProps(FeedEvent, props);\n  var ElementType = getElementType(FeedEvent, props);\n  var hasContentProp = content || date || extraImages || extraText || meta || summary;\n  var contentProps = {\n    content: content,\n    date: date,\n    extraImages: extraImages,\n    extraText: extraText,\n    meta: meta,\n    summary: summary\n  };\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), createShorthand(FeedLabel, function (val) {\n    return {\n      icon: val\n    };\n  }, icon, {\n    autoGenerateKey: false\n  }), createShorthand(FeedLabel, function (val) {\n    return {\n      image: val\n    };\n  }, image, {\n    autoGenerateKey: false\n  }), hasContentProp && /*#__PURE__*/React.createElement(FeedContent, contentProps), children);\n}\n\nFeedEvent.handledProps = [\"as\", \"children\", \"className\", \"content\", \"date\", \"extraImages\", \"extraText\", \"icon\", \"image\", \"meta\", \"summary\"];\nFeedEvent.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for FeedContent. */\n  content: customPropTypes.itemShorthand,\n\n  /** Shorthand for FeedDate. */\n  date: customPropTypes.itemShorthand,\n\n  /** Shorthand for FeedExtra with images. */\n  extraImages: customPropTypes.itemShorthand,\n\n  /** Shorthand for FeedExtra with content. */\n  extraText: customPropTypes.itemShorthand,\n\n  /** An event can contain icon label. */\n  icon: customPropTypes.itemShorthand,\n\n  /** An event can contain image label. */\n  image: customPropTypes.itemShorthand,\n\n  /** Shorthand for FeedMeta. */\n  meta: customPropTypes.itemShorthand,\n\n  /** Shorthand for FeedSummary. */\n  summary: customPropTypes.itemShorthand\n} : {};\nexport default FeedEvent;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _without from \"lodash/without\";\nimport _map from \"lodash/map\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI } from '../../lib';\nimport FeedContent from './FeedContent';\nimport FeedDate from './FeedDate';\nimport FeedEvent from './FeedEvent';\nimport FeedExtra from './FeedExtra';\nimport FeedLabel from './FeedLabel';\nimport FeedLike from './FeedLike';\nimport FeedMeta from './FeedMeta';\nimport FeedSummary from './FeedSummary';\nimport FeedUser from './FeedUser';\n/**\n * A feed presents user activity chronologically.\n */\n\nfunction Feed(props) {\n  var children = props.children,\n      className = props.className,\n      events = props.events,\n      size = props.size;\n  var classes = cx('ui', size, 'feed', className);\n  var rest = getUnhandledProps(Feed, props);\n  var ElementType = getElementType(Feed, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  var eventElements = _map(events, function (eventProps) {\n    var childKey = eventProps.childKey,\n        date = eventProps.date,\n        meta = eventProps.meta,\n        summary = eventProps.summary,\n        eventData = _objectWithoutPropertiesLoose(eventProps, [\"childKey\", \"date\", \"meta\", \"summary\"]);\n\n    var finalKey = childKey || [date, meta, summary].join('-');\n    return /*#__PURE__*/React.createElement(FeedEvent, _extends({\n      date: date,\n      key: finalKey,\n      meta: meta,\n      summary: summary\n    }, eventData));\n  });\n\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), eventElements);\n}\n\nFeed.handledProps = [\"as\", \"children\", \"className\", \"events\", \"size\"];\nFeed.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand array of props for FeedEvent. */\n  events: customPropTypes.collectionShorthand,\n\n  /** A feed can have different sizes. */\n  size: PropTypes.oneOf(_without(SUI.SIZES, 'mini', 'tiny', 'medium', 'big', 'huge', 'massive'))\n} : {};\nFeed.Content = FeedContent;\nFeed.Date = FeedDate;\nFeed.Event = FeedEvent;\nFeed.Extra = FeedExtra;\nFeed.Label = FeedLabel;\nFeed.Like = FeedLike;\nFeed.Meta = FeedMeta;\nFeed.Summary = FeedSummary;\nFeed.User = FeedUser;\nexport default Feed;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _without from \"lodash/without\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useTextAlignProp } from '../../lib';\n/**\n * A card can contain a description with one or more paragraphs.\n */\n\nfunction CardDescription(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      textAlign = props.textAlign;\n  var classes = cx(useTextAlignProp(textAlign), 'description', className);\n  var rest = getUnhandledProps(CardDescription, props);\n  var ElementType = getElementType(CardDescription, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nCardDescription.handledProps = [\"as\", \"children\", \"className\", \"content\", \"textAlign\"];\nCardDescription.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A card content can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified'))\n} : {};\nexport default CardDescription;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _without from \"lodash/without\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useTextAlignProp } from '../../lib';\n/**\n * A card can contain a header.\n */\n\nfunction CardHeader(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      textAlign = props.textAlign;\n  var classes = cx(useTextAlignProp(textAlign), 'header', className);\n  var rest = getUnhandledProps(CardHeader, props);\n  var ElementType = getElementType(CardHeader, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nCardHeader.handledProps = [\"as\", \"children\", \"className\", \"content\", \"textAlign\"];\nCardHeader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A card header can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified'))\n} : {};\nexport default CardHeader;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _without from \"lodash/without\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useTextAlignProp } from '../../lib';\n/**\n * A card can contain content metadata.\n */\n\nfunction CardMeta(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      textAlign = props.textAlign;\n  var classes = cx(useTextAlignProp(textAlign), 'meta', className);\n  var rest = getUnhandledProps(CardMeta, props);\n  var ElementType = getElementType(CardMeta, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nCardMeta.handledProps = [\"as\", \"children\", \"className\", \"content\", \"textAlign\"];\nCardMeta.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A card meta can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified'))\n} : {};\nexport default CardMeta;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _without from \"lodash/without\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthand, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useTextAlignProp } from '../../lib';\nimport CardDescription from './CardDescription';\nimport CardHeader from './CardHeader';\nimport CardMeta from './CardMeta';\n/**\n * A card can contain blocks of content or extra content meant to be formatted separately from the main content.\n */\n\nfunction CardContent(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      description = props.description,\n      extra = props.extra,\n      header = props.header,\n      meta = props.meta,\n      textAlign = props.textAlign;\n  var classes = cx(useKeyOnly(extra, 'extra'), useTextAlignProp(textAlign), 'content', className);\n  var rest = getUnhandledProps(CardContent, props);\n  var ElementType = getElementType(CardContent, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  if (!childrenUtils.isNil(content)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), content);\n  }\n\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), createShorthand(CardHeader, function (val) {\n    return {\n      content: val\n    };\n  }, header, {\n    autoGenerateKey: false\n  }), createShorthand(CardMeta, function (val) {\n    return {\n      content: val\n    };\n  }, meta, {\n    autoGenerateKey: false\n  }), createShorthand(CardDescription, function (val) {\n    return {\n      content: val\n    };\n  }, description, {\n    autoGenerateKey: false\n  }));\n}\n\nCardContent.handledProps = [\"as\", \"children\", \"className\", \"content\", \"description\", \"extra\", \"header\", \"meta\", \"textAlign\"];\nCardContent.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Shorthand for CardDescription. */\n  description: customPropTypes.itemShorthand,\n\n  /** A card can contain extra content meant to be formatted separately from the main content. */\n  extra: PropTypes.bool,\n\n  /** Shorthand for CardHeader. */\n  header: customPropTypes.itemShorthand,\n\n  /** Shorthand for CardMeta. */\n  meta: customPropTypes.itemShorthand,\n\n  /** A card content can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified'))\n} : {};\nexport default CardContent;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _without from \"lodash/without\";\nimport _map from \"lodash/map\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useTextAlignProp, useWidthProp } from '../../lib';\nimport Card from './Card';\n/**\n * A group of cards.\n */\n\nfunction CardGroup(props) {\n  var centered = props.centered,\n      children = props.children,\n      className = props.className,\n      content = props.content,\n      doubling = props.doubling,\n      items = props.items,\n      itemsPerRow = props.itemsPerRow,\n      stackable = props.stackable,\n      textAlign = props.textAlign;\n  var classes = cx('ui', useKeyOnly(centered, 'centered'), useKeyOnly(doubling, 'doubling'), useKeyOnly(stackable, 'stackable'), useTextAlignProp(textAlign), useWidthProp(itemsPerRow), 'cards', className);\n  var rest = getUnhandledProps(CardGroup, props);\n  var ElementType = getElementType(CardGroup, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  if (!childrenUtils.isNil(content)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), content);\n  }\n\n  var itemsJSX = _map(items, function (item) {\n    var key = item.key || [item.header, item.description].join('-');\n    return /*#__PURE__*/React.createElement(Card, _extends({\n      key: key\n    }, item));\n  });\n\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), itemsJSX);\n}\n\nCardGroup.handledProps = [\"as\", \"centered\", \"children\", \"className\", \"content\", \"doubling\", \"items\", \"itemsPerRow\", \"stackable\", \"textAlign\"];\nCardGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** A group of cards can center itself inside its container. */\n  centered: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A group of cards can double its column width for mobile. */\n  doubling: PropTypes.bool,\n\n  /** Shorthand array of props for Card. */\n  items: customPropTypes.collectionShorthand,\n\n  /** A group of cards can set how many cards should exist in a row. */\n  itemsPerRow: PropTypes.oneOf(SUI.WIDTHS),\n\n  /** A group of cards can automatically stack rows to a single columns on mobile devices. */\n  stackable: PropTypes.bool,\n\n  /** A card group can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified'))\n} : {};\nexport default CardGroup;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly } from '../../lib';\nimport Image from '../../elements/Image';\nimport CardContent from './CardContent';\nimport CardDescription from './CardDescription';\nimport CardGroup from './CardGroup';\nimport CardHeader from './CardHeader';\nimport CardMeta from './CardMeta';\n/**\n * A card displays site content in a manner similar to a playing card.\n */\n\nvar Card = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Card, _Component);\n\n  function Card() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n\n    _this.handleClick = function (e) {\n      var onClick = _this.props.onClick;\n      if (onClick) onClick(e, _this.props);\n    };\n\n    return _this;\n  }\n\n  var _proto = Card.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        centered = _this$props.centered,\n        children = _this$props.children,\n        className = _this$props.className,\n        color = _this$props.color,\n        content = _this$props.content,\n        description = _this$props.description,\n        extra = _this$props.extra,\n        fluid = _this$props.fluid,\n        header = _this$props.header,\n        href = _this$props.href,\n        image = _this$props.image,\n        link = _this$props.link,\n        meta = _this$props.meta,\n        onClick = _this$props.onClick,\n        raised = _this$props.raised;\n    var classes = cx('ui', color, useKeyOnly(centered, 'centered'), useKeyOnly(fluid, 'fluid'), useKeyOnly(link, 'link'), useKeyOnly(raised, 'raised'), 'card', className);\n    var rest = getUnhandledProps(Card, this.props);\n    var ElementType = getElementType(Card, this.props, function () {\n      if (onClick) return 'a';\n    });\n\n    if (!childrenUtils.isNil(children)) {\n      return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n        className: classes,\n        href: href,\n        onClick: this.handleClick\n      }), children);\n    }\n\n    if (!childrenUtils.isNil(content)) {\n      return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n        className: classes,\n        href: href,\n        onClick: this.handleClick\n      }), content);\n    }\n\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes,\n      href: href,\n      onClick: this.handleClick\n    }), Image.create(image, {\n      autoGenerateKey: false,\n      defaultProps: {\n        ui: false,\n        wrapped: true\n      }\n    }), (description || header || meta) && /*#__PURE__*/React.createElement(CardContent, {\n      description: description,\n      header: header,\n      meta: meta\n    }), extra && /*#__PURE__*/React.createElement(CardContent, {\n      extra: true\n    }, extra));\n  };\n\n  return Card;\n}(Component);\n\nCard.handledProps = [\"as\", \"centered\", \"children\", \"className\", \"color\", \"content\", \"description\", \"extra\", \"fluid\", \"header\", \"href\", \"image\", \"link\", \"meta\", \"onClick\", \"raised\"];\nexport { Card as default };\nCard.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** A Card can center itself inside its container. */\n  centered: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A Card can be formatted to display different colors. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Shorthand for CardDescription. */\n  description: customPropTypes.itemShorthand,\n\n  /** Shorthand for primary content of CardContent. */\n  extra: customPropTypes.contentShorthand,\n\n  /** A Card can be formatted to take up the width of its container. */\n  fluid: PropTypes.bool,\n\n  /** Shorthand for CardHeader. */\n  header: customPropTypes.itemShorthand,\n\n  /** Render as an `a` tag instead of a `div` and adds the href attribute. */\n  href: PropTypes.string,\n\n  /** A card can contain an Image component. */\n  image: customPropTypes.itemShorthand,\n\n  /** A card can be formatted to link to other content. */\n  link: PropTypes.bool,\n\n  /** Shorthand for CardMeta. */\n  meta: customPropTypes.itemShorthand,\n\n  /**\n   * Called on click. When passed, the component renders as an `a`\n   * tag by default instead of a `div`.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onClick: PropTypes.func,\n\n  /** A Card can be formatted to raise above the page. */\n  raised: PropTypes.bool\n} : {};\nCard.Content = CardContent;\nCard.Description = CardDescription;\nCard.Group = CardGroup;\nCard.Header = CardHeader;\nCard.Meta = CardMeta;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { customPropTypes, createShorthandFactory, getElementType, getUnhandledProps, SUI, useKeyOnly, useMultipleProp, useTextAlignProp, useValueAndKey, useVerticalAlignProp, useWidthProp } from '../../lib';\n/**\n * A column sub-component for Grid.\n */\n\nfunction GridColumn(props) {\n  var children = props.children,\n      className = props.className,\n      computer = props.computer,\n      color = props.color,\n      floated = props.floated,\n      largeScreen = props.largeScreen,\n      mobile = props.mobile,\n      only = props.only,\n      stretched = props.stretched,\n      tablet = props.tablet,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign,\n      widescreen = props.widescreen,\n      width = props.width;\n  var classes = cx(color, useKeyOnly(stretched, 'stretched'), useMultipleProp(only, 'only'), useTextAlignProp(textAlign), useValueAndKey(floated, 'floated'), useVerticalAlignProp(verticalAlign), useWidthProp(computer, 'wide computer'), useWidthProp(largeScreen, 'wide large screen'), useWidthProp(mobile, 'wide mobile'), useWidthProp(tablet, 'wide tablet'), useWidthProp(widescreen, 'wide widescreen'), useWidthProp(width, 'wide'), 'column', className);\n  var rest = getUnhandledProps(GridColumn, props);\n  var ElementType = getElementType(GridColumn, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nGridColumn.handledProps = [\"as\", \"children\", \"className\", \"color\", \"computer\", \"floated\", \"largeScreen\", \"mobile\", \"only\", \"stretched\", \"tablet\", \"textAlign\", \"verticalAlign\", \"widescreen\", \"width\"];\nGridColumn.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A grid column can be colored. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** A column can specify a width for a computer. */\n  computer: customPropTypes.every([customPropTypes.disallow(['width']), PropTypes.oneOf(SUI.WIDTHS)]),\n\n  /** A column can sit flush against the left or right edge of a row. */\n  floated: PropTypes.oneOf(SUI.FLOATS),\n\n  /** A column can specify a width for a large screen device. */\n  largeScreen: customPropTypes.every([customPropTypes.disallow(['width']), PropTypes.oneOf(SUI.WIDTHS)]),\n\n  /** A column can specify a width for a mobile device. */\n  mobile: customPropTypes.every([customPropTypes.disallow(['width']), PropTypes.oneOf(SUI.WIDTHS)]),\n\n  /** A column can appear only for a specific device, or screen sizes. */\n  only: customPropTypes.multipleProp(SUI.VISIBILITY),\n\n  /** A column can stretch its contents to take up the entire grid or row height. */\n  stretched: PropTypes.bool,\n\n  /** A column can specify a width for a tablet device. */\n  tablet: customPropTypes.every([customPropTypes.disallow(['width']), PropTypes.oneOf(SUI.WIDTHS)]),\n\n  /** A column can specify its text alignment. */\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS),\n\n  /** A column can specify its vertical alignment to have all its columns vertically centered. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS),\n\n  /** A column can specify a width for a wide screen device. */\n  widescreen: customPropTypes.every([customPropTypes.disallow(['width']), PropTypes.oneOf(SUI.WIDTHS)]),\n\n  /** Represents width of column. */\n  width: customPropTypes.every([customPropTypes.disallow(['computer', 'largeScreen', 'mobile', 'tablet', 'widescreen']), PropTypes.oneOf(SUI.WIDTHS)])\n} : {};\nGridColumn.create = createShorthandFactory(GridColumn, function (children) {\n  return {\n    children: children\n  };\n});\nexport default GridColumn;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useMultipleProp, useTextAlignProp, useVerticalAlignProp, useWidthProp } from '../../lib';\n/**\n * A row sub-component for Grid.\n */\n\nfunction GridRow(props) {\n  var centered = props.centered,\n      children = props.children,\n      className = props.className,\n      color = props.color,\n      columns = props.columns,\n      divided = props.divided,\n      only = props.only,\n      reversed = props.reversed,\n      stretched = props.stretched,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign;\n  var classes = cx(color, useKeyOnly(centered, 'centered'), useKeyOnly(divided, 'divided'), useKeyOnly(stretched, 'stretched'), useMultipleProp(only, 'only'), useMultipleProp(reversed, 'reversed'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), useWidthProp(columns, 'column', true), 'row', className);\n  var rest = getUnhandledProps(GridRow, props);\n  var ElementType = getElementType(GridRow, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nGridRow.handledProps = [\"as\", \"centered\", \"children\", \"className\", \"color\", \"columns\", \"divided\", \"only\", \"reversed\", \"stretched\", \"textAlign\", \"verticalAlign\"];\nGridRow.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** A row can have its columns centered. */\n  centered: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A grid row can be colored. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** Represents column count per line in Row. */\n  columns: PropTypes.oneOf([].concat(SUI.WIDTHS, ['equal'])),\n\n  /** A row can have dividers between its columns. */\n  divided: PropTypes.bool,\n\n  /** A row can appear only for a specific device, or screen sizes. */\n  only: customPropTypes.multipleProp(SUI.VISIBILITY),\n\n  /** A row can specify that its columns should reverse order at different device sizes. */\n  reversed: customPropTypes.multipleProp(['computer', 'computer vertically', 'mobile', 'mobile vertically', 'tablet', 'tablet vertically']),\n\n  /** A row can stretch its contents to take up the entire column height. */\n  stretched: PropTypes.bool,\n\n  /** A row can specify its text alignment. */\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS),\n\n  /** A row can specify its vertical alignment to have all its columns vertically centered. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS)\n} : {};\nexport default GridRow;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey, useMultipleProp, useTextAlignProp, useVerticalAlignProp, useWidthProp } from '../../lib';\nimport GridColumn from './GridColumn';\nimport GridRow from './GridRow';\n/**\n * A grid is used to harmonize negative space in a layout.\n */\n\nfunction Grid(props) {\n  var celled = props.celled,\n      centered = props.centered,\n      children = props.children,\n      className = props.className,\n      columns = props.columns,\n      container = props.container,\n      divided = props.divided,\n      doubling = props.doubling,\n      inverted = props.inverted,\n      padded = props.padded,\n      relaxed = props.relaxed,\n      reversed = props.reversed,\n      stackable = props.stackable,\n      stretched = props.stretched,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign;\n  var classes = cx('ui', useKeyOnly(centered, 'centered'), useKeyOnly(container, 'container'), useKeyOnly(doubling, 'doubling'), useKeyOnly(inverted, 'inverted'), useKeyOnly(stackable, 'stackable'), useKeyOnly(stretched, 'stretched'), useKeyOrValueAndKey(celled, 'celled'), useKeyOrValueAndKey(divided, 'divided'), useKeyOrValueAndKey(padded, 'padded'), useKeyOrValueAndKey(relaxed, 'relaxed'), useMultipleProp(reversed, 'reversed'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), useWidthProp(columns, 'column', true), 'grid', className);\n  var rest = getUnhandledProps(Grid, props);\n  var ElementType = getElementType(Grid, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nGrid.handledProps = [\"as\", \"celled\", \"centered\", \"children\", \"className\", \"columns\", \"container\", \"divided\", \"doubling\", \"inverted\", \"padded\", \"relaxed\", \"reversed\", \"stackable\", \"stretched\", \"textAlign\", \"verticalAlign\"];\nGrid.Column = GridColumn;\nGrid.Row = GridRow;\nGrid.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** A grid can have rows divided into cells. */\n  celled: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['internally'])]),\n\n  /** A grid can have its columns centered. */\n  centered: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Represents column count per row in Grid. */\n  columns: PropTypes.oneOf([].concat(SUI.WIDTHS, ['equal'])),\n\n  /** A grid can be combined with a container to use the available layout and alignment. */\n  container: PropTypes.bool,\n\n  /** A grid can have dividers between its columns. */\n  divided: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['vertically'])]),\n\n  /** A grid can double its column width on tablet and mobile sizes. */\n  doubling: PropTypes.bool,\n\n  /** A grid's colors can be inverted. */\n  inverted: PropTypes.bool,\n\n  /** A grid can preserve its vertical and horizontal gutters on first and last columns. */\n  padded: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['horizontally', 'vertically'])]),\n\n  /** A grid can increase its gutters to allow for more negative space. */\n  relaxed: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['very'])]),\n\n  /** A grid can specify that its columns should reverse order at different device sizes. */\n  reversed: customPropTypes.multipleProp(['computer', 'computer vertically', 'mobile', 'mobile vertically', 'tablet', 'tablet vertically']),\n\n  /** A grid can have its columns stack on-top of each other after reaching mobile breakpoints. */\n  stackable: PropTypes.bool,\n\n  /** A grid can stretch its contents to take up the entire grid height. */\n  stretched: PropTypes.bool,\n\n  /** A grid can specify its text alignment. */\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS),\n\n  /** A grid can specify its vertical alignment to have all its columns vertically centered. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS)\n} : {};\nexport default Grid;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _without from \"lodash/without\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly } from '../../lib';\n/**\n * A group of segments can be formatted to appear together.\n */\n\nfunction SegmentGroup(props) {\n  var children = props.children,\n      className = props.className,\n      compact = props.compact,\n      content = props.content,\n      horizontal = props.horizontal,\n      piled = props.piled,\n      raised = props.raised,\n      size = props.size,\n      stacked = props.stacked;\n  var classes = cx('ui', size, useKeyOnly(compact, 'compact'), useKeyOnly(horizontal, 'horizontal'), useKeyOnly(piled, 'piled'), useKeyOnly(raised, 'raised'), useKeyOnly(stacked, 'stacked'), 'segments', className);\n  var rest = getUnhandledProps(SegmentGroup, props);\n  var ElementType = getElementType(SegmentGroup, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nSegmentGroup.handledProps = [\"as\", \"children\", \"className\", \"compact\", \"content\", \"horizontal\", \"piled\", \"raised\", \"size\", \"stacked\"];\nSegmentGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A segment may take up only as much space as is necessary. */\n  compact: PropTypes.bool,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Formats content to be aligned horizontally. */\n  horizontal: PropTypes.bool,\n\n  /** Formatted to look like a pile of pages. */\n  piled: PropTypes.bool,\n\n  /** A segment group may be formatted to raise above the page. */\n  raised: PropTypes.bool,\n\n  /** A segment group can have different sizes. */\n  size: PropTypes.oneOf(_without(SUI.SIZES, 'medium')),\n\n  /** Formatted to show it contains multiple pages. */\n  stacked: PropTypes.bool\n} : {};\nexport default SegmentGroup;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * A placeholder segment can be inline.\n */\n\nfunction SegmentInline(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var classes = cx('inline', className);\n  var rest = getUnhandledProps(SegmentInline, props);\n  var ElementType = getElementType(SegmentInline, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nSegmentInline.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nSegmentInline.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nexport default SegmentInline;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _without from \"lodash/without\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey, useTextAlignProp, useValueAndKey } from '../../lib';\nimport SegmentGroup from './SegmentGroup';\nimport SegmentInline from './SegmentInline';\n/**\n * A segment is used to create a grouping of related content.\n */\n\nfunction Segment(props) {\n  var attached = props.attached,\n      basic = props.basic,\n      children = props.children,\n      circular = props.circular,\n      className = props.className,\n      clearing = props.clearing,\n      color = props.color,\n      compact = props.compact,\n      content = props.content,\n      disabled = props.disabled,\n      floated = props.floated,\n      inverted = props.inverted,\n      loading = props.loading,\n      placeholder = props.placeholder,\n      padded = props.padded,\n      piled = props.piled,\n      raised = props.raised,\n      secondary = props.secondary,\n      size = props.size,\n      stacked = props.stacked,\n      tertiary = props.tertiary,\n      textAlign = props.textAlign,\n      vertical = props.vertical;\n  var classes = cx('ui', color, size, useKeyOnly(basic, 'basic'), useKeyOnly(circular, 'circular'), useKeyOnly(clearing, 'clearing'), useKeyOnly(compact, 'compact'), useKeyOnly(disabled, 'disabled'), useKeyOnly(inverted, 'inverted'), useKeyOnly(loading, 'loading'), useKeyOnly(placeholder, 'placeholder'), useKeyOnly(piled, 'piled'), useKeyOnly(raised, 'raised'), useKeyOnly(secondary, 'secondary'), useKeyOnly(stacked, 'stacked'), useKeyOnly(tertiary, 'tertiary'), useKeyOnly(vertical, 'vertical'), useKeyOrValueAndKey(attached, 'attached'), useKeyOrValueAndKey(padded, 'padded'), useTextAlignProp(textAlign), useValueAndKey(floated, 'floated'), 'segment', className);\n  var rest = getUnhandledProps(Segment, props);\n  var ElementType = getElementType(Segment, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nSegment.handledProps = [\"as\", \"attached\", \"basic\", \"children\", \"circular\", \"className\", \"clearing\", \"color\", \"compact\", \"content\", \"disabled\", \"floated\", \"inverted\", \"loading\", \"padded\", \"piled\", \"placeholder\", \"raised\", \"secondary\", \"size\", \"stacked\", \"tertiary\", \"textAlign\", \"vertical\"];\nSegment.Group = SegmentGroup;\nSegment.Inline = SegmentInline;\nSegment.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Attach segment to other content, like a header. */\n  attached: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['top', 'bottom'])]),\n\n  /** A basic segment has no special formatting. */\n  basic: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** A segment can be circular. */\n  circular: PropTypes.bool,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A segment can clear floated content. */\n  clearing: PropTypes.bool,\n\n  /** Segment can be colored. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** A segment may take up only as much space as is necessary. */\n  compact: PropTypes.bool,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A segment may show its content is disabled. */\n  disabled: PropTypes.bool,\n\n  /** Segment content can be floated to the left or right. */\n  floated: PropTypes.oneOf(SUI.FLOATS),\n\n  /** A segment can have its colors inverted for contrast. */\n  inverted: PropTypes.bool,\n\n  /** A segment may show its content is being loaded. */\n  loading: PropTypes.bool,\n\n  /** A segment can increase its padding. */\n  padded: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['very'])]),\n\n  /** A segment can be used to reserve space for conditionally displayed content. */\n  placeholder: PropTypes.bool,\n\n  /** Formatted to look like a pile of pages. */\n  piled: PropTypes.bool,\n\n  /** A segment may be formatted to raise above the page. */\n  raised: PropTypes.bool,\n\n  /** A segment can be formatted to appear less noticeable. */\n  secondary: PropTypes.bool,\n\n  /** A segment can have different sizes. */\n  size: PropTypes.oneOf(_without(SUI.SIZES, 'medium')),\n\n  /** Formatted to show it contains multiple pages. */\n  stacked: PropTypes.bool,\n\n  /** A segment can be formatted to appear even less noticeable. */\n  tertiary: PropTypes.bool,\n\n  /** Formats content to be aligned as part of a vertical group. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified')),\n\n  /** Formats content to be aligned vertically. */\n  vertical: PropTypes.bool\n} : {};\nexport default Segment;"],"sourceRoot":""}