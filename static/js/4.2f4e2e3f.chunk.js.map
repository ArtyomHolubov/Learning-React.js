{"version":3,"sources":["hw1/components/ProductRow.js","hw1/components/AddProductForm.js","hw1/components/ProductTable.js","hw1/components/HomeWork1.js"],"names":["ProductRow","props","onEdit","setState","isEdit","onCancel","editedName","data","title","editedPrice","price","editedPricePcs","price_pcs","editedImage","images","preview","onChangeName","e","editedTitle","target","value","onChangePrice","toFixed","onChangePricePcs","updateProduct","state","product","updaiting","setTimeout","onUpdateProduct","remove","openConfirmDelete","removeCancel","removeConfirm","removing","onRemoveProduct","id","this","Table","Row","disabled","Cell","Input","fluid","placeholder","onChange","type","Header","as","textAlign","labelPosition","Label","basic","className","Image","src","size","verticalAlign","collapsing","Button","animated","primary","loading","onClick","Content","hidden","visible","Icon","name","color","Confirm","open","confirmButton","header","content","onConfirm","Component","randomInteger","min","max","rand","Math","random","round","AddProductForm","cancel","addProduct","newProduct","adding","ProductTable","products","removeProduct","filter","i","updatedProduct","users","map","addNewProduct","prevState","isAddingNewProduct","celled","selectable","HeaderCell","Body","key","HomeWork1","href","rel"],"mappings":"6+jPA0LeA,E,kDArLX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAcVC,OAAS,WACL,EAAKC,SAAS,CAAEC,QAAQ,KAhBT,EAmBnBC,SAAW,WACP,EAAKF,SAAS,CACVC,QAAQ,EACRE,WAAY,EAAKL,MAAMM,KAAKC,MAC5BC,YAAa,EAAKR,MAAMM,KAAKG,MAC7BC,eAAgB,EAAKV,MAAMM,KAAKK,UAChCC,YAAa,EAAKZ,MAAMM,KAAKO,OAAOC,WAzBzB,EA6BnBC,aAAe,SAACC,GACZ,EAAKd,SAAS,CACVe,YAAaD,EAAEE,OAAOC,SA/BX,EAmCnBC,cAAgB,SAACJ,GACb,EAAKd,SAAS,CACVM,YAAaQ,EAAEE,OAAOC,MACtBT,gBAAiBM,EAAEE,OAAOC,MAAQ,IAAIE,QAAQ,MAtCnC,EA0CnBC,iBAAmB,SAACN,GAChB,EAAKd,SAAS,CACVQ,eAAgBM,EAAEE,OAAOC,MACzBX,aAA+B,GAAjBQ,EAAEE,OAAOC,OAAYE,QAAQ,MA7ChC,EAiDnBE,cAAgB,WACZ,EAAKvB,MAAMM,KAAKC,MAAQ,EAAKiB,MAAMP,YACnC,EAAKjB,MAAMM,KAAKG,MAAQ,EAAKe,MAAMhB,YACnC,EAAKR,MAAMM,KAAKK,UAAY,EAAKa,MAAMd,eACvC,EAAKV,MAAMM,KAAKO,OAAOC,QAAU,EAAKU,MAAMZ,YAE5C,IAAMa,EAAU,EAAKzB,MAAMM,KAE3B,EAAKJ,SAAS,CAAEwB,WAAW,IAE3BC,YAAW,WACP,EAAK3B,MAAM4B,gBAAgBH,GAC3B,EAAKvB,SAAS,CAAEC,QAAQ,IACxB,EAAKD,SAAS,CAAEwB,WAAW,MAC5B,MA/DY,EAkEnBG,OAAS,WACL,EAAK3B,SAAS,CAAE4B,mBAAmB,KAnEpB,EAsEnBC,aAAe,WACX,EAAK7B,SAAS,CAAE4B,mBAAmB,KAvEpB,EA0EnBE,cAAgB,WACZ,EAAK9B,SAAS,CAAE4B,mBAAmB,IACnC,EAAK5B,SAAS,CAAE+B,UAAU,IAC1BN,YAAW,WACP,EAAKzB,SAAS,CAAE+B,UAAU,IAC1B,EAAKC,gBAAgB,EAAKlC,MAAMM,KAAK6B,MACtC,MA9EH,EAAKX,MAAQ,CACTlB,KAAMN,EAAMM,KACZW,YAAajB,EAAMM,KAAKC,MACxBC,YAAaR,EAAMM,KAAKG,MACxBC,eAAgBV,EAAMM,KAAKK,UAC3BC,YAAaZ,EAAMM,KAAKO,OAAOC,QAC/BX,QAAQ,EACR+B,gBAAiB,EAAKlC,MAAMkC,iBAGhC,EAAKA,gBAAkB,EAAKlC,MAAMkC,gBAZnB,E,qDAmFT,IAAD,EACqEE,KAAKZ,MAAvErB,EADH,EACGA,OAAQc,EADX,EACWA,YAAaT,EADxB,EACwBA,YAAaE,EADrC,EACqCA,eADrC,KACqDE,YACxBwB,KAAKpC,OAA/BM,EAFH,EAEGA,KAFH,EAES4B,gBACd,OACI,kBAACG,EAAA,EAAMC,IAAP,CAAWC,SAAUH,KAAKZ,MAAMS,UAAYG,KAAKZ,MAAME,WACnD,kBAACW,EAAA,EAAMG,KAAP,KAEQrC,EACM,kBAACsC,EAAA,EAAD,CAAOC,OAAK,EAACC,YAAY,OAAOC,SAAUR,KAAKrB,aAAcI,MAAOF,EAAa4B,KAAK,SACtF,kBAACC,EAAA,EAAD,CAAQC,GAAG,KAAKC,UAAU,QACvB1C,EAAKC,QAItB,kBAAC8B,EAAA,EAAMG,KAAP,KAEQrC,EACM,kBAACsC,EAAA,EAAD,CAAOG,SAAUR,KAAKhB,cAAeD,MAAOX,EAAayC,cAAc,QAAQJ,KAAK,OAAOF,YAAY,aACrG,kBAACO,EAAA,EAAD,CAAOC,OAAK,GAAZ,UACA,2BAAOC,UAAU,iBAEnB9C,EAAKG,OAGnB,kBAAC4B,EAAA,EAAMG,KAAP,KAEQrC,EACM,kBAACsC,EAAA,EAAD,CAAOG,SAAUR,KAAKd,iBAAkBH,MAAOT,EAAgBuC,cAAc,QAAQJ,KAAK,OAAOF,YAAY,aAC3G,kBAACO,EAAA,EAAD,CAAOC,OAAK,GAAZ,KACA,2BAAOC,UAAU,iBAEnB9C,EAAKK,WAGnB,kBAAC0B,EAAA,EAAMG,KAAP,CAAYQ,UAAU,SAClB,kBAACK,EAAA,EAAD,CAAOC,IAAKhD,EAAKO,OAAOC,QAASyC,KAAK,OAAOC,cAAc,SAE/D,kBAACnB,EAAA,EAAMG,KAAP,CAAYiB,YAAU,IAChBtD,GACE,kBAACuD,EAAA,EAAD,CAAQC,SAAS,OACbC,SAAO,EACPC,QAASzB,KAAKZ,MAAME,UACpBoC,QAAS1B,KAAKnC,QACd,kBAACyD,EAAA,EAAOK,QAAR,CAAgBC,QAAM,GAAtB,QACA,kBAACN,EAAA,EAAOK,QAAR,CAAgBE,SAAO,GACnB,kBAACC,EAAA,EAAD,CAAMC,KAAK,YAIrBhE,GACE,kBAACuD,EAAA,EAAD,CAAQC,SAAS,OACbS,MAAM,MACNP,QAASzB,KAAKZ,MAAMS,SACpB6B,QAAS1B,KAAKP,QACd,kBAAC6B,EAAA,EAAOK,QAAR,CAAgBC,QAAM,GAAtB,UACA,kBAACN,EAAA,EAAOK,QAAR,CAAgBE,SAAO,GACnB,kBAACC,EAAA,EAAD,CAAMC,KAAK,aAKtBhE,GACG,kBAACuD,EAAA,EAAD,CAAQC,SAAS,OACbC,SAAO,EACPC,QAASzB,KAAKZ,MAAME,UACpBoC,QAAS1B,KAAKb,eACd,kBAACmC,EAAA,EAAOK,QAAR,CAAgBC,QAAM,GAAtB,QACA,kBAACN,EAAA,EAAOK,QAAR,CAAgBE,SAAO,GACnB,kBAACC,EAAA,EAAD,CAAMC,KAAK,YAItBhE,GACG,kBAACuD,EAAA,EAAD,CAAQC,SAAS,OACbS,MAAM,MACNN,QAAS1B,KAAKhC,UACd,kBAACsD,EAAA,EAAOK,QAAR,CAAgBC,QAAM,GAAtB,UACA,kBAACN,EAAA,EAAOK,QAAR,CAAgBE,SAAO,GACnB,kBAACC,EAAA,EAAD,CAAMC,KAAK,2BAM3B,kBAACE,EAAA,EAAD,CACIC,KAAMlC,KAAKZ,MAAMM,kBACjByC,cAAe,SACfC,OAAQ,yBACRC,QAASnE,EAAKC,MACdH,SAAUgC,KAAKL,aACf2C,UAAWtC,KAAKJ,qB,GA/KX2C,aCAzB,SAASC,EAAcC,EAAKC,GACxB,IAAIC,EAAOF,EAAMG,KAAKC,UAAYH,EAAMD,GACxC,OAAOG,KAAKE,MAAMH,G,IAgHPI,E,kDA5GX,WAAYnF,GAAQ,IAAD,8BACf,cAAMA,IAWVI,SAAW,WACP,EAAKgF,UAbU,EAgBnBrE,aAAe,SAACC,GACZ,EAAKd,SAAS,CACVe,YAAaD,EAAEE,OAAOC,SAlBX,EAsBnBC,cAAgB,SAACJ,GACb,EAAKd,SAAS,CACVM,YAAaQ,EAAEE,OAAOC,MACtBT,gBAAiBM,EAAEE,OAAOC,MAAQ,IAAIE,QAAQ,MAzBnC,EA6BnBC,iBAAmB,SAACN,GAChB,EAAKd,SAAS,CACVQ,eAAgBM,EAAEE,OAAOC,MACzBX,aAA+B,GAAjBQ,EAAEE,OAAOC,OAAYE,QAAQ,MAhChC,EAoCnBgE,WAAa,WACT,IAAIC,EAAa,CACbnD,GAAIyC,EAAc,IAAO,KACzBrE,MAAO,EAAKiB,MAAMP,YAClBR,MAAO,EAAKe,MAAMhB,YAClBG,UAAW,EAAKa,MAAMd,eACtBG,OAAQ,CACJC,QAAS,EAAKU,MAAMZ,cAI5B,EAAKV,SAAS,CAAEqF,QAAQ,IACxB5D,YAAW,WACP,EAAKzB,SAAS,CACVqF,QAAQ,EACRtE,YAAa,GACbT,YAAa,EACbE,eAAgB,EAChBE,YAAa,KAEjB,EAAKZ,MAAMqF,WAAWC,KACvB,MAvDH,EAAK9D,MAAQ,CACTP,YAAa,GACbT,YAAa,EACbE,eAAgB,EAChBE,YAAa,IAGjB,EAAKwE,OAAS,EAAKpF,MAAMoF,OATV,E,qDA4DT,IAAD,EACqEhD,KAAKZ,MAA/DP,GADX,EACGd,OADH,EACWc,aAAaT,EADxB,EACwBA,YAAaE,EADrC,EACqCA,eADrC,EACqDE,YAC9BwB,KAAKpC,MAAzBkC,gBACR,OACI,kBAACG,EAAA,EAAMC,IAAP,CAAWC,SAAUH,KAAKZ,MAAMS,UAAYG,KAAKZ,MAAME,WACnD,kBAACW,EAAA,EAAMG,KAAP,KACI,yBAAKY,UAAU,oBACX,kBAACX,EAAA,EAAD,CAAOE,YAAY,mBAAmBC,SAAUR,KAAKrB,aAAcI,MAAOF,EAAa4B,KAAK,WAGpG,kBAACR,EAAA,EAAMG,KAAP,KACI,kBAACC,EAAA,EAAD,CAAOG,SAAUR,KAAKhB,cAAeD,MAAOX,EAAayC,cAAc,QAAQJ,KAAK,OAAOF,YAAY,aACnG,kBAACO,EAAA,EAAD,CAAOC,OAAK,GAAZ,UACA,2BAAOC,UAAU,kBAGzB,kBAACf,EAAA,EAAMG,KAAP,KACI,kBAACC,EAAA,EAAD,CAAOG,SAAUR,KAAKd,iBAAkBH,MAAOT,EAAgBuC,cAAc,QAAQJ,KAAK,OAAOF,YAAY,aACzG,kBAACO,EAAA,EAAD,CAAOC,OAAK,GAAZ,KACA,2BAAOC,UAAU,kBAGzB,kBAACf,EAAA,EAAMG,KAAP,MAEA,kBAACH,EAAA,EAAMG,KAAP,CAAYiB,YAAU,GAClB,kBAACC,EAAA,EAAD,CAAQC,SAAS,OACbC,SAAO,EACPC,QAASzB,KAAKZ,MAAM+D,OACpBzB,QAAS1B,KAAKiD,YACd,kBAAC3B,EAAA,EAAOK,QAAR,CAAgBC,QAAM,GAAtB,OACA,kBAACN,EAAA,EAAOK,QAAR,CAAgBE,SAAO,GACnB,kBAACC,EAAA,EAAD,CAAMC,KAAK,YAGnB,kBAACT,EAAA,EAAD,CAAQC,SAAS,OACbS,MAAM,MACNN,QAAS1B,KAAKhC,UACd,kBAACsD,EAAA,EAAOK,QAAR,CAAgBC,QAAM,GAAtB,UACA,kBAACN,EAAA,EAAOK,QAAR,CAAgBE,SAAO,GACnB,kBAACC,EAAA,EAAD,CAAMC,KAAK,gC,GApGVQ,aCoEda,E,4MArEXhE,MAAQ,CACJiE,SAAU,GACV5B,SAAS,G,EAMb6B,cAAgB,SAACvD,GAAQ,IACbsD,EAAa,EAAKjE,MAAlBiE,SACR,EAAKvF,SAAS,CACVuF,SAAUA,EAASE,QAAO,SAAClE,EAASmE,GAAV,OAAgBzD,IAAOV,EAAQU,S,EAIjEZ,cAAgB,SAACsE,GAAoB,IACzBJ,EAAa,EAAKjE,MAAlBiE,SACR,EAAKvF,SAAS,CACV4F,MAAOL,EAASM,KAAI,SAACtE,GAAD,OAAaoE,EAAe1D,KAAOV,EAAQU,GAAK0D,EAAiBpE,Q,EAI7FuE,cAAgB,WACZ,EAAK9F,UAAS,SAAC+F,GAAD,MAAgB,CAAEC,oBAAqBD,EAAUC,wB,EAGnEb,WAAa,SAACC,GAAgB,IAClBG,EAAa,EAAKjE,MAAlBiE,SACR,EAAKvF,SAAS,CACVuF,SAAS,CAAEH,GAAH,mBAAkBG,O,kEAxB9BrD,KAAKlC,SAAS,CAAEuF,SAAUA,EAASnF,S,+BA4B7B,IAAD,SACyB8B,KAAKZ,MAA3BiE,EADH,EACGA,SACR,OAFK,EACa5B,QACE,2CAEhB,6BACI,kBAACH,EAAA,EAAD,CAAQI,QAAS1B,KAAK4D,eAAtB,eACA,kBAAC3D,EAAA,EAAD,CAAO8D,QAAM,EAACC,YAAU,EAAC3C,YAAU,GAC/B,kBAACpB,EAAA,EAAMS,OAAP,KACI,kBAACT,EAAA,EAAMC,IAAP,KACI,kBAACD,EAAA,EAAMgE,WAAP,aACA,kBAAChE,EAAA,EAAMgE,WAAP,kBACA,kBAAChE,EAAA,EAAMgE,WAAP,kBACA,kBAAChE,EAAA,EAAMgE,WAAP,cACA,kBAAChE,EAAA,EAAMgE,WAAP,kBAIR,kBAAChE,EAAA,EAAMiE,KAAP,KACKlE,KAAKZ,MAAM0E,oBACR,kBAAC,EAAD,CAAgBd,OAAQhD,KAAK4D,cACbX,WAAYjD,KAAKiD,aACpCI,EAASM,KAAI,SAAAtE,GAAO,OACjB,kBAAC,EAAD,CACInB,KAAMmB,EACN8E,IAAK9E,EAAQU,GACbD,gBAAiB,EAAKwD,cACtB9D,gBAAiB,EAAKL,0B,GA5D3BoD,aCOZ6B,UAVf,WACE,OACE,yBAAKrE,GAAG,OACN,2CACA,oFAAyD,uBAAGsE,KAAK,0DAA0DvF,OAAO,SAASwF,IAAI,uBAAtF,4DACzD,kBAAC,EAAD","file":"static/js/4.2f4e2e3f.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Header, Table, Button, Icon, Image, Input, Label, Confirm } from 'semantic-ui-react'\r\n\r\nclass ProductRow extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: props.data,\r\n            editedTitle: props.data.title,\r\n            editedPrice: props.data.price,\r\n            editedPricePcs: props.data.price_pcs,\r\n            editedImage: props.data.images.preview,\r\n            isEdit: false,\r\n            onRemoveProduct: this.props.onRemoveProduct\r\n        }\r\n\r\n        this.onRemoveProduct = this.props.onRemoveProduct;\r\n    }\r\n\r\n    onEdit = () => {\r\n        this.setState({ isEdit: true })\r\n    }\r\n\r\n    onCancel = () => {\r\n        this.setState({\r\n            isEdit: false,\r\n            editedName: this.props.data.title,\r\n            editedPrice: this.props.data.price,\r\n            editedPricePcs: this.props.data.price_pcs,\r\n            editedImage: this.props.data.images.preview\r\n        })\r\n    }\r\n\r\n    onChangeName = (e) => {\r\n        this.setState({\r\n            editedTitle: e.target.value\r\n        })\r\n    }\r\n\r\n    onChangePrice = (e) => {\r\n        this.setState({\r\n            editedPrice: e.target.value,\r\n            editedPricePcs: (e.target.value / 28).toFixed(2)\r\n        })\r\n    }\r\n\r\n    onChangePricePcs = (e) => {\r\n        this.setState({\r\n            editedPricePcs: e.target.value,\r\n            editedPrice: (e.target.value * 28).toFixed(0),\r\n        })\r\n    }\r\n\r\n    updateProduct = () => {\r\n        this.props.data.title = this.state.editedTitle;\r\n        this.props.data.price = this.state.editedPrice;\r\n        this.props.data.price_pcs = this.state.editedPricePcs;\r\n        this.props.data.images.preview = this.state.editedImage;\r\n\r\n        const product = this.props.data;\r\n\r\n        this.setState({ updaiting: true });\r\n\r\n        setTimeout(() => {\r\n            this.props.onUpdateProduct(product);\r\n            this.setState({ isEdit: false });\r\n            this.setState({ updaiting: false });\r\n        }, 1000);\r\n    }\r\n\r\n    remove = () => {\r\n        this.setState({ openConfirmDelete: true });\r\n    }\r\n\r\n    removeCancel = () => {\r\n        this.setState({ openConfirmDelete: false });\r\n    }\r\n\r\n    removeConfirm = () => {\r\n        this.setState({ openConfirmDelete: false });\r\n        this.setState({ removing: true });\r\n        setTimeout(() => {\r\n            this.setState({ removing: false });\r\n            this.onRemoveProduct(this.props.data.id);\r\n        }, 1000);\r\n    }\r\n\r\n    render() {\r\n        const { isEdit, editedTitle, editedPrice, editedPricePcs, editedImage } = this.state;\r\n        const { data, onRemoveProduct } = this.props;\r\n        return (\r\n            <Table.Row disabled={this.state.removing || this.state.updaiting}>\r\n                <Table.Cell>\r\n                    {\r\n                        isEdit\r\n                            ? <Input fluid placeholder=\"name\" onChange={this.onChangeName} value={editedTitle} type=\"text\" />\r\n                            : <Header as='h4' textAlign='left'>\r\n                                {data.title}\r\n                            </Header>\r\n                    }\r\n                </Table.Cell>\r\n                <Table.Cell>\r\n                    {\r\n                        isEdit\r\n                            ? <Input onChange={this.onChangePrice} value={editedPrice} labelPosition='right' type='text' placeholder='Price UAH'>\r\n                                <Label basic>₴</Label>\r\n                                <input className=\"price-input\" />\r\n                            </Input>\r\n                            : data.price\r\n                    }\r\n                </Table.Cell>\r\n                <Table.Cell>\r\n                    {\r\n                        isEdit\r\n                            ? <Input onChange={this.onChangePricePcs} value={editedPricePcs} labelPosition='right' type='text' placeholder='Price USD'>\r\n                                <Label basic>$</Label>\r\n                                <input className=\"price-input\" />\r\n                            </Input>\r\n                            : data.price_pcs\r\n                    }\r\n                </Table.Cell>\r\n                <Table.Cell textAlign='right'>\r\n                    <Image src={data.images.preview} size='mini' verticalAlign='top' />\r\n                </Table.Cell>\r\n                <Table.Cell collapsing>\r\n                    {!isEdit &&\r\n                        <Button animated='fade'\r\n                            primary\r\n                            loading={this.state.updaiting}\r\n                            onClick={this.onEdit}>\r\n                            <Button.Content hidden>Edit</Button.Content>\r\n                            <Button.Content visible>\r\n                                <Icon name='edit' />\r\n                            </Button.Content>\r\n                        </Button>\r\n                    }\r\n                    {!isEdit &&\r\n                        <Button animated='fade'\r\n                            color='red'\r\n                            loading={this.state.removing}\r\n                            onClick={this.remove}>\r\n                            <Button.Content hidden>Delete</Button.Content>\r\n                            <Button.Content visible>\r\n                                <Icon name='delete' />\r\n                            </Button.Content>\r\n                        </Button>\r\n                    }\r\n\r\n                    {isEdit &&\r\n                        <Button animated='fade'\r\n                            primary\r\n                            loading={this.state.updaiting}\r\n                            onClick={this.updateProduct}>\r\n                            <Button.Content hidden>Save</Button.Content>\r\n                            <Button.Content visible>\r\n                                <Icon name='check' />\r\n                            </Button.Content>\r\n                        </Button>\r\n                    }\r\n                    {isEdit &&\r\n                        <Button animated='fade'\r\n                            color='red'\r\n                            onClick={this.onCancel}>\r\n                            <Button.Content hidden>Cancel</Button.Content>\r\n                            <Button.Content visible>\r\n                                <Icon name='stop circle outline' />\r\n                            </Button.Content>\r\n                        </Button>\r\n                    }\r\n                </Table.Cell>\r\n\r\n                <Confirm\r\n                    open={this.state.openConfirmDelete}\r\n                    confirmButton={'Delete'}\r\n                    header={'Do you want to delete?'}\r\n                    content={data.title}\r\n                    onCancel={this.removeCancel}\r\n                    onConfirm={this.removeConfirm}\r\n                />\r\n\r\n            </Table.Row>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProductRow;","import React, { Component } from 'react';\r\nimport { Header, Table, Button, Icon, Image, Input, Label, Confirm } from 'semantic-ui-react'\r\n\r\nfunction randomInteger(min, max) {\r\n    let rand = min + Math.random() * (max - min);\r\n    return Math.round(rand);\r\n}\r\n\r\nclass AddProductForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            editedTitle: '',\r\n            editedPrice: 0,\r\n            editedPricePcs: 0,\r\n            editedImage: ''\r\n        }\r\n\r\n        this.cancel = this.props.cancel;\r\n    }\r\n\r\n    onCancel = () => {\r\n        this.cancel();\r\n    }\r\n\r\n    onChangeName = (e) => {\r\n        this.setState({\r\n            editedTitle: e.target.value\r\n        })\r\n    }\r\n\r\n    onChangePrice = (e) => {\r\n        this.setState({\r\n            editedPrice: e.target.value,\r\n            editedPricePcs: (e.target.value / 28).toFixed(2)\r\n        })\r\n    }\r\n\r\n    onChangePricePcs = (e) => {\r\n        this.setState({\r\n            editedPricePcs: e.target.value,\r\n            editedPrice: (e.target.value * 28).toFixed(0),\r\n        })\r\n    }\r\n\r\n    addProduct = () => {\r\n        let newProduct = {\r\n            id: randomInteger(10000, 1000000),\r\n            title: this.state.editedTitle,\r\n            price: this.state.editedPrice,\r\n            price_pcs: this.state.editedPricePcs,\r\n            images: {\r\n                preview: this.state.editedImage\r\n            }\r\n        }\r\n\r\n        this.setState({ adding: true });\r\n        setTimeout(() => {\r\n            this.setState({\r\n                adding: false,\r\n                editedTitle: '',\r\n                editedPrice: 0,\r\n                editedPricePcs: 0,\r\n                editedImage: ''\r\n            });\r\n            this.props.addProduct(newProduct);\r\n        }, 1000);\r\n    }\r\n\r\n    render() {\r\n        const { isEdit, editedTitle, editedPrice, editedPricePcs, editedImage } = this.state;\r\n        const { onRemoveProduct } = this.props;\r\n        return (\r\n            <Table.Row disabled={this.state.removing || this.state.updaiting}>\r\n                <Table.Cell>\r\n                    <div className=\"new-product-name\">\r\n                        <Input placeholder=\"new product name\" onChange={this.onChangeName} value={editedTitle} type=\"text\" />\r\n                    </div>\r\n                </Table.Cell>\r\n                <Table.Cell>\r\n                    <Input onChange={this.onChangePrice} value={editedPrice} labelPosition='right' type='text' placeholder='Price UAH'>\r\n                        <Label basic>₴</Label>\r\n                        <input className=\"price-input\" />\r\n                    </Input>\r\n                </Table.Cell>\r\n                <Table.Cell>\r\n                    <Input onChange={this.onChangePricePcs} value={editedPricePcs} labelPosition='right' type='text' placeholder='Price USD'>\r\n                        <Label basic>$</Label>\r\n                        <input className=\"price-input\" />\r\n                    </Input>\r\n                </Table.Cell>\r\n                <Table.Cell>\r\n                </Table.Cell>\r\n                <Table.Cell collapsing>\r\n                    <Button animated='fade'\r\n                        primary\r\n                        loading={this.state.adding}\r\n                        onClick={this.addProduct}>\r\n                        <Button.Content hidden>Add</Button.Content>\r\n                        <Button.Content visible>\r\n                            <Icon name='check' />\r\n                        </Button.Content>\r\n                    </Button>\r\n                    <Button animated='fade'\r\n                        color='red'\r\n                        onClick={this.onCancel}>\r\n                        <Button.Content hidden>Cancel</Button.Content>\r\n                        <Button.Content visible>\r\n                            <Icon name='stop circle outline' />\r\n                        </Button.Content>\r\n                    </Button>\r\n                </Table.Cell>\r\n            </Table.Row>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddProductForm;","import React, { Component } from 'react';\r\nimport { Table, Button } from 'semantic-ui-react'\r\nimport products from './../../data/products.json';\r\nimport ProductRow from './ProductRow';\r\nimport AddProductForm from './AddProductForm';\r\n\r\nclass ProductTable extends Component {\r\n    state = {\r\n        products: [],\r\n        loading: false\r\n    }\r\n    componentDidMount() {\r\n        this.setState({ products: products.data });\r\n    }\r\n\r\n    removeProduct = (id) => {\r\n        const { products } = this.state;\r\n        this.setState({\r\n            products: products.filter((product, i) => id !== product.id)\r\n        })\r\n    }\r\n\r\n    updateProduct = (updatedProduct) => {\r\n        const { products } = this.state;\r\n        this.setState({\r\n            users: products.map((product) => updatedProduct.id === product.id ? updatedProduct : product)\r\n        })\r\n    }\r\n\r\n    addNewProduct = () => {\r\n        this.setState((prevState) => ({ isAddingNewProduct: !prevState.isAddingNewProduct }))\r\n    }\r\n\r\n    addProduct = (newProduct) => {\r\n        const { products } = this.state;\r\n        this.setState({\r\n            products: [newProduct, ...products]\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { products, loading } = this.state;\r\n        if (loading) return <div>Loading...</div>\r\n        return (\r\n            <div>\r\n                <Button onClick={this.addNewProduct}>Add product</Button>\r\n                <Table celled selectable collapsing>\r\n                    <Table.Header>\r\n                        <Table.Row>\r\n                            <Table.HeaderCell>Name</Table.HeaderCell>\r\n                            <Table.HeaderCell>Price UAH</Table.HeaderCell>\r\n                            <Table.HeaderCell>Price USD</Table.HeaderCell>\r\n                            <Table.HeaderCell>Image</Table.HeaderCell>\r\n                            <Table.HeaderCell>Actions</Table.HeaderCell>\r\n                        </Table.Row>\r\n                    </Table.Header>\r\n\r\n                    <Table.Body>\r\n                        {this.state.isAddingNewProduct &&\r\n                            <AddProductForm cancel={this.addNewProduct}\r\n                                            addProduct={this.addProduct}></AddProductForm>}\r\n                        {products.map(product =>\r\n                            <ProductRow\r\n                                data={product}\r\n                                key={product.id}\r\n                                onRemoveProduct={this.removeProduct}\r\n                                onUpdateProduct={this.updateProduct} />\r\n                        )}\r\n\r\n                    </Table.Body>\r\n                </Table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProductTable;","import React from 'react';\r\nimport ProductTable from './ProductTable';\r\n\r\nfunction HomeWork1() {\r\n  return (\r\n    <div id=\"hw1\">\r\n      <h1>Home Work 1</h1>\r\n      <h3>The goods presented in the table are taken from here <a href=\"https://rozetka.com.ua/phones-mp3-gps/c80257/sort=rank/\" target=\"_blank\" rel=\"noopener noreferrer\">https://rozetka.com.ua/phones-mp3-gps/c80257/sort=rank/</a></h3>\r\n      <ProductTable />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomeWork1;"],"sourceRoot":""}