{"version":3,"sources":["hw1/components/HomeWorkDescription.js","hw1/components/ProductRow.js","hw1/components/EditProductForm.js","hw1/sevices/DelayService.js","hw1/components/ProductTable.js","hw1/components/HomeWork1.js"],"names":["HomeWorkDescription","state","open","handleOpen","setState","handleClose","this","closeOnTriggerClick","onOpen","onClose","openOnTriggerClick","trigger","content","negative","positive","className","dangerouslySetInnerHTML","__html","props","data","Component","ProductRow","startEdit","edit","product","startRemove","openConfirmDelete","removeCancel","removeConfirm","removing","remove","id","Table","Row","disabled","updaiting","Cell","Header","as","textAlign","title","price","price_pcs","Image","src","images","preview","size","verticalAlign","collapsing","Button","animated","primary","loading","onClick","Content","hidden","visible","Icon","name","color","Confirm","confirmButton","header","onCancel","onConfirm","randomInteger","min","max","rand","Math","random","round","EditProductForm","inputNameRef","createRef","onChangeName","e","editedTitle","target","value","onChangePrice","editedPrice","editedPricePcs","toFixed","onChangePricePcs","valideteAllField","length","updateProduct","editedImage","isEdit","adding","confirm","cancel","current","focus","Input","ref","error","placeholder","onChange","type","labelPosition","Label","basic","ms","a","Promise","resolve","reject","setTimeout","delay","ProductTable","products","isAddingNewProduct","updatedProduct","force","map","startAddProduct","prevState","addProduct","newProduct","cancelEdit","removeProduct","filter","i","Dimmer","active","Loader","inline","celled","selectable","HeaderCell","Body","key","HomeWork1","Descriptions","hw1","description","href","rel"],"mappings":"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","file":"static/js/6.da422676.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport {\r\n    Button,\r\n    TransitionablePortal,\r\n} from 'semantic-ui-react'\r\n\r\nexport default class HomeWorkDescription extends Component {\r\n    state = {\r\n        open: false\r\n    }\r\n\r\n    handleOpen = () => this.setState({ open: true })\r\n\r\n    handleClose = () => this.setState({ open: false })\r\n\r\n    render() {\r\n        const { open } = this.state\r\n\r\n        return (\r\n            <TransitionablePortal\r\n                closeOnTriggerClick\r\n                onOpen={this.handleOpen}\r\n                onClose={this.handleClose}\r\n                openOnTriggerClick\r\n                trigger={\r\n                    <Button\r\n                        content={open ? 'Close Description' : 'Open Description'}\r\n                        negative={open}\r\n                        positive={!open}\r\n                    />\r\n                }\r\n            >\r\n                <div className=\"hw-description\" dangerouslySetInnerHTML={{ __html: this.props.data }} />\r\n            </TransitionablePortal>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Header, Table, Button, Icon, Image, Confirm } from 'semantic-ui-react'\r\n\r\nclass ProductRow extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            product: props.data\r\n        }\r\n    }\r\n\r\n    startEdit = () => {\r\n        this.props.edit(this.state.product);\r\n    }\r\n\r\n    startRemove = () => {\r\n        this.setState({ openConfirmDelete: true });\r\n    }\r\n\r\n    removeCancel = () => {\r\n        this.setState({ openConfirmDelete: false });\r\n    }\r\n\r\n    removeConfirm = () => {\r\n        this.setState({ openConfirmDelete: false });\r\n        this.setState({ removing: true });\r\n        this.props.remove(this.state.product.id);\r\n    }\r\n\r\n    render() {\r\n        const { product } = this.state;\r\n        return (\r\n            <>\r\n                <Table.Row disabled={this.state.removing || this.state.updaiting}>\r\n                    <Table.Cell>\r\n                        <Header as='h4' textAlign='left'>\r\n                            {product.title}\r\n                        </Header>\r\n                    </Table.Cell>\r\n                    <Table.Cell className=\"price-column\" textAlign='right'>\r\n                        {product.price}\r\n                    </Table.Cell>\r\n                    <Table.Cell className=\"price-column\" textAlign='right'>\r\n                        {product.price_pcs}\r\n                    </Table.Cell>\r\n                    <Table.Cell textAlign='right'>\r\n                        <Image src={product.images.preview} size='mini' verticalAlign='top' />\r\n                    </Table.Cell>\r\n                    <Table.Cell collapsing>\r\n                        <Button animated='fade'\r\n                            primary\r\n                            loading={this.state.updaiting}\r\n                            onClick={this.startEdit}>\r\n                            <Button.Content hidden>Edit</Button.Content>\r\n                            <Button.Content visible>\r\n                                <Icon name='edit' />\r\n                            </Button.Content>\r\n                        </Button>\r\n                        <Button animated='fade'\r\n                            color='red'\r\n                            loading={this.state.removing}\r\n                            onClick={this.startRemove}>\r\n                            <Button.Content hidden>Delete</Button.Content>\r\n                            <Button.Content visible>\r\n                                <Icon name='delete' />\r\n                            </Button.Content>\r\n                        </Button>\r\n                    </Table.Cell>\r\n                </Table.Row>\r\n                <Confirm\r\n                    open={this.state.openConfirmDelete}\r\n                    confirmButton={'Delete'}\r\n                    header={'Do you want to delete?'}\r\n                    content={product.title}\r\n                    onCancel={this.removeCancel}\r\n                    onConfirm={this.removeConfirm}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProductRow;","import React, { Component, createRef } from 'react';\r\nimport { Table, Button, Icon, Input, Label } from 'semantic-ui-react'\r\n\r\nfunction randomInteger(min, max) {\r\n    let rand = min + Math.random() * (max - min);\r\n    return Math.round(rand);\r\n}\r\n\r\nclass EditProductForm extends Component {\r\n    inputNameRef = createRef()\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            editedTitle: this.props.product ? this.props.product.title : '',\r\n            editedPrice: this.props.product ? this.props.product.price : 0,\r\n            editedPricePcs: this.props.product ? this.props.product.price_pcs : 0,\r\n            editedImage: this.props.product ? this.props.product.images.preview : '',\r\n            isEdit: this.props.product ? true : false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.inputNameRef.current.focus();\r\n    }\r\n\r\n    onChangeName = (e) => {\r\n        this.setState({\r\n            editedTitle: e.target.value\r\n        })\r\n    }\r\n\r\n    onChangePrice = (e) => {\r\n        this.setState({\r\n            editedPrice: e.target.value,\r\n            editedPricePcs: (e.target.value / 28).toFixed(2)\r\n        })\r\n    }\r\n\r\n    onChangePricePcs = (e) => {\r\n        this.setState({\r\n            editedPricePcs: e.target.value,\r\n            editedPrice: (e.target.value * 28).toFixed(0),\r\n        })\r\n    }\r\n\r\n    valideteAllField = () => {\r\n        const { editedTitle, editedPrice, editedPricePcs } = this.state;\r\n        return editedTitle.length &&\r\n            editedPrice > 0 &&\r\n            editedPricePcs > 0;\r\n    }\r\n\r\n    updateProduct = () => {\r\n        const { editedTitle, editedPrice, editedPricePcs, editedImage } = this.state;\r\n        const product = this.props.product ? this.props.product : {\r\n            id: randomInteger(10000, 1000000),\r\n            images: {\r\n                preview: this.state.editedImage\r\n            },\r\n        };\r\n        product.title = editedTitle;\r\n        product.price = editedPrice;\r\n        product.price_pcs = editedPricePcs;\r\n        product.images.preview = editedImage;\r\n        product.isEdit = false;\r\n\r\n        this.setState({ adding: true });\r\n        this.props.confirm(product, true);\r\n    }\r\n\r\n    onCancel = () => {\r\n        this.props.cancel(this.props.product);\r\n    }\r\n\r\n    render() {\r\n        const { editedTitle, editedPrice, editedPricePcs, isEdit } = this.state;\r\n        return (\r\n            <Table.Row disabled={this.state.adding}>\r\n                <Table.Cell>\r\n                    <div className=\"new-product-name\">\r\n                        <Input ref={this.inputNameRef}\r\n                            error={!editedTitle.length}\r\n                            placeholder=\"new product name\"\r\n                            onChange={this.onChangeName}\r\n                            value={editedTitle} type=\"text\" />\r\n                    </div>\r\n                </Table.Cell>\r\n                <Table.Cell className=\"price-column\">\r\n                    <Input onChange={this.onChangePrice} value={editedPrice} labelPosition='right' type='text' placeholder='Price UAH' error={editedPrice <= 0}>\r\n                        <Label basic>₴</Label>\r\n                        <input type=\"number\" className=\"price-input\" />\r\n                    </Input>\r\n                </Table.Cell>\r\n                <Table.Cell className=\"price-column\">\r\n                    <Input onChange={this.onChangePricePcs} value={editedPricePcs} labelPosition='right' type='text' placeholder='Price USD' error={editedPricePcs <= 0}>\r\n                        <Label basic>$</Label>\r\n                        <input type=\"number\" className=\"price-input\" />\r\n                    </Input>\r\n                </Table.Cell>\r\n                <Table.Cell>\r\n                </Table.Cell>\r\n                <Table.Cell collapsing>\r\n                    <Button animated='fade'\r\n                        primary\r\n                        disabled={!this.valideteAllField()}\r\n                        loading={this.state.adding}\r\n                        onClick={this.updateProduct}>\r\n                        <Button.Content hidden>{isEdit ? <span>Save</span> : <span>Add</span>}</Button.Content>\r\n                        <Button.Content visible>\r\n                            <Icon name='check' />\r\n                        </Button.Content>\r\n                    </Button>\r\n                    <Button animated='fade'\r\n                        color='red'\r\n                        onClick={this.onCancel}>\r\n                        <Button.Content hidden>Cancel</Button.Content>\r\n                        <Button.Content visible>\r\n                            <Icon name='stop circle outline' />\r\n                        </Button.Content>\r\n                    </Button>\r\n                </Table.Cell>\r\n            </Table.Row>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditProductForm;","async function delay(ms) {\r\n  return new Promise((resolve, reject) => {\r\n    setTimeout(resolve, ms ? ms : 1000);\r\n  });\r\n}\r\n\r\nexport default delay; ","import React, { Component } from 'react';\r\nimport { Table, Button, Dimmer, Loader } from 'semantic-ui-react'\r\nimport ProductRow from './ProductRow';\r\nimport EditProductForm from './EditProductForm';\r\nimport products from './../../data/products.json';\r\nimport delay from '../sevices/DelayService';\r\n\r\nclass ProductTable extends Component {\r\n    state = {\r\n        products: [],\r\n        loading: false,\r\n        isAddingNewProduct: false\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.setState({ loading: true });\r\n        await delay();\r\n        this.setState({ loading: false });\r\n        this.setState({ products: products.data });\r\n    }\r\n\r\n    updateProduct = async (updatedProduct, force) => {\r\n        const { products } = this.state;\r\n        if (force) await delay();\r\n        this.setState({\r\n            products: products.map((product) => updatedProduct.id === product.id ? updatedProduct : product)\r\n        });\r\n    }\r\n\r\n    startAddProduct = () => {\r\n        this.setState((prevState) => ({ isAddingNewProduct: !prevState.isAddingNewProduct }))\r\n    }\r\n\r\n    addProduct = async (newProduct) => {\r\n        const { products, isAddingNewProduct } = this.state;\r\n        await delay();\r\n        this.setState({\r\n            products: [newProduct, ...products],\r\n            isAddingNewProduct: !isAddingNewProduct\r\n        });\r\n    }\r\n\r\n    startEdit = (product) => {\r\n        product.isEdit = true;\r\n        this.updateProduct(product);\r\n    }\r\n\r\n    cancelEdit = (product) => {\r\n        product.isEdit = false;\r\n        this.updateProduct(product);\r\n    }\r\n\r\n    removeProduct = async (id) => {\r\n        const { products } = this.state;\r\n        await delay();\r\n        this.setState({\r\n            products: products.filter((product, i) => id !== product.id)\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { products, loading, isAddingNewProduct } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <Button onClick={this.startAddProduct}>Add product</Button>\r\n                {loading ?\r\n                    <Dimmer active>\r\n                        <Loader active inline='centered' />\r\n                    </Dimmer> :\r\n                    <Table celled selectable collapsing>\r\n                        <Table.Header>\r\n                            <Table.Row>\r\n                                <Table.HeaderCell>Name</Table.HeaderCell>\r\n                                <Table.HeaderCell textAlign='right'>Price UAH</Table.HeaderCell>\r\n                                <Table.HeaderCell textAlign='right'>Price USD</Table.HeaderCell>\r\n                                <Table.HeaderCell>Image</Table.HeaderCell>\r\n                                <Table.HeaderCell>Actions</Table.HeaderCell>\r\n                            </Table.Row>\r\n                        </Table.Header>\r\n\r\n                        <Table.Body>\r\n                            {isAddingNewProduct &&\r\n                                <EditProductForm cancel={this.startAddProduct}\r\n                                    confirm={this.addProduct}></EditProductForm>}\r\n                            {products.map(product =>\r\n                                product.isEdit ?\r\n                                    <EditProductForm product={product}\r\n                                        key={product.id}\r\n                                        cancel={this.cancelEdit}\r\n                                        confirm={this.updateProduct}></EditProductForm> :\r\n                                    <ProductRow\r\n                                        data={product}\r\n                                        key={product.id}\r\n                                        edit={this.startEdit}\r\n                                        remove={this.removeProduct} />\r\n                            )}\r\n                        </Table.Body>\r\n                    </Table>\r\n                }\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProductTable;","import React from 'react';\r\nimport ProductTable from './ProductTable';\r\nimport HomeWorkDescription from './HomeWorkDescription';\r\nimport Descriptions from '../../data/hw.json';\r\n\r\nfunction HomeWork1() {\r\n  return (\r\n    <div id=\"hw1\">\r\n      <h1>Home Work 1</h1>\r\n      <HomeWorkDescription data={Descriptions.hw1.description}></HomeWorkDescription>\r\n      <h3>The goods presented in the table are taken from here <a href=\"https://rozetka.com.ua/phones-mp3-gps/c80257/sort=rank/\" target=\"_blank\" rel=\"noopener noreferrer\">https://rozetka.com.ua/phones-mp3-gps/c80257/sort=rank/</a></h3>\r\n      <ProductTable />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomeWork1;"],"sourceRoot":""}