{"version":3,"sources":["hw1/components/HomeWorkDescription.js","hw3/components/Comments.js","hw3/components/Posts.js","hw3/components/AuthorInfo.js","hw3/components/Blog.js","hw3/components/HomeWork3.js"],"names":["HomeWorkDescription","state","open","handleOpen","setState","handleClose","this","closeOnTriggerClick","onOpen","onClose","openOnTriggerClick","trigger","content","negative","positive","className","dangerouslySetInnerHTML","__html","props","data","Component","Comments","loadComments","fetchUserData","closeComments","isOpenComments","comments","isFetching","isCommentsLoaded","postId","fetch","then","response","json","catch","err","Button","onClick","loading","Feed","map","c","Event","key","id","Label","icon","Content","Date","email","Summary","name","Extra","text","body","Posts","posts","isPostFetching","onPostSelect","Loader","size","active","post","image","title","AuthorInfo","userData","userAlbums","isFetchingUserData","isFetchingUserAlbums","prevProps","prevState","snapshot","authorId","Card","Dimmer","Header","Meta","Description","phone","a","i","Blog","contextRef","createRef","selectedAuthorInfo","handlePostSelection","userId","Grid","columns","Column","Ref","innerRef","Segment","Rail","position","Sticky","context","HomeWork2","Descriptions","hw3","description"],"mappings":"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","file":"static/js/9.d1d261d8.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport {\r\n    Button,\r\n    TransitionablePortal,\r\n} from 'semantic-ui-react'\r\n\r\nexport default class HomeWorkDescription extends Component {\r\n    state = {\r\n        open: false\r\n    }\r\n\r\n    handleOpen = () => this.setState({ open: true })\r\n\r\n    handleClose = () => this.setState({ open: false })\r\n\r\n    render() {\r\n        const { open } = this.state\r\n\r\n        return (\r\n            <TransitionablePortal\r\n                closeOnTriggerClick\r\n                onOpen={this.handleOpen}\r\n                onClose={this.handleClose}\r\n                openOnTriggerClick\r\n                trigger={\r\n                    <Button\r\n                        content={open ? 'Close Description' : 'Open Description'}\r\n                        negative={open}\r\n                        positive={!open}\r\n                    />\r\n                }\r\n            >\r\n                <div className=\"hw-description\" dangerouslySetInnerHTML={{ __html: this.props.data }} />\r\n            </TransitionablePortal>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Feed, Button } from 'semantic-ui-react';\r\n\r\nclass Comments extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      comments: [],\r\n      isFetching: false,\r\n      isCommentsLoaded: false,\r\n      isOpenComments: false\r\n    }\r\n  }\r\n\r\n  fetchUserData() {\r\n    const { postId } = this.props;\r\n    const { isCommentsLoaded } = this.state;\r\n    if (!postId || isCommentsLoaded) {\r\n      this.setState({ isOpenComments: true });\r\n      return;\r\n    }\r\n    this.setState({ isFetching: true });\r\n    fetch(`https://jsonplaceholder.typicode.com/posts/${postId}/comments`)\r\n      .then(response => response.json())\r\n      .then(comments => this.setState({ comments, isFetching: false, isCommentsLoaded: true, isOpenComments: true }))\r\n      .catch(err => this.setState({ isFetching: false, }))\r\n  }\r\n\r\n  loadComments = () => {\r\n    this.fetchUserData();\r\n  }\r\n\r\n  closeComments = () => {\r\n    this.setState({ isOpenComments: false });\r\n  }\r\n\r\n\r\n  render() {\r\n    const { comments, isFetching, isOpenComments } = this.state;\r\n    return (\r\n      <>\r\n        <br />\r\n        {isOpenComments ?\r\n          <Button onClick={this.closeComments}>Close comments</Button> :\r\n          <Button loading={isFetching} onClick={this.loadComments}>Open comments</Button>}\r\n        <Feed>\r\n          {isOpenComments && comments.map(c => {\r\n            return (\r\n              <Feed.Event key={c.id}>\r\n                <Feed.Label icon='pencil' />\r\n                <Feed.Content>\r\n                  <Feed.Date content={c.email} />\r\n                  <Feed.Summary content={c.name} />\r\n                  <Feed.Extra text content={c.body} />\r\n                </Feed.Content>\r\n              </Feed.Event>\r\n            )\r\n          })}\r\n        </Feed>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nComments.propTypes = {\r\n  postId: PropTypes.any.isRequired\r\n};\r\n\r\nexport default Comments;","import React, { Component, Fragment } from 'react';\r\nimport { Feed, Loader } from 'semantic-ui-react';\r\nimport Comments from \"./Comments\";\r\n\r\nclass Posts extends Component {\r\n\r\n  state = {\r\n    posts: [],\r\n    isPostFetching: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ isPostFetching: true });\r\n    fetch('https://jsonplaceholder.typicode.com/posts')\r\n      .then(response => response.json())\r\n      .then(posts => {\r\n        this.setState({ posts: posts, isPostFetching: false })\r\n      })\r\n  }\r\n\r\n  render() {\r\n    const { posts, isPostFetching } = this.state;\r\n    const { onPostSelect } = this.props;\r\n\r\n    return (\r\n      <Fragment>\r\n        <Loader size='small' active={isPostFetching} />\r\n        <Feed>\r\n          {posts.map(post => (\r\n            <Feed.Event key={post.id}>\r\n              <Feed.Label image='https://react.semantic-ui.com/images/avatar/small/elliot.jpg' />\r\n              <Feed.Content>\r\n                <Feed.Summary onClick={() => { onPostSelect(post)}}>\r\n                  <a>{post.title}</a>\r\n                </Feed.Summary>\r\n                <Feed.Extra text>\r\n                  {post.body}\r\n                </Feed.Extra>\r\n                <Comments postId={post.id}/>\r\n              </Feed.Content>\r\n            </Feed.Event>\r\n          ))}\r\n        </Feed>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Posts;","import React, { Component } from 'react';\r\nimport { Card, Dimmer, Loader } from 'semantic-ui-react';\r\n\r\nclass AuthorInfo extends Component {\r\n\r\n  state = {\r\n    userData: {},\r\n    userAlbums: [],\r\n    isFetchingUserData: false,\r\n    isFetchingUserAlbums: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.fetchUserData();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.authorId !== this.props.authorId && this.props.authorId !== null) {\r\n      this.fetchUserData()\r\n    }\r\n  }\r\n\r\n  fetchUserData() {\r\n    const { authorId } = this.props;\r\n    if (!authorId) return;\r\n    this.setState({ isFetchingUserData: true, isFetchingUserAlbums: true });\r\n    fetch(`https://jsonplaceholder.typicode.com/users/${authorId}`)\r\n      .then(response => response.json())\r\n      .then(userData => this.setState({ userData, isFetchingUserData: false }))\r\n    fetch(`https://jsonplaceholder.typicode.com/users/${authorId}/albums`)\r\n      .then(response => response.json())\r\n      .then(userAlbums => this.setState({ userAlbums: userAlbums, isFetchingUserData: false, isFetchingUserAlbums: false }))\r\n      .catch(err => this.setState({ isFetchingUserData: false, isFetchingUserAlbums: false }))\r\n  }\r\n\r\n  render() {\r\n    const { userData, userAlbums, isFetchingUserData, isFetchingUserAlbums } = this.state;\r\n    const { authorId } = this.props;\r\n    if (authorId === null) return null;\r\n    return (\r\n      <>\r\n        <Card>\r\n          <Dimmer active={isFetchingUserData}>\r\n            <Loader active={isFetchingUserData} />\r\n          </Dimmer>\r\n          <Card.Content>\r\n            <Card.Header>{userData.name}</Card.Header>\r\n            <Card.Meta>\r\n              <span className='date'>Email: {userData.email}</span>\r\n            </Card.Meta>\r\n            <Card.Description>\r\n              {userData.phone}\r\n            </Card.Description>\r\n          </Card.Content>\r\n        </Card>\r\n        <Card>\r\n          <Dimmer active={isFetchingUserAlbums}>\r\n            <Loader active={isFetchingUserAlbums} />\r\n          </Dimmer>\r\n          <Card.Content>\r\n            <Card.Header>Albums:</Card.Header>\r\n            {userAlbums.map((a, i) => {\r\n              return (\r\n                <Card.Description key={a.id}>\r\n                  <span>{i + 1}. </span>\r\n                  {a.title}\r\n                </Card.Description>\r\n              )\r\n            })}\r\n\r\n          </Card.Content>\r\n        </Card>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AuthorInfo;","import React, { Component, createRef } from 'react';\r\nimport { Grid, Sticky, Rail, Segment, Ref } from 'semantic-ui-react'\r\nimport Posts from \"./Posts\";\r\nimport AuthorInfo from \"./AuthorInfo\";\r\n\r\nclass Blog extends Component {\r\n  contextRef = createRef()\r\n\r\n  state = {\r\n    selectedAuthorInfo: null\r\n  };\r\n\r\n  handlePostSelection = post => {\r\n    this.setState({ selectedAuthorInfo: post.userId })\r\n  };\r\n\r\n  render() {\r\n    const { selectedAuthorInfo } = this.state;\r\n    return (\r\n      <Grid columns={2}>\r\n        <Grid.Column>\r\n          <Ref innerRef={this.contextRef}>\r\n            <Segment>\r\n              <Posts onPostSelect={this.handlePostSelection} />\r\n\r\n              <Rail position='right'>\r\n                <Sticky context={this.contextRef}>\r\n                  <AuthorInfo authorId={selectedAuthorInfo} />\r\n                </Sticky>\r\n              </Rail>\r\n            </Segment>\r\n          </Ref>\r\n        </Grid.Column>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Blog;","import React from 'react';\r\nimport Blog from \"./Blog\";\r\nimport HomeWorkDescription from '../../hw1/components/HomeWorkDescription';\r\nimport Descriptions from '../../data/hw.json';\r\n\r\nfunction HomeWork2() {\r\n  return (\r\n    <div id=\"hw3\">\r\n      <h1>Home Work 2</h1>\r\n      <div>\r\n        <HomeWorkDescription data={Descriptions.hw3.description}></HomeWorkDescription>\r\n      </div>\r\n      <br></br>\r\n      <Blog/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomeWork2;"],"sourceRoot":""}