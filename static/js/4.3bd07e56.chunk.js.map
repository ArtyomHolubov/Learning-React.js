{"version":3,"sources":["hw1/components/ProductRow.js","hw1/components/EditProductForm.js","hw1/components/ProductTable.js","hw1/components/HomeWork1.js"],"names":["ProductRow","props","startEdit","edit","state","product","startRemove","setState","openConfirmDelete","removeCancel","removeConfirm","removing","setTimeout","remove","id","data","this","Table","Row","disabled","updaiting","Cell","Header","as","textAlign","title","className","price","price_pcs","Image","src","images","preview","size","verticalAlign","collapsing","Button","animated","primary","loading","onClick","Content","hidden","visible","Icon","name","color","Confirm","open","confirmButton","header","content","onCancel","onConfirm","Component","randomInteger","min","max","rand","Math","random","round","EditProductForm","inputNameRef","createRef","onChangeName","e","editedTitle","target","value","onChangePrice","editedPrice","editedPricePcs","toFixed","onChangePricePcs","updateProduct","editedImage","isEdit","adding","confirm","cancel","current","focus","Input","ref","placeholder","onChange","type","labelPosition","Label","basic","ProductTable","products","isAddingNewProduct","updatedProduct","map","startAddProduct","prevState","addProduct","newProduct","cancelEdit","removeProduct","filter","i","Dimmer","active","Loader","inline","celled","selectable","HeaderCell","Body","key","HomeWork1","href","rel"],"mappings":"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","file":"static/js/4.3bd07e56.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Header, Table, Button, Icon, Image, Input, Label, Confirm } from 'semantic-ui-react'\r\n\r\nclass ProductRow extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            product: props.data\r\n        }\r\n    }\r\n\r\n    startEdit = () => {\r\n        this.props.edit(this.state.product);\r\n    }\r\n\r\n    startRemove = () => {\r\n        this.setState({ openConfirmDelete: true });\r\n    }\r\n\r\n    removeCancel = () => {\r\n        this.setState({ openConfirmDelete: false });\r\n    }\r\n\r\n    removeConfirm = () => {\r\n        this.setState({ openConfirmDelete: false });\r\n        this.setState({ removing: true });\r\n        setTimeout(() => {\r\n            this.setState({ removing: false });\r\n            this.props.remove(this.state.product.id);\r\n        }, 1000);\r\n    }\r\n\r\n    render() {\r\n        const { product } = this.state;\r\n        return (\r\n            <>\r\n                <Table.Row disabled={this.state.removing || this.state.updaiting}>\r\n                    <Table.Cell>\r\n                        <Header as='h4' textAlign='left'>\r\n                            {product.title}\r\n                        </Header>\r\n                    </Table.Cell>\r\n                    <Table.Cell className=\"price-column\" textAlign='right'>\r\n                        {product.price}\r\n                    </Table.Cell>\r\n                    <Table.Cell className=\"price-column\" textAlign='right'>\r\n                        {product.price_pcs}\r\n                    </Table.Cell>\r\n                    <Table.Cell textAlign='right'>\r\n                        <Image src={product.images.preview} size='mini' verticalAlign='top' />\r\n                    </Table.Cell>\r\n                    <Table.Cell collapsing>\r\n                        <Button animated='fade'\r\n                            primary\r\n                            loading={this.state.updaiting}\r\n                            onClick={this.startEdit}>\r\n                            <Button.Content hidden>Edit</Button.Content>\r\n                            <Button.Content visible>\r\n                                <Icon name='edit' />\r\n                            </Button.Content>\r\n                        </Button>\r\n                        <Button animated='fade'\r\n                            color='red'\r\n                            loading={this.state.removing}\r\n                            onClick={this.startRemove}>\r\n                            <Button.Content hidden>Delete</Button.Content>\r\n                            <Button.Content visible>\r\n                                <Icon name='delete' />\r\n                            </Button.Content>\r\n                        </Button>\r\n                    </Table.Cell>\r\n                </Table.Row>\r\n                <Confirm\r\n                    open={this.state.openConfirmDelete}\r\n                    confirmButton={'Delete'}\r\n                    header={'Do you want to delete?'}\r\n                    content={product.title}\r\n                    onCancel={this.removeCancel}\r\n                    onConfirm={this.removeConfirm}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProductRow;","import React, { Component, createRef } from 'react';\r\nimport { Table, Button, Icon, Input, Label, Confirm } from 'semantic-ui-react'\r\n\r\nfunction randomInteger(min, max) {\r\n    let rand = min + Math.random() * (max - min);\r\n    return Math.round(rand);\r\n}\r\n\r\nclass EditProductForm extends Component {\r\n    inputNameRef = createRef()\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            editedTitle: this.props.product ? this.props.product.title : '',\r\n            editedPrice: this.props.product ? this.props.product.price : 0,\r\n            editedPricePcs: this.props.product ? this.props.product.price_pcs : 0,\r\n            editedImage: this.props.product ? this.props.product.images.preview : '',\r\n            isEdit: this.props.product ? true : false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.inputNameRef.current.focus();\r\n    }\r\n\r\n    onChangeName = (e) => {\r\n        this.setState({\r\n            editedTitle: e.target.value\r\n        })\r\n    }\r\n\r\n    onChangePrice = (e) => {\r\n        this.setState({\r\n            editedPrice: e.target.value,\r\n            editedPricePcs: (e.target.value / 28).toFixed(2)\r\n        })\r\n    }\r\n\r\n    onChangePricePcs = (e) => {\r\n        this.setState({\r\n            editedPricePcs: e.target.value,\r\n            editedPrice: (e.target.value * 28).toFixed(0),\r\n        })\r\n    }\r\n\r\n    updateProduct = () => {\r\n        const { editedTitle, editedPrice, editedPricePcs, editedImage, isEdit } = this.state;\r\n        const product = this.props.product ? this.props.product : {\r\n            id: randomInteger(10000, 1000000),\r\n            images: {\r\n                preview: this.state.editedImage\r\n            },\r\n        };\r\n        product.title = editedTitle;\r\n        product.price = editedPrice;\r\n        product.price_pcs = editedPricePcs;\r\n        product.images.preview = editedImage;\r\n        product.isEdit = false;\r\n\r\n        this.setState({ adding: true });\r\n        setTimeout(() => {\r\n            this.props.confirm(product);\r\n        }, 1000);\r\n    }\r\n\r\n    onCancel = () => {\r\n        this.props.cancel(this.props.product);\r\n    }\r\n\r\n    render() {\r\n        const { editedTitle, editedPrice, editedPricePcs, isEdit } = this.state;\r\n        return (\r\n            <Table.Row disabled={this.state.adding}>\r\n                <Table.Cell>\r\n                    <div className=\"new-product-name\">\r\n                        <Input ref={this.inputNameRef}\r\n                            placeholder=\"new product name\"\r\n                            onChange={this.onChangeName}\r\n                            value={editedTitle} type=\"text\" />\r\n                    </div>\r\n                </Table.Cell>\r\n                <Table.Cell className=\"price-column\">\r\n                    <Input onChange={this.onChangePrice} value={editedPrice} labelPosition='right' type='text' placeholder='Price UAH'>\r\n                        <Label basic>₴</Label>\r\n                        <input className=\"price-input\" />\r\n                    </Input>\r\n                </Table.Cell>\r\n                <Table.Cell className=\"price-column\">\r\n                    <Input onChange={this.onChangePricePcs} value={editedPricePcs} labelPosition='right' type='text' placeholder='Price USD'>\r\n                        <Label basic>$</Label>\r\n                        <input className=\"price-input\" />\r\n                    </Input>\r\n                </Table.Cell>\r\n                <Table.Cell>\r\n                </Table.Cell>\r\n                <Table.Cell collapsing>\r\n                    <Button animated='fade'\r\n                        primary\r\n                        loading={this.state.adding}\r\n                        onClick={this.updateProduct}>\r\n                        <Button.Content hidden>{isEdit ? <span>Save</span> : <span>Add</span>}</Button.Content>\r\n                        <Button.Content visible>\r\n                            <Icon name='check' />\r\n                        </Button.Content>\r\n                    </Button>\r\n                    <Button animated='fade'\r\n                        color='red'\r\n                        onClick={this.onCancel}>\r\n                        <Button.Content hidden>Cancel</Button.Content>\r\n                        <Button.Content visible>\r\n                            <Icon name='stop circle outline' />\r\n                        </Button.Content>\r\n                    </Button>\r\n                </Table.Cell>\r\n            </Table.Row>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditProductForm;","import React, { Component } from 'react';\r\nimport { Table, Button, Dimmer, Loader } from 'semantic-ui-react'\r\nimport products from './../../data/products.json';\r\nimport ProductRow from './ProductRow';\r\nimport EditProductForm from './EditProductForm';\r\n\r\nclass ProductTable extends Component {\r\n    state = {\r\n        products: [],\r\n        loading: false,\r\n        isAddingNewProduct: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ loading: true });\r\n        setTimeout(() => {\r\n            this.setState({ loading: false });\r\n            this.setState({ products: products.data });\r\n        }, 1000);\r\n    }\r\n\r\n    updateProduct = (updatedProduct) => {\r\n        const { products } = this.state;\r\n        this.setState({\r\n            products: products.map((product) => updatedProduct.id === product.id ? updatedProduct : product)\r\n        })\r\n    }\r\n\r\n    startAddProduct = () => {\r\n        this.setState((prevState) => ({ isAddingNewProduct: !prevState.isAddingNewProduct }))\r\n    }\r\n\r\n    addProduct = (newProduct) => {\r\n        const { products, isAddingNewProduct } = this.state;\r\n        this.setState({\r\n            products: [newProduct, ...products],\r\n            isAddingNewProduct: !isAddingNewProduct\r\n        });\r\n    }\r\n\r\n    startEdit = (product) => {\r\n        product.isEdit = true;\r\n        this.updateProduct(product);\r\n    }\r\n\r\n    cancelEdit = (product) => {\r\n        product.isEdit = false;\r\n        this.updateProduct(product);\r\n    }\r\n\r\n    removeProduct = (id) => {\r\n        const { products } = this.state;\r\n        this.setState({\r\n            products: products.filter((product, i) => id !== product.id)\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { products, loading, isAddingNewProduct, remove } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <Button onClick={this.startAddProduct}>Add product</Button>\r\n                {loading ?\r\n                    <Dimmer active>\r\n                        <Loader active inline='centered' />\r\n                    </Dimmer> :\r\n                    <Table celled selectable collapsing>\r\n                        <Table.Header>\r\n                            <Table.Row>\r\n                                <Table.HeaderCell>Name</Table.HeaderCell>\r\n                                <Table.HeaderCell textAlign='right'>Price UAH</Table.HeaderCell>\r\n                                <Table.HeaderCell textAlign='right'>Price USD</Table.HeaderCell>\r\n                                <Table.HeaderCell>Image</Table.HeaderCell>\r\n                                <Table.HeaderCell>Actions</Table.HeaderCell>\r\n                            </Table.Row>\r\n                        </Table.Header>\r\n\r\n                        <Table.Body>\r\n                            {isAddingNewProduct &&\r\n                                <EditProductForm cancel={this.startAddProduct}\r\n                                    confirm={this.addProduct}></EditProductForm>}\r\n                            {products.map(product =>\r\n                                product.isEdit ?\r\n                                    <EditProductForm product={product}\r\n                                        key={product.id}\r\n                                        cancel={this.cancelEdit}\r\n                                        confirm={this.updateProduct}></EditProductForm> :\r\n                                    <ProductRow\r\n                                        data={product}\r\n                                        key={product.id}\r\n                                        edit={this.startEdit}\r\n                                        remove={this.removeProduct} />\r\n                            )}\r\n                        </Table.Body>\r\n                    </Table>\r\n                }\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProductTable;","import React from 'react';\r\nimport ProductTable from './ProductTable';\r\n\r\nfunction HomeWork1() {\r\n  return (\r\n    <div id=\"hw1\">\r\n      <h1>Home Work 1</h1>\r\n      <h3>The goods presented in the table are taken from here <a href=\"https://rozetka.com.ua/phones-mp3-gps/c80257/sort=rank/\" target=\"_blank\" rel=\"noopener noreferrer\">https://rozetka.com.ua/phones-mp3-gps/c80257/sort=rank/</a></h3>\r\n      <ProductTable />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomeWork1;"],"sourceRoot":""}