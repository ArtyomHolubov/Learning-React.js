{"version":3,"sources":["hw1/components/ProductRow.js","hw1/components/EditProductForm.js","hw1/sevices/DelayService.js","hw1/components/ProductTable.js","hw1/components/HomeWorkDescription.js","hw1/components/HomeWork1.js"],"names":["ProductRow","props","startEdit","edit","state","product","startRemove","setState","openConfirmDelete","removeCancel","removeConfirm","removing","remove","id","data","this","Table","Row","disabled","updaiting","Cell","Header","as","textAlign","title","className","price","price_pcs","Image","src","images","preview","size","verticalAlign","collapsing","Button","animated","primary","loading","onClick","Content","hidden","visible","Icon","name","color","Confirm","open","confirmButton","header","content","onCancel","onConfirm","Component","randomInteger","min","max","rand","Math","random","round","EditProductForm","inputNameRef","createRef","onChangeName","e","editedTitle","target","value","onChangePrice","editedPrice","editedPricePcs","toFixed","onChangePricePcs","valideteAllField","length","updateProduct","editedImage","isEdit","adding","confirm","cancel","current","focus","Input","ref","error","placeholder","onChange","type","labelPosition","Label","basic","ms","a","Promise","resolve","reject","setTimeout","delay","ProductTable","products","isAddingNewProduct","updatedProduct","force","map","startAddProduct","prevState","addProduct","newProduct","cancelEdit","removeProduct","filter","i","Dimmer","active","Loader","inline","celled","selectable","HeaderCell","Body","key","HomeWorkDescription","handleOpen","handleClose","TransitionablePortal","closeOnTriggerClick","onOpen","onClose","openOnTriggerClick","trigger","negative","positive","dangerouslySetInnerHTML","__html","HomeWork1","Descriptions","hw1","descriprion","href","rel"],"mappings":"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","file":"static/js/4.da16d6de.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Header, Table, Button, Icon, Image, Confirm } from 'semantic-ui-react'\r\n\r\nclass ProductRow extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            product: props.data\r\n        }\r\n    }\r\n\r\n    startEdit = () => {\r\n        this.props.edit(this.state.product);\r\n    }\r\n\r\n    startRemove = () => {\r\n        this.setState({ openConfirmDelete: true });\r\n    }\r\n\r\n    removeCancel = () => {\r\n        this.setState({ openConfirmDelete: false });\r\n    }\r\n\r\n    removeConfirm = () => {\r\n        this.setState({ openConfirmDelete: false });\r\n        this.setState({ removing: true });\r\n        this.props.remove(this.state.product.id);\r\n    }\r\n\r\n    render() {\r\n        const { product } = this.state;\r\n        return (\r\n            <>\r\n                <Table.Row disabled={this.state.removing || this.state.updaiting}>\r\n                    <Table.Cell>\r\n                        <Header as='h4' textAlign='left'>\r\n                            {product.title}\r\n                        </Header>\r\n                    </Table.Cell>\r\n                    <Table.Cell className=\"price-column\" textAlign='right'>\r\n                        {product.price}\r\n                    </Table.Cell>\r\n                    <Table.Cell className=\"price-column\" textAlign='right'>\r\n                        {product.price_pcs}\r\n                    </Table.Cell>\r\n                    <Table.Cell textAlign='right'>\r\n                        <Image src={product.images.preview} size='mini' verticalAlign='top' />\r\n                    </Table.Cell>\r\n                    <Table.Cell collapsing>\r\n                        <Button animated='fade'\r\n                            primary\r\n                            loading={this.state.updaiting}\r\n                            onClick={this.startEdit}>\r\n                            <Button.Content hidden>Edit</Button.Content>\r\n                            <Button.Content visible>\r\n                                <Icon name='edit' />\r\n                            </Button.Content>\r\n                        </Button>\r\n                        <Button animated='fade'\r\n                            color='red'\r\n                            loading={this.state.removing}\r\n                            onClick={this.startRemove}>\r\n                            <Button.Content hidden>Delete</Button.Content>\r\n                            <Button.Content visible>\r\n                                <Icon name='delete' />\r\n                            </Button.Content>\r\n                        </Button>\r\n                    </Table.Cell>\r\n                </Table.Row>\r\n                <Confirm\r\n                    open={this.state.openConfirmDelete}\r\n                    confirmButton={'Delete'}\r\n                    header={'Do you want to delete?'}\r\n                    content={product.title}\r\n                    onCancel={this.removeCancel}\r\n                    onConfirm={this.removeConfirm}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProductRow;","import React, { Component, createRef } from 'react';\r\nimport { Table, Button, Icon, Input, Label } from 'semantic-ui-react'\r\n\r\nfunction randomInteger(min, max) {\r\n    let rand = min + Math.random() * (max - min);\r\n    return Math.round(rand);\r\n}\r\n\r\nclass EditProductForm extends Component {\r\n    inputNameRef = createRef()\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            editedTitle: this.props.product ? this.props.product.title : '',\r\n            editedPrice: this.props.product ? this.props.product.price : 0,\r\n            editedPricePcs: this.props.product ? this.props.product.price_pcs : 0,\r\n            editedImage: this.props.product ? this.props.product.images.preview : '',\r\n            isEdit: this.props.product ? true : false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.inputNameRef.current.focus();\r\n    }\r\n\r\n    onChangeName = (e) => {\r\n        this.setState({\r\n            editedTitle: e.target.value\r\n        })\r\n    }\r\n\r\n    onChangePrice = (e) => {\r\n        this.setState({\r\n            editedPrice: e.target.value,\r\n            editedPricePcs: (e.target.value / 28).toFixed(2)\r\n        })\r\n    }\r\n\r\n    onChangePricePcs = (e) => {\r\n        this.setState({\r\n            editedPricePcs: e.target.value,\r\n            editedPrice: (e.target.value * 28).toFixed(0),\r\n        })\r\n    }\r\n\r\n    valideteAllField = () => {\r\n        const { editedTitle, editedPrice, editedPricePcs } = this.state;\r\n        return editedTitle.length &&\r\n            editedPrice > 0 &&\r\n            editedPricePcs > 0;\r\n    }\r\n\r\n    updateProduct = () => {\r\n        const { editedTitle, editedPrice, editedPricePcs, editedImage } = this.state;\r\n        const product = this.props.product ? this.props.product : {\r\n            id: randomInteger(10000, 1000000),\r\n            images: {\r\n                preview: this.state.editedImage\r\n            },\r\n        };\r\n        product.title = editedTitle;\r\n        product.price = editedPrice;\r\n        product.price_pcs = editedPricePcs;\r\n        product.images.preview = editedImage;\r\n        product.isEdit = false;\r\n\r\n        this.setState({ adding: true });\r\n        this.props.confirm(product, true);\r\n    }\r\n\r\n    onCancel = () => {\r\n        this.props.cancel(this.props.product);\r\n    }\r\n\r\n    render() {\r\n        const { editedTitle, editedPrice, editedPricePcs, isEdit } = this.state;\r\n        return (\r\n            <Table.Row disabled={this.state.adding}>\r\n                <Table.Cell>\r\n                    <div className=\"new-product-name\">\r\n                        <Input ref={this.inputNameRef}\r\n                            error={!editedTitle.length}\r\n                            placeholder=\"new product name\"\r\n                            onChange={this.onChangeName}\r\n                            value={editedTitle} type=\"text\" />\r\n                    </div>\r\n                </Table.Cell>\r\n                <Table.Cell className=\"price-column\">\r\n                    <Input onChange={this.onChangePrice} value={editedPrice} labelPosition='right' type='text' placeholder='Price UAH' error={editedPrice <= 0}>\r\n                        <Label basic>₴</Label>\r\n                        <input type=\"number\" className=\"price-input\" />\r\n                    </Input>\r\n                </Table.Cell>\r\n                <Table.Cell className=\"price-column\">\r\n                    <Input onChange={this.onChangePricePcs} value={editedPricePcs} labelPosition='right' type='text' placeholder='Price USD' error={editedPricePcs <= 0}>\r\n                        <Label basic>$</Label>\r\n                        <input type=\"number\" className=\"price-input\" />\r\n                    </Input>\r\n                </Table.Cell>\r\n                <Table.Cell>\r\n                </Table.Cell>\r\n                <Table.Cell collapsing>\r\n                    <Button animated='fade'\r\n                        primary\r\n                        disabled={!this.valideteAllField()}\r\n                        loading={this.state.adding}\r\n                        onClick={this.updateProduct}>\r\n                        <Button.Content hidden>{isEdit ? <span>Save</span> : <span>Add</span>}</Button.Content>\r\n                        <Button.Content visible>\r\n                            <Icon name='check' />\r\n                        </Button.Content>\r\n                    </Button>\r\n                    <Button animated='fade'\r\n                        color='red'\r\n                        onClick={this.onCancel}>\r\n                        <Button.Content hidden>Cancel</Button.Content>\r\n                        <Button.Content visible>\r\n                            <Icon name='stop circle outline' />\r\n                        </Button.Content>\r\n                    </Button>\r\n                </Table.Cell>\r\n            </Table.Row>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditProductForm;","async function delay(ms) {\r\n  return new Promise((resolve, reject) => {\r\n    setTimeout(resolve, ms ? ms : 1000);\r\n  });\r\n}\r\n\r\nexport default delay; ","import React, { Component } from 'react';\r\nimport { Table, Button, Dimmer, Loader } from 'semantic-ui-react'\r\nimport ProductRow from './ProductRow';\r\nimport EditProductForm from './EditProductForm';\r\nimport products from './../../data/products.json';\r\nimport delay from '../sevices/DelayService';\r\n\r\nclass ProductTable extends Component {\r\n    state = {\r\n        products: [],\r\n        loading: false,\r\n        isAddingNewProduct: false\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.setState({ loading: true });\r\n        await delay();\r\n        this.setState({ loading: false });\r\n        this.setState({ products: products.data });\r\n    }\r\n\r\n    updateProduct = async (updatedProduct, force) => {\r\n        const { products } = this.state;\r\n        if (force) await delay();\r\n        this.setState({\r\n            products: products.map((product) => updatedProduct.id === product.id ? updatedProduct : product)\r\n        });\r\n    }\r\n\r\n    startAddProduct = () => {\r\n        this.setState((prevState) => ({ isAddingNewProduct: !prevState.isAddingNewProduct }))\r\n    }\r\n\r\n    addProduct = async (newProduct) => {\r\n        const { products, isAddingNewProduct } = this.state;\r\n        await delay();\r\n        this.setState({\r\n            products: [newProduct, ...products],\r\n            isAddingNewProduct: !isAddingNewProduct\r\n        });\r\n    }\r\n\r\n    startEdit = (product) => {\r\n        product.isEdit = true;\r\n        this.updateProduct(product);\r\n    }\r\n\r\n    cancelEdit = (product) => {\r\n        product.isEdit = false;\r\n        this.updateProduct(product);\r\n    }\r\n\r\n    removeProduct = async (id) => {\r\n        const { products } = this.state;\r\n        await delay();\r\n        this.setState({\r\n            products: products.filter((product, i) => id !== product.id)\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { products, loading, isAddingNewProduct } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <Button onClick={this.startAddProduct}>Add product</Button>\r\n                {loading ?\r\n                    <Dimmer active>\r\n                        <Loader active inline='centered' />\r\n                    </Dimmer> :\r\n                    <Table celled selectable collapsing>\r\n                        <Table.Header>\r\n                            <Table.Row>\r\n                                <Table.HeaderCell>Name</Table.HeaderCell>\r\n                                <Table.HeaderCell textAlign='right'>Price UAH</Table.HeaderCell>\r\n                                <Table.HeaderCell textAlign='right'>Price USD</Table.HeaderCell>\r\n                                <Table.HeaderCell>Image</Table.HeaderCell>\r\n                                <Table.HeaderCell>Actions</Table.HeaderCell>\r\n                            </Table.Row>\r\n                        </Table.Header>\r\n\r\n                        <Table.Body>\r\n                            {isAddingNewProduct &&\r\n                                <EditProductForm cancel={this.startAddProduct}\r\n                                    confirm={this.addProduct}></EditProductForm>}\r\n                            {products.map(product =>\r\n                                product.isEdit ?\r\n                                    <EditProductForm product={product}\r\n                                        key={product.id}\r\n                                        cancel={this.cancelEdit}\r\n                                        confirm={this.updateProduct}></EditProductForm> :\r\n                                    <ProductRow\r\n                                        data={product}\r\n                                        key={product.id}\r\n                                        edit={this.startEdit}\r\n                                        remove={this.removeProduct} />\r\n                            )}\r\n                        </Table.Body>\r\n                    </Table>\r\n                }\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProductTable;","import React, { Component } from 'react'\r\nimport {\r\n    Button,\r\n    Header,\r\n    Segment,\r\n    TransitionablePortal,\r\n} from 'semantic-ui-react'\r\n\r\nexport default class HomeWorkDescription extends Component {\r\n    state = {\r\n        open: false\r\n    }\r\n\r\n    handleOpen = () => this.setState({ open: true })\r\n\r\n    handleClose = () => this.setState({ open: false })\r\n\r\n    render() {\r\n        const { open } = this.state\r\n\r\n        return (\r\n            <TransitionablePortal\r\n                closeOnTriggerClick\r\n                onOpen={this.handleOpen}\r\n                onClose={this.handleClose}\r\n                openOnTriggerClick\r\n                trigger={\r\n                    <Button\r\n                        content={open ? 'Close Description' : 'Open Description'}\r\n                        negative={open}\r\n                        positive={!open}\r\n                    />\r\n                }\r\n            >\r\n                <div className=\"hw-description\" dangerouslySetInnerHTML={{ __html: this.props.data }} />\r\n            </TransitionablePortal>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport ProductTable from './ProductTable';\r\nimport HomeWorkDescription from './HomeWorkDescription';\r\nimport Descriptions from '../../data/hw.json';\r\n\r\nfunction HomeWork1() {\r\n  return (\r\n    <div id=\"hw1\">\r\n      <h1>Home Work 1</h1>\r\n      <HomeWorkDescription data={Descriptions.hw1.descriprion}></HomeWorkDescription>\r\n      <h3>The goods presented in the table are taken from here <a href=\"https://rozetka.com.ua/phones-mp3-gps/c80257/sort=rank/\" target=\"_blank\" rel=\"noopener noreferrer\">https://rozetka.com.ua/phones-mp3-gps/c80257/sort=rank/</a></h3>\r\n      <ProductTable />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomeWork1;"],"sourceRoot":""}