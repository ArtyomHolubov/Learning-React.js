{"version":3,"sources":["../node_modules/semantic-ui-react/dist/es/elements/Loader/Loader.js","../node_modules/semantic-ui-react/dist/es/collections/Grid/GridColumn.js","../node_modules/semantic-ui-react/dist/es/views/Feed/FeedDate.js","../node_modules/semantic-ui-react/dist/es/views/Feed/FeedExtra.js","../node_modules/semantic-ui-react/dist/es/views/Feed/FeedLike.js","../node_modules/semantic-ui-react/dist/es/views/Feed/FeedMeta.js","../node_modules/semantic-ui-react/dist/es/views/Feed/FeedUser.js","../node_modules/semantic-ui-react/dist/es/views/Feed/FeedSummary.js","../node_modules/semantic-ui-react/dist/es/views/Feed/FeedContent.js","../node_modules/semantic-ui-react/dist/es/views/Feed/FeedLabel.js","../node_modules/semantic-ui-react/dist/es/views/Feed/FeedEvent.js","../node_modules/semantic-ui-react/dist/es/views/Feed/Feed.js","../node_modules/semantic-ui-react/dist/es/views/Card/CardDescription.js","../node_modules/semantic-ui-react/dist/es/views/Card/CardHeader.js","../node_modules/semantic-ui-react/dist/es/views/Card/CardMeta.js","../node_modules/semantic-ui-react/dist/es/views/Card/CardContent.js","../node_modules/semantic-ui-react/dist/es/views/Card/CardGroup.js","../node_modules/semantic-ui-react/dist/es/views/Card/Card.js","../node_modules/semantic-ui-react/dist/es/elements/Segment/SegmentGroup.js","../node_modules/semantic-ui-react/dist/es/elements/Segment/SegmentInline.js","../node_modules/semantic-ui-react/dist/es/elements/Segment/Segment.js","../node_modules/semantic-ui-react/dist/es/collections/Grid/GridRow.js","../node_modules/semantic-ui-react/dist/es/collections/Grid/Grid.js"],"names":["Loader","props","active","children","className","content","disabled","indeterminate","inline","inverted","size","classes","cx","useKeyOnly","useKeyOrValueAndKey","rest","getUnhandledProps","ElementType","getElementType","React","createElement","_extends","childrenUtils","isNil","handledProps","propTypes","GridColumn","computer","color","floated","largeScreen","mobile","only","stretched","tablet","textAlign","verticalAlign","widescreen","width","useMultipleProp","useTextAlignProp","useValueAndKey","useVerticalAlignProp","useWidthProp","create","createShorthandFactory","FeedDate","FeedExtra","images","text","imageElements","_map","image","index","key","join","createHTMLImage","FeedLike","icon","Icon","autoGenerateKey","defaultProps","as","FeedMeta","like","createShorthand","val","FeedUser","FeedSummary","date","user","FeedContent","extraImages","extraText","meta","summary","FeedLabel","FeedEvent","hasContentProp","contentProps","Feed","events","eventElements","eventProps","childKey","eventData","_objectWithoutPropertiesLoose","finalKey","Content","Date","Event","Extra","Label","Like","Meta","Summary","User","CardDescription","CardHeader","CardMeta","CardContent","description","extra","header","CardGroup","centered","doubling","items","itemsPerRow","stackable","itemsJSX","item","Card","_Component","_this","_len","arguments","length","args","Array","_key","call","apply","this","concat","handleClick","e","onClick","_inheritsLoose","prototype","render","_this$props","fluid","href","link","raised","Image","ui","wrapped","Component","Description","Group","Header","SegmentGroup","compact","horizontal","piled","stacked","SegmentInline","Segment","attached","basic","circular","clearing","loading","placeholder","padded","secondary","tertiary","vertical","Inline","GridRow","columns","divided","reversed","Grid","celled","container","relaxed","Column","Row"],"mappings":"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","file":"static/js/2.1b49913b.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey } from '../../lib';\n/**\n * A loader alerts a user to wait for an activity to complete.\n * @see Dimmer\n */\n\nfunction Loader(props) {\n  var active = props.active,\n      children = props.children,\n      className = props.className,\n      content = props.content,\n      disabled = props.disabled,\n      indeterminate = props.indeterminate,\n      inline = props.inline,\n      inverted = props.inverted,\n      size = props.size;\n  var classes = cx('ui', size, useKeyOnly(active, 'active'), useKeyOnly(disabled, 'disabled'), useKeyOnly(indeterminate, 'indeterminate'), useKeyOnly(inverted, 'inverted'), useKeyOnly(children || content, 'text'), useKeyOrValueAndKey(inline, 'inline'), 'loader', className);\n  var rest = getUnhandledProps(Loader, props);\n  var ElementType = getElementType(Loader, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nLoader.handledProps = [\"active\", \"as\", \"children\", \"className\", \"content\", \"disabled\", \"indeterminate\", \"inline\", \"inverted\", \"size\"];\nLoader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** A loader can be active or visible. */\n  active: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A loader can be disabled or hidden. */\n  disabled: PropTypes.bool,\n\n  /** A loader can show it's unsure of how long a task will take. */\n  indeterminate: PropTypes.bool,\n\n  /** Loaders can appear inline with content. */\n  inline: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['centered'])]),\n\n  /** Loaders can have their colors inverted. */\n  inverted: PropTypes.bool,\n\n  /** Loaders can have different sizes. */\n  size: PropTypes.oneOf(SUI.SIZES)\n} : {};\nexport default Loader;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { customPropTypes, createShorthandFactory, getElementType, getUnhandledProps, SUI, useKeyOnly, useMultipleProp, useTextAlignProp, useValueAndKey, useVerticalAlignProp, useWidthProp } from '../../lib';\n/**\n * A column sub-component for Grid.\n */\n\nfunction GridColumn(props) {\n  var children = props.children,\n      className = props.className,\n      computer = props.computer,\n      color = props.color,\n      floated = props.floated,\n      largeScreen = props.largeScreen,\n      mobile = props.mobile,\n      only = props.only,\n      stretched = props.stretched,\n      tablet = props.tablet,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign,\n      widescreen = props.widescreen,\n      width = props.width;\n  var classes = cx(color, useKeyOnly(stretched, 'stretched'), useMultipleProp(only, 'only'), useTextAlignProp(textAlign), useValueAndKey(floated, 'floated'), useVerticalAlignProp(verticalAlign), useWidthProp(computer, 'wide computer'), useWidthProp(largeScreen, 'wide large screen'), useWidthProp(mobile, 'wide mobile'), useWidthProp(tablet, 'wide tablet'), useWidthProp(widescreen, 'wide widescreen'), useWidthProp(width, 'wide'), 'column', className);\n  var rest = getUnhandledProps(GridColumn, props);\n  var ElementType = getElementType(GridColumn, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nGridColumn.handledProps = [\"as\", \"children\", \"className\", \"color\", \"computer\", \"floated\", \"largeScreen\", \"mobile\", \"only\", \"stretched\", \"tablet\", \"textAlign\", \"verticalAlign\", \"widescreen\", \"width\"];\nGridColumn.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A grid column can be colored. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** A column can specify a width for a computer. */\n  computer: customPropTypes.every([customPropTypes.disallow(['width']), PropTypes.oneOf(SUI.WIDTHS)]),\n\n  /** A column can sit flush against the left or right edge of a row. */\n  floated: PropTypes.oneOf(SUI.FLOATS),\n\n  /** A column can specify a width for a large screen device. */\n  largeScreen: customPropTypes.every([customPropTypes.disallow(['width']), PropTypes.oneOf(SUI.WIDTHS)]),\n\n  /** A column can specify a width for a mobile device. */\n  mobile: customPropTypes.every([customPropTypes.disallow(['width']), PropTypes.oneOf(SUI.WIDTHS)]),\n\n  /** A column can appear only for a specific device, or screen sizes. */\n  only: customPropTypes.multipleProp(SUI.VISIBILITY),\n\n  /** A column can stretch its contents to take up the entire grid or row height. */\n  stretched: PropTypes.bool,\n\n  /** A column can specify a width for a tablet device. */\n  tablet: customPropTypes.every([customPropTypes.disallow(['width']), PropTypes.oneOf(SUI.WIDTHS)]),\n\n  /** A column can specify its text alignment. */\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS),\n\n  /** A column can specify its vertical alignment to have all its columns vertically centered. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS),\n\n  /** A column can specify a width for a wide screen device. */\n  widescreen: customPropTypes.every([customPropTypes.disallow(['width']), PropTypes.oneOf(SUI.WIDTHS)]),\n\n  /** Represents width of column. */\n  width: customPropTypes.every([customPropTypes.disallow(['computer', 'largeScreen', 'mobile', 'tablet', 'widescreen']), PropTypes.oneOf(SUI.WIDTHS)])\n} : {};\nGridColumn.create = createShorthandFactory(GridColumn, function (children) {\n  return {\n    children: children\n  };\n});\nexport default GridColumn;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * An event or an event summary can contain a date.\n */\n\nfunction FeedDate(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var classes = cx('date', className);\n  var rest = getUnhandledProps(FeedDate, props);\n  var ElementType = getElementType(FeedDate, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nFeedDate.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nFeedDate.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nexport default FeedDate;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _map from \"lodash/map\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createHTMLImage, customPropTypes, getElementType, getUnhandledProps, useKeyOnly } from '../../lib';\n/**\n * A feed can contain an extra content.\n */\n\nfunction FeedExtra(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      images = props.images,\n      text = props.text;\n  var classes = cx(useKeyOnly(images, 'images'), useKeyOnly(content || text, 'text'), 'extra', className);\n  var rest = getUnhandledProps(FeedExtra, props);\n  var ElementType = getElementType(FeedExtra, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  } // TODO need a \"collection factory\" to handle creating multiple image elements and their keys\n\n\n  var imageElements = _map(images, function (image, index) {\n    var key = [index, image].join('-');\n    return createHTMLImage(image, {\n      key: key\n    });\n  });\n\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), content, imageElements);\n}\n\nFeedExtra.handledProps = [\"as\", \"children\", \"className\", \"content\", \"images\", \"text\"];\nFeedExtra.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** An event can contain additional information like a set of images. */\n  images: customPropTypes.every([customPropTypes.disallow(['text']), PropTypes.oneOfType([PropTypes.bool, customPropTypes.collectionShorthand])]),\n\n  /** An event can contain additional text information. */\n  text: PropTypes.bool\n} : {};\nexport default FeedExtra;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\nimport Icon from '../../elements/Icon';\n/**\n * A feed can contain a like element.\n */\n\nfunction FeedLike(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      icon = props.icon;\n  var classes = cx('like', className);\n  var rest = getUnhandledProps(FeedLike, props);\n  var ElementType = getElementType(FeedLike, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), Icon.create(icon, {\n    autoGenerateKey: false\n  }), content);\n}\n\nFeedLike.handledProps = [\"as\", \"children\", \"className\", \"content\", \"icon\"];\nFeedLike.defaultProps = {\n  as: 'a'\n};\nFeedLike.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Shorthand for icon. Mutually exclusive with children. */\n  icon: customPropTypes.itemShorthand\n} : {};\nexport default FeedLike;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthand, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\nimport FeedLike from './FeedLike';\n/**\n * A feed can contain a meta.\n */\n\nfunction FeedMeta(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      like = props.like;\n  var classes = cx('meta', className);\n  var rest = getUnhandledProps(FeedMeta, props);\n  var ElementType = getElementType(FeedMeta, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), createShorthand(FeedLike, function (val) {\n    return {\n      content: val\n    };\n  }, like, {\n    autoGenerateKey: false\n  }), content);\n}\n\nFeedMeta.handledProps = [\"as\", \"children\", \"className\", \"content\", \"like\"];\nFeedMeta.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Shorthand for FeedLike. */\n  like: customPropTypes.itemShorthand\n} : {};\nexport default FeedMeta;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * A feed can contain a user element.\n */\n\nfunction FeedUser(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var classes = cx('user', className);\n  var rest = getUnhandledProps(FeedUser, props);\n  var ElementType = getElementType(FeedUser, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nFeedUser.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nFeedUser.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nFeedUser.defaultProps = {\n  as: 'a'\n};\nexport default FeedUser;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthand, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\nimport FeedDate from './FeedDate';\nimport FeedUser from './FeedUser';\n/**\n * A feed can contain a summary.\n */\n\nfunction FeedSummary(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      date = props.date,\n      user = props.user;\n  var classes = cx('summary', className);\n  var rest = getUnhandledProps(FeedSummary, props);\n  var ElementType = getElementType(FeedSummary, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), createShorthand(FeedUser, function (val) {\n    return {\n      content: val\n    };\n  }, user, {\n    autoGenerateKey: false\n  }), content && ' ', content, content && ' ', createShorthand(FeedDate, function (val) {\n    return {\n      content: val\n    };\n  }, date, {\n    autoGenerateKey: false\n  }));\n}\n\nFeedSummary.handledProps = [\"as\", \"children\", \"className\", \"content\", \"date\", \"user\"];\nFeedSummary.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Shorthand for FeedDate. */\n  date: customPropTypes.itemShorthand,\n\n  /** Shorthand for FeedUser. */\n  user: customPropTypes.itemShorthand\n} : {};\nexport default FeedSummary;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthand, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\nimport FeedDate from './FeedDate';\nimport FeedExtra from './FeedExtra';\nimport FeedMeta from './FeedMeta';\nimport FeedSummary from './FeedSummary';\n\nfunction FeedContent(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      extraImages = props.extraImages,\n      extraText = props.extraText,\n      date = props.date,\n      meta = props.meta,\n      summary = props.summary;\n  var classes = cx('content', className);\n  var rest = getUnhandledProps(FeedContent, props);\n  var ElementType = getElementType(FeedContent, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), createShorthand(FeedDate, function (val) {\n    return {\n      content: val\n    };\n  }, date, {\n    autoGenerateKey: false\n  }), createShorthand(FeedSummary, function (val) {\n    return {\n      content: val\n    };\n  }, summary, {\n    autoGenerateKey: false\n  }), content, createShorthand(FeedExtra, function (val) {\n    return {\n      text: true,\n      content: val\n    };\n  }, extraText, {\n    autoGenerateKey: false\n  }), createShorthand(FeedExtra, function (val) {\n    return {\n      images: val\n    };\n  }, extraImages, {\n    autoGenerateKey: false\n  }), createShorthand(FeedMeta, function (val) {\n    return {\n      content: val\n    };\n  }, meta, {\n    autoGenerateKey: false\n  }));\n}\n\nFeedContent.handledProps = [\"as\", \"children\", \"className\", \"content\", \"date\", \"extraImages\", \"extraText\", \"meta\", \"summary\"];\nFeedContent.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** An event can contain a date. */\n  date: customPropTypes.itemShorthand,\n\n  /** Shorthand for FeedExtra with images. */\n  extraImages: FeedExtra.propTypes.images,\n\n  /** Shorthand for FeedExtra with text. */\n  extraText: customPropTypes.itemShorthand,\n\n  /** Shorthand for FeedMeta. */\n  meta: customPropTypes.itemShorthand,\n\n  /** Shorthand for FeedSummary. */\n  summary: customPropTypes.itemShorthand\n} : {};\nexport default FeedContent;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createHTMLImage, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\nimport Icon from '../../elements/Icon';\n/**\n * An event can contain an image or icon label.\n */\n\nfunction FeedLabel(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      icon = props.icon,\n      image = props.image;\n  var classes = cx('label', className);\n  var rest = getUnhandledProps(FeedLabel, props);\n  var ElementType = getElementType(FeedLabel, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), content, Icon.create(icon, {\n    autoGenerateKey: false\n  }), createHTMLImage(image));\n}\n\nFeedLabel.handledProps = [\"as\", \"children\", \"className\", \"content\", \"icon\", \"image\"];\nFeedLabel.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** An event can contain icon label. */\n  icon: customPropTypes.itemShorthand,\n\n  /** An event can contain image label. */\n  image: customPropTypes.itemShorthand\n} : {};\nexport default FeedLabel;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { createShorthand, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\nimport FeedContent from './FeedContent';\nimport FeedLabel from './FeedLabel';\n/**\n * A feed contains an event.\n */\n\nfunction FeedEvent(props) {\n  var content = props.content,\n      children = props.children,\n      className = props.className,\n      date = props.date,\n      extraImages = props.extraImages,\n      extraText = props.extraText,\n      image = props.image,\n      icon = props.icon,\n      meta = props.meta,\n      summary = props.summary;\n  var classes = cx('event', className);\n  var rest = getUnhandledProps(FeedEvent, props);\n  var ElementType = getElementType(FeedEvent, props);\n  var hasContentProp = content || date || extraImages || extraText || meta || summary;\n  var contentProps = {\n    content: content,\n    date: date,\n    extraImages: extraImages,\n    extraText: extraText,\n    meta: meta,\n    summary: summary\n  };\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), createShorthand(FeedLabel, function (val) {\n    return {\n      icon: val\n    };\n  }, icon, {\n    autoGenerateKey: false\n  }), createShorthand(FeedLabel, function (val) {\n    return {\n      image: val\n    };\n  }, image, {\n    autoGenerateKey: false\n  }), hasContentProp && /*#__PURE__*/React.createElement(FeedContent, contentProps), children);\n}\n\nFeedEvent.handledProps = [\"as\", \"children\", \"className\", \"content\", \"date\", \"extraImages\", \"extraText\", \"icon\", \"image\", \"meta\", \"summary\"];\nFeedEvent.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for FeedContent. */\n  content: customPropTypes.itemShorthand,\n\n  /** Shorthand for FeedDate. */\n  date: customPropTypes.itemShorthand,\n\n  /** Shorthand for FeedExtra with images. */\n  extraImages: customPropTypes.itemShorthand,\n\n  /** Shorthand for FeedExtra with content. */\n  extraText: customPropTypes.itemShorthand,\n\n  /** An event can contain icon label. */\n  icon: customPropTypes.itemShorthand,\n\n  /** An event can contain image label. */\n  image: customPropTypes.itemShorthand,\n\n  /** Shorthand for FeedMeta. */\n  meta: customPropTypes.itemShorthand,\n\n  /** Shorthand for FeedSummary. */\n  summary: customPropTypes.itemShorthand\n} : {};\nexport default FeedEvent;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _without from \"lodash/without\";\nimport _map from \"lodash/map\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI } from '../../lib';\nimport FeedContent from './FeedContent';\nimport FeedDate from './FeedDate';\nimport FeedEvent from './FeedEvent';\nimport FeedExtra from './FeedExtra';\nimport FeedLabel from './FeedLabel';\nimport FeedLike from './FeedLike';\nimport FeedMeta from './FeedMeta';\nimport FeedSummary from './FeedSummary';\nimport FeedUser from './FeedUser';\n/**\n * A feed presents user activity chronologically.\n */\n\nfunction Feed(props) {\n  var children = props.children,\n      className = props.className,\n      events = props.events,\n      size = props.size;\n  var classes = cx('ui', size, 'feed', className);\n  var rest = getUnhandledProps(Feed, props);\n  var ElementType = getElementType(Feed, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  var eventElements = _map(events, function (eventProps) {\n    var childKey = eventProps.childKey,\n        date = eventProps.date,\n        meta = eventProps.meta,\n        summary = eventProps.summary,\n        eventData = _objectWithoutPropertiesLoose(eventProps, [\"childKey\", \"date\", \"meta\", \"summary\"]);\n\n    var finalKey = childKey || [date, meta, summary].join('-');\n    return /*#__PURE__*/React.createElement(FeedEvent, _extends({\n      date: date,\n      key: finalKey,\n      meta: meta,\n      summary: summary\n    }, eventData));\n  });\n\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), eventElements);\n}\n\nFeed.handledProps = [\"as\", \"children\", \"className\", \"events\", \"size\"];\nFeed.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand array of props for FeedEvent. */\n  events: customPropTypes.collectionShorthand,\n\n  /** A feed can have different sizes. */\n  size: PropTypes.oneOf(_without(SUI.SIZES, 'mini', 'tiny', 'medium', 'big', 'huge', 'massive'))\n} : {};\nFeed.Content = FeedContent;\nFeed.Date = FeedDate;\nFeed.Event = FeedEvent;\nFeed.Extra = FeedExtra;\nFeed.Label = FeedLabel;\nFeed.Like = FeedLike;\nFeed.Meta = FeedMeta;\nFeed.Summary = FeedSummary;\nFeed.User = FeedUser;\nexport default Feed;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _without from \"lodash/without\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useTextAlignProp } from '../../lib';\n/**\n * A card can contain a description with one or more paragraphs.\n */\n\nfunction CardDescription(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      textAlign = props.textAlign;\n  var classes = cx(useTextAlignProp(textAlign), 'description', className);\n  var rest = getUnhandledProps(CardDescription, props);\n  var ElementType = getElementType(CardDescription, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nCardDescription.handledProps = [\"as\", \"children\", \"className\", \"content\", \"textAlign\"];\nCardDescription.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A card content can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified'))\n} : {};\nexport default CardDescription;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _without from \"lodash/without\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useTextAlignProp } from '../../lib';\n/**\n * A card can contain a header.\n */\n\nfunction CardHeader(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      textAlign = props.textAlign;\n  var classes = cx(useTextAlignProp(textAlign), 'header', className);\n  var rest = getUnhandledProps(CardHeader, props);\n  var ElementType = getElementType(CardHeader, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nCardHeader.handledProps = [\"as\", \"children\", \"className\", \"content\", \"textAlign\"];\nCardHeader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A card header can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified'))\n} : {};\nexport default CardHeader;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _without from \"lodash/without\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useTextAlignProp } from '../../lib';\n/**\n * A card can contain content metadata.\n */\n\nfunction CardMeta(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      textAlign = props.textAlign;\n  var classes = cx(useTextAlignProp(textAlign), 'meta', className);\n  var rest = getUnhandledProps(CardMeta, props);\n  var ElementType = getElementType(CardMeta, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nCardMeta.handledProps = [\"as\", \"children\", \"className\", \"content\", \"textAlign\"];\nCardMeta.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A card meta can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified'))\n} : {};\nexport default CardMeta;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _without from \"lodash/without\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthand, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useTextAlignProp } from '../../lib';\nimport CardDescription from './CardDescription';\nimport CardHeader from './CardHeader';\nimport CardMeta from './CardMeta';\n/**\n * A card can contain blocks of content or extra content meant to be formatted separately from the main content.\n */\n\nfunction CardContent(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      description = props.description,\n      extra = props.extra,\n      header = props.header,\n      meta = props.meta,\n      textAlign = props.textAlign;\n  var classes = cx(useKeyOnly(extra, 'extra'), useTextAlignProp(textAlign), 'content', className);\n  var rest = getUnhandledProps(CardContent, props);\n  var ElementType = getElementType(CardContent, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  if (!childrenUtils.isNil(content)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), content);\n  }\n\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), createShorthand(CardHeader, function (val) {\n    return {\n      content: val\n    };\n  }, header, {\n    autoGenerateKey: false\n  }), createShorthand(CardMeta, function (val) {\n    return {\n      content: val\n    };\n  }, meta, {\n    autoGenerateKey: false\n  }), createShorthand(CardDescription, function (val) {\n    return {\n      content: val\n    };\n  }, description, {\n    autoGenerateKey: false\n  }));\n}\n\nCardContent.handledProps = [\"as\", \"children\", \"className\", \"content\", \"description\", \"extra\", \"header\", \"meta\", \"textAlign\"];\nCardContent.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Shorthand for CardDescription. */\n  description: customPropTypes.itemShorthand,\n\n  /** A card can contain extra content meant to be formatted separately from the main content. */\n  extra: PropTypes.bool,\n\n  /** Shorthand for CardHeader. */\n  header: customPropTypes.itemShorthand,\n\n  /** Shorthand for CardMeta. */\n  meta: customPropTypes.itemShorthand,\n\n  /** A card content can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified'))\n} : {};\nexport default CardContent;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _without from \"lodash/without\";\nimport _map from \"lodash/map\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useTextAlignProp, useWidthProp } from '../../lib';\nimport Card from './Card';\n/**\n * A group of cards.\n */\n\nfunction CardGroup(props) {\n  var centered = props.centered,\n      children = props.children,\n      className = props.className,\n      content = props.content,\n      doubling = props.doubling,\n      items = props.items,\n      itemsPerRow = props.itemsPerRow,\n      stackable = props.stackable,\n      textAlign = props.textAlign;\n  var classes = cx('ui', useKeyOnly(centered, 'centered'), useKeyOnly(doubling, 'doubling'), useKeyOnly(stackable, 'stackable'), useTextAlignProp(textAlign), useWidthProp(itemsPerRow), 'cards', className);\n  var rest = getUnhandledProps(CardGroup, props);\n  var ElementType = getElementType(CardGroup, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  if (!childrenUtils.isNil(content)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), content);\n  }\n\n  var itemsJSX = _map(items, function (item) {\n    var key = item.key || [item.header, item.description].join('-');\n    return /*#__PURE__*/React.createElement(Card, _extends({\n      key: key\n    }, item));\n  });\n\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), itemsJSX);\n}\n\nCardGroup.handledProps = [\"as\", \"centered\", \"children\", \"className\", \"content\", \"doubling\", \"items\", \"itemsPerRow\", \"stackable\", \"textAlign\"];\nCardGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** A group of cards can center itself inside its container. */\n  centered: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A group of cards can double its column width for mobile. */\n  doubling: PropTypes.bool,\n\n  /** Shorthand array of props for Card. */\n  items: customPropTypes.collectionShorthand,\n\n  /** A group of cards can set how many cards should exist in a row. */\n  itemsPerRow: PropTypes.oneOf(SUI.WIDTHS),\n\n  /** A group of cards can automatically stack rows to a single columns on mobile devices. */\n  stackable: PropTypes.bool,\n\n  /** A card group can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified'))\n} : {};\nexport default CardGroup;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly } from '../../lib';\nimport Image from '../../elements/Image';\nimport CardContent from './CardContent';\nimport CardDescription from './CardDescription';\nimport CardGroup from './CardGroup';\nimport CardHeader from './CardHeader';\nimport CardMeta from './CardMeta';\n/**\n * A card displays site content in a manner similar to a playing card.\n */\n\nvar Card = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Card, _Component);\n\n  function Card() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n\n    _this.handleClick = function (e) {\n      var onClick = _this.props.onClick;\n      if (onClick) onClick(e, _this.props);\n    };\n\n    return _this;\n  }\n\n  var _proto = Card.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        centered = _this$props.centered,\n        children = _this$props.children,\n        className = _this$props.className,\n        color = _this$props.color,\n        content = _this$props.content,\n        description = _this$props.description,\n        extra = _this$props.extra,\n        fluid = _this$props.fluid,\n        header = _this$props.header,\n        href = _this$props.href,\n        image = _this$props.image,\n        link = _this$props.link,\n        meta = _this$props.meta,\n        onClick = _this$props.onClick,\n        raised = _this$props.raised;\n    var classes = cx('ui', color, useKeyOnly(centered, 'centered'), useKeyOnly(fluid, 'fluid'), useKeyOnly(link, 'link'), useKeyOnly(raised, 'raised'), 'card', className);\n    var rest = getUnhandledProps(Card, this.props);\n    var ElementType = getElementType(Card, this.props, function () {\n      if (onClick) return 'a';\n    });\n\n    if (!childrenUtils.isNil(children)) {\n      return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n        className: classes,\n        href: href,\n        onClick: this.handleClick\n      }), children);\n    }\n\n    if (!childrenUtils.isNil(content)) {\n      return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n        className: classes,\n        href: href,\n        onClick: this.handleClick\n      }), content);\n    }\n\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes,\n      href: href,\n      onClick: this.handleClick\n    }), Image.create(image, {\n      autoGenerateKey: false,\n      defaultProps: {\n        ui: false,\n        wrapped: true\n      }\n    }), (description || header || meta) && /*#__PURE__*/React.createElement(CardContent, {\n      description: description,\n      header: header,\n      meta: meta\n    }), extra && /*#__PURE__*/React.createElement(CardContent, {\n      extra: true\n    }, extra));\n  };\n\n  return Card;\n}(Component);\n\nCard.handledProps = [\"as\", \"centered\", \"children\", \"className\", \"color\", \"content\", \"description\", \"extra\", \"fluid\", \"header\", \"href\", \"image\", \"link\", \"meta\", \"onClick\", \"raised\"];\nexport { Card as default };\nCard.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** A Card can center itself inside its container. */\n  centered: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A Card can be formatted to display different colors. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Shorthand for CardDescription. */\n  description: customPropTypes.itemShorthand,\n\n  /** Shorthand for primary content of CardContent. */\n  extra: customPropTypes.contentShorthand,\n\n  /** A Card can be formatted to take up the width of its container. */\n  fluid: PropTypes.bool,\n\n  /** Shorthand for CardHeader. */\n  header: customPropTypes.itemShorthand,\n\n  /** Render as an `a` tag instead of a `div` and adds the href attribute. */\n  href: PropTypes.string,\n\n  /** A card can contain an Image component. */\n  image: customPropTypes.itemShorthand,\n\n  /** A card can be formatted to link to other content. */\n  link: PropTypes.bool,\n\n  /** Shorthand for CardMeta. */\n  meta: customPropTypes.itemShorthand,\n\n  /**\n   * Called on click. When passed, the component renders as an `a`\n   * tag by default instead of a `div`.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onClick: PropTypes.func,\n\n  /** A Card can be formatted to raise above the page. */\n  raised: PropTypes.bool\n} : {};\nCard.Content = CardContent;\nCard.Description = CardDescription;\nCard.Group = CardGroup;\nCard.Header = CardHeader;\nCard.Meta = CardMeta;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _without from \"lodash/without\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly } from '../../lib';\n/**\n * A group of segments can be formatted to appear together.\n */\n\nfunction SegmentGroup(props) {\n  var children = props.children,\n      className = props.className,\n      compact = props.compact,\n      content = props.content,\n      horizontal = props.horizontal,\n      piled = props.piled,\n      raised = props.raised,\n      size = props.size,\n      stacked = props.stacked;\n  var classes = cx('ui', size, useKeyOnly(compact, 'compact'), useKeyOnly(horizontal, 'horizontal'), useKeyOnly(piled, 'piled'), useKeyOnly(raised, 'raised'), useKeyOnly(stacked, 'stacked'), 'segments', className);\n  var rest = getUnhandledProps(SegmentGroup, props);\n  var ElementType = getElementType(SegmentGroup, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nSegmentGroup.handledProps = [\"as\", \"children\", \"className\", \"compact\", \"content\", \"horizontal\", \"piled\", \"raised\", \"size\", \"stacked\"];\nSegmentGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A segment may take up only as much space as is necessary. */\n  compact: PropTypes.bool,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Formats content to be aligned horizontally. */\n  horizontal: PropTypes.bool,\n\n  /** Formatted to look like a pile of pages. */\n  piled: PropTypes.bool,\n\n  /** A segment group may be formatted to raise above the page. */\n  raised: PropTypes.bool,\n\n  /** A segment group can have different sizes. */\n  size: PropTypes.oneOf(_without(SUI.SIZES, 'medium')),\n\n  /** Formatted to show it contains multiple pages. */\n  stacked: PropTypes.bool\n} : {};\nexport default SegmentGroup;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * A placeholder segment can be inline.\n */\n\nfunction SegmentInline(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var classes = cx('inline', className);\n  var rest = getUnhandledProps(SegmentInline, props);\n  var ElementType = getElementType(SegmentInline, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nSegmentInline.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nSegmentInline.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nexport default SegmentInline;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _without from \"lodash/without\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey, useTextAlignProp, useValueAndKey } from '../../lib';\nimport SegmentGroup from './SegmentGroup';\nimport SegmentInline from './SegmentInline';\n/**\n * A segment is used to create a grouping of related content.\n */\n\nfunction Segment(props) {\n  var attached = props.attached,\n      basic = props.basic,\n      children = props.children,\n      circular = props.circular,\n      className = props.className,\n      clearing = props.clearing,\n      color = props.color,\n      compact = props.compact,\n      content = props.content,\n      disabled = props.disabled,\n      floated = props.floated,\n      inverted = props.inverted,\n      loading = props.loading,\n      placeholder = props.placeholder,\n      padded = props.padded,\n      piled = props.piled,\n      raised = props.raised,\n      secondary = props.secondary,\n      size = props.size,\n      stacked = props.stacked,\n      tertiary = props.tertiary,\n      textAlign = props.textAlign,\n      vertical = props.vertical;\n  var classes = cx('ui', color, size, useKeyOnly(basic, 'basic'), useKeyOnly(circular, 'circular'), useKeyOnly(clearing, 'clearing'), useKeyOnly(compact, 'compact'), useKeyOnly(disabled, 'disabled'), useKeyOnly(inverted, 'inverted'), useKeyOnly(loading, 'loading'), useKeyOnly(placeholder, 'placeholder'), useKeyOnly(piled, 'piled'), useKeyOnly(raised, 'raised'), useKeyOnly(secondary, 'secondary'), useKeyOnly(stacked, 'stacked'), useKeyOnly(tertiary, 'tertiary'), useKeyOnly(vertical, 'vertical'), useKeyOrValueAndKey(attached, 'attached'), useKeyOrValueAndKey(padded, 'padded'), useTextAlignProp(textAlign), useValueAndKey(floated, 'floated'), 'segment', className);\n  var rest = getUnhandledProps(Segment, props);\n  var ElementType = getElementType(Segment, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nSegment.handledProps = [\"as\", \"attached\", \"basic\", \"children\", \"circular\", \"className\", \"clearing\", \"color\", \"compact\", \"content\", \"disabled\", \"floated\", \"inverted\", \"loading\", \"padded\", \"piled\", \"placeholder\", \"raised\", \"secondary\", \"size\", \"stacked\", \"tertiary\", \"textAlign\", \"vertical\"];\nSegment.Group = SegmentGroup;\nSegment.Inline = SegmentInline;\nSegment.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Attach segment to other content, like a header. */\n  attached: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['top', 'bottom'])]),\n\n  /** A basic segment has no special formatting. */\n  basic: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** A segment can be circular. */\n  circular: PropTypes.bool,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A segment can clear floated content. */\n  clearing: PropTypes.bool,\n\n  /** Segment can be colored. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** A segment may take up only as much space as is necessary. */\n  compact: PropTypes.bool,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A segment may show its content is disabled. */\n  disabled: PropTypes.bool,\n\n  /** Segment content can be floated to the left or right. */\n  floated: PropTypes.oneOf(SUI.FLOATS),\n\n  /** A segment can have its colors inverted for contrast. */\n  inverted: PropTypes.bool,\n\n  /** A segment may show its content is being loaded. */\n  loading: PropTypes.bool,\n\n  /** A segment can increase its padding. */\n  padded: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['very'])]),\n\n  /** A segment can be used to reserve space for conditionally displayed content. */\n  placeholder: PropTypes.bool,\n\n  /** Formatted to look like a pile of pages. */\n  piled: PropTypes.bool,\n\n  /** A segment may be formatted to raise above the page. */\n  raised: PropTypes.bool,\n\n  /** A segment can be formatted to appear less noticeable. */\n  secondary: PropTypes.bool,\n\n  /** A segment can have different sizes. */\n  size: PropTypes.oneOf(_without(SUI.SIZES, 'medium')),\n\n  /** Formatted to show it contains multiple pages. */\n  stacked: PropTypes.bool,\n\n  /** A segment can be formatted to appear even less noticeable. */\n  tertiary: PropTypes.bool,\n\n  /** Formats content to be aligned as part of a vertical group. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified')),\n\n  /** Formats content to be aligned vertically. */\n  vertical: PropTypes.bool\n} : {};\nexport default Segment;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useMultipleProp, useTextAlignProp, useVerticalAlignProp, useWidthProp } from '../../lib';\n/**\n * A row sub-component for Grid.\n */\n\nfunction GridRow(props) {\n  var centered = props.centered,\n      children = props.children,\n      className = props.className,\n      color = props.color,\n      columns = props.columns,\n      divided = props.divided,\n      only = props.only,\n      reversed = props.reversed,\n      stretched = props.stretched,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign;\n  var classes = cx(color, useKeyOnly(centered, 'centered'), useKeyOnly(divided, 'divided'), useKeyOnly(stretched, 'stretched'), useMultipleProp(only, 'only'), useMultipleProp(reversed, 'reversed'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), useWidthProp(columns, 'column', true), 'row', className);\n  var rest = getUnhandledProps(GridRow, props);\n  var ElementType = getElementType(GridRow, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nGridRow.handledProps = [\"as\", \"centered\", \"children\", \"className\", \"color\", \"columns\", \"divided\", \"only\", \"reversed\", \"stretched\", \"textAlign\", \"verticalAlign\"];\nGridRow.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** A row can have its columns centered. */\n  centered: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A grid row can be colored. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** Represents column count per line in Row. */\n  columns: PropTypes.oneOf([].concat(SUI.WIDTHS, ['equal'])),\n\n  /** A row can have dividers between its columns. */\n  divided: PropTypes.bool,\n\n  /** A row can appear only for a specific device, or screen sizes. */\n  only: customPropTypes.multipleProp(SUI.VISIBILITY),\n\n  /** A row can specify that its columns should reverse order at different device sizes. */\n  reversed: customPropTypes.multipleProp(['computer', 'computer vertically', 'mobile', 'mobile vertically', 'tablet', 'tablet vertically']),\n\n  /** A row can stretch its contents to take up the entire column height. */\n  stretched: PropTypes.bool,\n\n  /** A row can specify its text alignment. */\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS),\n\n  /** A row can specify its vertical alignment to have all its columns vertically centered. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS)\n} : {};\nexport default GridRow;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey, useMultipleProp, useTextAlignProp, useVerticalAlignProp, useWidthProp } from '../../lib';\nimport GridColumn from './GridColumn';\nimport GridRow from './GridRow';\n/**\n * A grid is used to harmonize negative space in a layout.\n */\n\nfunction Grid(props) {\n  var celled = props.celled,\n      centered = props.centered,\n      children = props.children,\n      className = props.className,\n      columns = props.columns,\n      container = props.container,\n      divided = props.divided,\n      doubling = props.doubling,\n      inverted = props.inverted,\n      padded = props.padded,\n      relaxed = props.relaxed,\n      reversed = props.reversed,\n      stackable = props.stackable,\n      stretched = props.stretched,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign;\n  var classes = cx('ui', useKeyOnly(centered, 'centered'), useKeyOnly(container, 'container'), useKeyOnly(doubling, 'doubling'), useKeyOnly(inverted, 'inverted'), useKeyOnly(stackable, 'stackable'), useKeyOnly(stretched, 'stretched'), useKeyOrValueAndKey(celled, 'celled'), useKeyOrValueAndKey(divided, 'divided'), useKeyOrValueAndKey(padded, 'padded'), useKeyOrValueAndKey(relaxed, 'relaxed'), useMultipleProp(reversed, 'reversed'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), useWidthProp(columns, 'column', true), 'grid', className);\n  var rest = getUnhandledProps(Grid, props);\n  var ElementType = getElementType(Grid, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nGrid.handledProps = [\"as\", \"celled\", \"centered\", \"children\", \"className\", \"columns\", \"container\", \"divided\", \"doubling\", \"inverted\", \"padded\", \"relaxed\", \"reversed\", \"stackable\", \"stretched\", \"textAlign\", \"verticalAlign\"];\nGrid.Column = GridColumn;\nGrid.Row = GridRow;\nGrid.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** A grid can have rows divided into cells. */\n  celled: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['internally'])]),\n\n  /** A grid can have its columns centered. */\n  centered: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Represents column count per row in Grid. */\n  columns: PropTypes.oneOf([].concat(SUI.WIDTHS, ['equal'])),\n\n  /** A grid can be combined with a container to use the available layout and alignment. */\n  container: PropTypes.bool,\n\n  /** A grid can have dividers between its columns. */\n  divided: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['vertically'])]),\n\n  /** A grid can double its column width on tablet and mobile sizes. */\n  doubling: PropTypes.bool,\n\n  /** A grid's colors can be inverted. */\n  inverted: PropTypes.bool,\n\n  /** A grid can preserve its vertical and horizontal gutters on first and last columns. */\n  padded: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['horizontally', 'vertically'])]),\n\n  /** A grid can increase its gutters to allow for more negative space. */\n  relaxed: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['very'])]),\n\n  /** A grid can specify that its columns should reverse order at different device sizes. */\n  reversed: customPropTypes.multipleProp(['computer', 'computer vertically', 'mobile', 'mobile vertically', 'tablet', 'tablet vertically']),\n\n  /** A grid can have its columns stack on-top of each other after reaching mobile breakpoints. */\n  stackable: PropTypes.bool,\n\n  /** A grid can stretch its contents to take up the entire grid height. */\n  stretched: PropTypes.bool,\n\n  /** A grid can specify its text alignment. */\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS),\n\n  /** A grid can specify its vertical alignment to have all its columns vertically centered. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS)\n} : {};\nexport default Grid;"],"sourceRoot":""}