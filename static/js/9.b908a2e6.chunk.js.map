{"version":3,"sources":["hw1/components/HomeWorkDescription.js","hw2/components/Glider.js","../node_modules/semantic-ui-react/dist/es/elements/Container/Container.js","hw5/components/Comments.js","hw5/components/Posts.js","../node_modules/semantic-ui-react/dist/es/elements/List/ListDescription.js","../node_modules/semantic-ui-react/dist/es/elements/List/ListHeader.js","../node_modules/semantic-ui-react/dist/es/elements/List/ListContent.js","../node_modules/semantic-ui-react/dist/es/elements/List/ListIcon.js","../node_modules/semantic-ui-react/dist/es/elements/List/ListItem.js","../node_modules/semantic-ui-react/dist/es/elements/List/ListList.js","../node_modules/semantic-ui-react/dist/es/elements/List/List.js","hw5/components/UserDetails.js","hw5/components/Users.js","hw5/components/AlbumDetails.js","hw5/components/Albums.js","hw5/components/AlbumPhotos.js","hw5/components/Blog.js","hw5/components/HomeWork5.js"],"names":["HomeWorkDescription","state","open","handleOpen","setState","handleClose","this","closeOnTriggerClick","onOpen","onClose","openOnTriggerClick","trigger","content","negative","positive","className","dangerouslySetInnerHTML","__html","props","data","Component","Glider","glider","options","bullets","children","slider","useRef","useEffect","Glide","current","mount","destroy","ref","id","data-glide-el","map","img","i","key","data-glide-dir","_","Container","fluid","text","textAlign","classes","cx","useKeyOnly","useTextAlignProp","rest","getUnhandledProps","ElementType","getElementType","React","createElement","_extends","childrenUtils","isNil","handledProps","propTypes","Comments","useState","comments","setComments","isCommentsFetching","setIsCommentsFetching","postId","useParams","fetch","then","response","json","Loader","inline","active","Feed","c","Event","Label","icon","Content","Date","email","Summary","name","Extra","body","Posts","posts","setPosts","isPostFetching","setIsPostFetching","contextRef","createRef","path","useRouteMatch","Grid","columns","Column","Ref","innerRef","size","post","image","as","Link","to","userId","title","exact","ListDescription","create","createShorthandFactory","ListHeader","ListContent","description","floated","header","verticalAlign","useValueAndKey","useVerticalAlignProp","ListIcon","Icon","ListItem","_Component","_this","_len","arguments","length","args","Array","_key","call","apply","concat","handleClick","e","disabled","_invoke","_inheritsLoose","prototype","render","_this$props","value","valueProp","role","onClick","iconElement","autoGenerateKey","imageElement","Image","isValidElement","_isPlainObject","defaultProps","headerElement","descriptionElement","ListList","List","handleItemOverrides","predefinedProps","itemProps","_this2","animated","bulleted","celled","divided","horizontal","inverted","items","link","ordered","relaxed","selection","useKeyOrValueAndKey","_map","item","overrideProps","Description","Header","Item","UserDetails","userDetails","setUserDetails","userAlbums","setUserAlbums","isFetchingUserData","setIsFetchingUserData","isFetchingUserAlbums","setIsFetchingUserAlbums","user","catch","err","Card","Dimmer","src","wrapped","ui","Meta","phone","a","Users","users","setUsers","isFetchingUsers","setIsFetchingUsers","GridColumn","avatar","AlbumDetails","albumId","albums","setAlbums","photos","setPhotos","isFetchingAlbums","setIsFetchingAlbums","isFetchingAlbumsPhotos","setIsFetchingAlbumsPhotos","p","thumbnailUrl","Albums","album","AlbumPhotos","Object","assign","imagesData","autoplay","type","perView","url","alt","Blog","Menu","tabular","attached","NavLink","activeClassName","Segment","HomeWork5","Descriptions","hw5"],"mappings":"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","file":"static/js/9.b908a2e6.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport {\r\n    Button,\r\n    TransitionablePortal,\r\n} from 'semantic-ui-react'\r\n\r\nexport default class HomeWorkDescription extends Component {\r\n    state = {\r\n        open: false\r\n    }\r\n\r\n    handleOpen = () => this.setState({ open: true })\r\n\r\n    handleClose = () => this.setState({ open: false })\r\n\r\n    render() {\r\n        const { open } = this.state\r\n\r\n        return (\r\n            <TransitionablePortal\r\n                closeOnTriggerClick\r\n                onOpen={this.handleOpen}\r\n                onClose={this.handleClose}\r\n                openOnTriggerClick\r\n                trigger={\r\n                    <Button\r\n                        content={open ? 'Close Description' : 'Open Description'}\r\n                        negative={open}\r\n                        positive={!open}\r\n                    />\r\n                }\r\n            >\r\n                <div className=\"hw-description\" dangerouslySetInnerHTML={{ __html: this.props.data }} />\r\n            </TransitionablePortal>\r\n        )\r\n    }\r\n}","import React, { useEffect, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Glide from \"@glidejs/glide\";\r\nimport \"@glidejs/glide/dist/css/glide.core.min.css\";\r\nimport \"@glidejs/glide/dist/css/glide.theme.min.css\";\r\n\r\n\r\nfunction Glider({ options, bullets, children }) {\r\n    let glider;\r\n    let slider = useRef();\r\n\r\n    useEffect(() => {\r\n        glider = new Glide(slider.current, options).mount();\r\n\r\n        return () => {\r\n            glider.destroy();\r\n        }\r\n    });\r\n\r\n    return (\r\n        <div ref={slider} className=\"glide\" id=\"glide1\">\r\n            <div className=\"glide__track\" data-glide-el=\"track\">\r\n                <ul className=\"glide__slides\">\r\n                    {children.map((img, i) => <li className=\"glide__slide\" key={i}>{img}</li>)}\r\n                </ul>\r\n            </div>\r\n            <div className=\"glide__arrows\" data-glide-el=\"controls\">\r\n                <button className=\"glide__arrow glide__arrow--left\" data-glide-dir=\"<\">prev</button>\r\n                <button className=\"glide__arrow glide__arrow--right\" data-glide-dir=\">\">next</button>\r\n            </div>\r\n            {bullets &&\r\n                <div className=\"glide__bullets\" data-glide-el=\"controls[nav]\">\r\n                    {children.map((_, i) => <button key={i} className=\"glide__bullet\" data-glide-dir={`=${i}`} />)}\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nGlider.propTypes = {\r\n    children: PropTypes.array\r\n}\r\n\r\nexport default Glider;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useTextAlignProp } from '../../lib';\n/**\n * A container limits content to a maximum width.\n */\n\nfunction Container(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      fluid = props.fluid,\n      text = props.text,\n      textAlign = props.textAlign;\n  var classes = cx('ui', useKeyOnly(text, 'text'), useKeyOnly(fluid, 'fluid'), useTextAlignProp(textAlign), 'container', className);\n  var rest = getUnhandledProps(Container, props);\n  var ElementType = getElementType(Container, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nContainer.handledProps = [\"as\", \"children\", \"className\", \"content\", \"fluid\", \"text\", \"textAlign\"];\nContainer.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Container has no maximum width. */\n  fluid: PropTypes.bool,\n\n  /** Reduce maximum width to more naturally accommodate text. */\n  text: PropTypes.bool,\n\n  /** Align container text. */\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS)\n} : {};\nexport default Container;","import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Feed, Loader } from 'semantic-ui-react';\r\n\r\nfunction Comments() {\r\n  const [comments, setComments] = useState([]);\r\n  const [isCommentsFetching, setIsCommentsFetching] = useState(false);\r\n  const { postId } = useParams();\r\n\r\n  useEffect(() => {\r\n    setIsCommentsFetching(true);\r\n    setComments([]);\r\n    fetch(`https://jsonplaceholder.typicode.com/posts/${postId}/comments`)\r\n      .then(response => response.json())\r\n      .then(comments => {\r\n        setComments(comments);\r\n        setIsCommentsFetching(false);\r\n      })\r\n  }, [postId]);\r\n\r\n  if (isCommentsFetching) {\r\n    return (<Loader inline='centered' active={isCommentsFetching} />)\r\n  } else {\r\n    return (\r\n      <Feed>\r\n        {comments.map(c => {\r\n          return (\r\n            <Feed.Event key={c.id}>\r\n              <Feed.Label icon='pencil' />\r\n              <Feed.Content>\r\n                <Feed.Date content={c.email} />\r\n                <Feed.Summary content={c.name} />\r\n                <Feed.Extra text content={c.body} />\r\n              </Feed.Content>\r\n            </Feed.Event>\r\n          )\r\n        })}\r\n      </Feed>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Comments;","import React, { useState, useEffect, createRef } from 'react';\r\nimport { Feed, Loader, Container, Grid, Ref, Segment } from 'semantic-ui-react';\r\nimport { Switch, Route, Link, useRouteMatch } from 'react-router-dom';\r\nimport Comments from \"./Comments\";\r\n\r\nfunction Posts() {\r\n\r\n  const [posts, setPosts] = useState([]);\r\n  const [isPostFetching, setIsPostFetching] = useState(false);\r\n  const contextRef = createRef();\r\n\r\n  const { path } = useRouteMatch();\r\n\r\n  useEffect(() => {\r\n    setIsPostFetching(true);\r\n    fetch(`https://jsonplaceholder.typicode.com/posts`)\r\n      .then(response => response.json())\r\n      .then(posts => {\r\n        setPosts(posts);\r\n        setIsPostFetching(false);\r\n      })\r\n  }, []);\r\n\r\n  return (\r\n    <Container fluid>\r\n      <Grid columns={2}>\r\n        <Grid.Column>\r\n          <Ref innerRef={contextRef}>\r\n            <div>\r\n                <Loader size='small' active={isPostFetching} />\r\n                <Feed>\r\n                  {posts.map(post => (\r\n                    <Feed.Event key={post.id}>\r\n                      <Feed.Label image='https://react.semantic-ui.com/images/avatar/small/elliot.jpg' as={Link} to={`/home-work/5/user/${post.userId}`} />\r\n                      <Feed.Content>\r\n                        <Feed.Summary>\r\n                          <Link to={`${path}/${post.id}`}>{post.title}</Link>\r\n                        </Feed.Summary>\r\n                        <Feed.Extra text>\r\n                          {post.body}\r\n                        </Feed.Extra>\r\n                      </Feed.Content>\r\n                    </Feed.Event>\r\n                  ))}\r\n                </Feed>\r\n            </div>\r\n          </Ref>\r\n        </Grid.Column>\r\n        <Grid.Column>\r\n          <Switch>\r\n            <Route path={`${path}/:postId`} exact>\r\n              <Comments />\r\n            </Route>\r\n          </Switch>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Posts;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * A list item can contain a description.\n */\n\nfunction ListDescription(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var classes = cx(className, 'description');\n  var rest = getUnhandledProps(ListDescription, props);\n  var ElementType = getElementType(ListDescription, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nListDescription.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nListDescription.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nListDescription.create = createShorthandFactory(ListDescription, function (content) {\n  return {\n    content: content\n  };\n});\nexport default ListDescription;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * A list item can contain a header.\n */\n\nfunction ListHeader(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var classes = cx('header', className);\n  var rest = getUnhandledProps(ListHeader, props);\n  var ElementType = getElementType(ListHeader, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nListHeader.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nListHeader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nListHeader.create = createShorthandFactory(ListHeader, function (content) {\n  return {\n    content: content\n  };\n});\nexport default ListHeader;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps, SUI, useValueAndKey, useVerticalAlignProp } from '../../lib';\nimport ListDescription from './ListDescription';\nimport ListHeader from './ListHeader';\n/**\n * A list item can contain a content.\n */\n\nfunction ListContent(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      description = props.description,\n      floated = props.floated,\n      header = props.header,\n      verticalAlign = props.verticalAlign;\n  var classes = cx(useValueAndKey(floated, 'floated'), useVerticalAlignProp(verticalAlign), 'content', className);\n  var rest = getUnhandledProps(ListContent, props);\n  var ElementType = getElementType(ListContent, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), ListHeader.create(header), ListDescription.create(description), content);\n}\n\nListContent.handledProps = [\"as\", \"children\", \"className\", \"content\", \"description\", \"floated\", \"header\", \"verticalAlign\"];\nListContent.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Shorthand for ListDescription. */\n  description: customPropTypes.itemShorthand,\n\n  /** An list content can be floated left or right. */\n  floated: PropTypes.oneOf(SUI.FLOATS),\n\n  /** Shorthand for ListHeader. */\n  header: customPropTypes.itemShorthand,\n\n  /** An element inside a list can be vertically aligned. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS)\n} : {};\nListContent.create = createShorthandFactory(ListContent, function (content) {\n  return {\n    content: content\n  };\n});\nexport default ListContent;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { createShorthandFactory, getUnhandledProps, SUI, useVerticalAlignProp } from '../../lib';\nimport Icon from '../Icon/Icon';\n/**\n * A list item can contain an icon.\n */\n\nfunction ListIcon(props) {\n  var className = props.className,\n      verticalAlign = props.verticalAlign;\n  var classes = cx(useVerticalAlignProp(verticalAlign), className);\n  var rest = getUnhandledProps(ListIcon, props);\n  return /*#__PURE__*/React.createElement(Icon, _extends({}, rest, {\n    className: classes\n  }));\n}\n\nListIcon.handledProps = [\"className\", \"verticalAlign\"];\nListIcon.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** An element inside a list can be vertically aligned. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS)\n} : {};\nListIcon.create = createShorthandFactory(ListIcon, function (name) {\n  return {\n    name: name\n  };\n});\nexport default ListIcon;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _isPlainObject from \"lodash/isPlainObject\";\nimport _invoke from \"lodash/invoke\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React, { Component, isValidElement } from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps, useKeyOnly } from '../../lib';\nimport Image from '../Image';\nimport ListContent from './ListContent';\nimport ListDescription from './ListDescription';\nimport ListHeader from './ListHeader';\nimport ListIcon from './ListIcon';\n/**\n * A list item can contain a set of items.\n */\n\nvar ListItem = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(ListItem, _Component);\n\n  function ListItem() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n\n    _this.handleClick = function (e) {\n      var disabled = _this.props.disabled;\n      if (!disabled) _invoke(_this.props, 'onClick', e, _this.props);\n    };\n\n    return _this;\n  }\n\n  var _proto = ListItem.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        active = _this$props.active,\n        children = _this$props.children,\n        className = _this$props.className,\n        content = _this$props.content,\n        description = _this$props.description,\n        disabled = _this$props.disabled,\n        header = _this$props.header,\n        icon = _this$props.icon,\n        image = _this$props.image,\n        value = _this$props.value;\n    var ElementType = getElementType(ListItem, this.props);\n    var classes = cx(useKeyOnly(active, 'active'), useKeyOnly(disabled, 'disabled'), useKeyOnly(ElementType !== 'li', 'item'), className);\n    var rest = getUnhandledProps(ListItem, this.props);\n    var valueProp = ElementType === 'li' ? {\n      value: value\n    } : {\n      'data-value': value\n    };\n\n    if (!childrenUtils.isNil(children)) {\n      return /*#__PURE__*/React.createElement(ElementType, _extends({}, valueProp, {\n        role: \"listitem\",\n        className: classes,\n        onClick: this.handleClick\n      }, rest), children);\n    }\n\n    var iconElement = ListIcon.create(icon, {\n      autoGenerateKey: false\n    });\n    var imageElement = Image.create(image, {\n      autoGenerateKey: false\n    }); // See description of `content` prop for explanation about why this is necessary.\n\n    if (! /*#__PURE__*/isValidElement(content) && _isPlainObject(content)) {\n      return /*#__PURE__*/React.createElement(ElementType, _extends({}, valueProp, {\n        role: \"listitem\",\n        className: classes,\n        onClick: this.handleClick\n      }, rest), iconElement || imageElement, ListContent.create(content, {\n        autoGenerateKey: false,\n        defaultProps: {\n          header: header,\n          description: description\n        }\n      }));\n    }\n\n    var headerElement = ListHeader.create(header, {\n      autoGenerateKey: false\n    });\n    var descriptionElement = ListDescription.create(description, {\n      autoGenerateKey: false\n    });\n\n    if (iconElement || imageElement) {\n      return /*#__PURE__*/React.createElement(ElementType, _extends({}, valueProp, {\n        role: \"listitem\",\n        className: classes,\n        onClick: this.handleClick\n      }, rest), iconElement || imageElement, (content || headerElement || descriptionElement) && /*#__PURE__*/React.createElement(ListContent, null, headerElement, descriptionElement, content));\n    }\n\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, valueProp, {\n      role: \"listitem\",\n      className: classes,\n      onClick: this.handleClick\n    }, rest), headerElement, descriptionElement, content);\n  };\n\n  return ListItem;\n}(Component);\n\nListItem.handledProps = [\"active\", \"as\", \"children\", \"className\", \"content\", \"description\", \"disabled\", \"header\", \"icon\", \"image\", \"onClick\", \"value\"];\nListItem.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** A list item can active. */\n  active: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /**\n   * Shorthand for primary content.\n   *\n   * Heads up!\n   *\n   * This is handled slightly differently than the typical `content` prop since\n   * the wrapping ListContent is not used when there's no icon or image.\n   *\n   * If you pass content as:\n   * - an element/literal, it's treated as the sibling node to\n   * header/description (whether wrapped in Item.Content or not).\n   * - a props object, it forces the presence of Item.Content and passes those\n   * props to it. If you pass a content prop within that props object, it\n   * will be treated as the sibling node to header/description.\n   */\n  content: customPropTypes.itemShorthand,\n\n  /** Shorthand for ListDescription. */\n  description: customPropTypes.itemShorthand,\n\n  /** A list item can disabled. */\n  disabled: PropTypes.bool,\n\n  /** Shorthand for ListHeader. */\n  header: customPropTypes.itemShorthand,\n\n  /** Shorthand for ListIcon. */\n  icon: customPropTypes.every([customPropTypes.disallow(['image']), customPropTypes.itemShorthand]),\n\n  /** Shorthand for Image. */\n  image: customPropTypes.every([customPropTypes.disallow(['icon']), customPropTypes.itemShorthand]),\n\n  /** A ListItem can be clicked */\n  onClick: PropTypes.func,\n\n  /** A value for an ordered list. */\n  value: PropTypes.string\n} : {};\nListItem.create = createShorthandFactory(ListItem, function (content) {\n  return {\n    content: content\n  };\n});\nexport default ListItem;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, useKeyOnly } from '../../lib';\n/**\n * A list can contain a sub list.\n */\n\nfunction ListList(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var rest = getUnhandledProps(ListList, props);\n  var ElementType = getElementType(ListList, props);\n  var classes = cx(useKeyOnly(ElementType !== 'ul' && ElementType !== 'ol', 'list'), className);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nListList.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nListList.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nexport default ListList;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _map from \"lodash/map\";\nimport _invoke from \"lodash/invoke\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey, useValueAndKey, useVerticalAlignProp } from '../../lib';\nimport ListContent from './ListContent';\nimport ListDescription from './ListDescription';\nimport ListHeader from './ListHeader';\nimport ListIcon from './ListIcon';\nimport ListItem from './ListItem';\nimport ListList from './ListList';\n/**\n * A list groups related content.\n */\n\nvar List = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(List, _Component);\n\n  function List() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n\n    _this.handleItemOverrides = function (predefinedProps) {\n      return {\n        onClick: function onClick(e, itemProps) {\n          _invoke(predefinedProps, 'onClick', e, itemProps);\n\n          _invoke(_this.props, 'onItemClick', e, itemProps);\n        }\n      };\n    };\n\n    return _this;\n  }\n\n  var _proto = List.prototype;\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    var _this$props = this.props,\n        animated = _this$props.animated,\n        bulleted = _this$props.bulleted,\n        celled = _this$props.celled,\n        children = _this$props.children,\n        className = _this$props.className,\n        content = _this$props.content,\n        divided = _this$props.divided,\n        floated = _this$props.floated,\n        horizontal = _this$props.horizontal,\n        inverted = _this$props.inverted,\n        items = _this$props.items,\n        link = _this$props.link,\n        ordered = _this$props.ordered,\n        relaxed = _this$props.relaxed,\n        selection = _this$props.selection,\n        size = _this$props.size,\n        verticalAlign = _this$props.verticalAlign;\n    var classes = cx('ui', size, useKeyOnly(animated, 'animated'), useKeyOnly(bulleted, 'bulleted'), useKeyOnly(celled, 'celled'), useKeyOnly(divided, 'divided'), useKeyOnly(horizontal, 'horizontal'), useKeyOnly(inverted, 'inverted'), useKeyOnly(link, 'link'), useKeyOnly(ordered, 'ordered'), useKeyOnly(selection, 'selection'), useKeyOrValueAndKey(relaxed, 'relaxed'), useValueAndKey(floated, 'floated'), useVerticalAlignProp(verticalAlign), 'list', className);\n    var rest = getUnhandledProps(List, this.props);\n    var ElementType = getElementType(List, this.props);\n\n    if (!childrenUtils.isNil(children)) {\n      return /*#__PURE__*/React.createElement(ElementType, _extends({\n        role: \"list\",\n        className: classes\n      }, rest), children);\n    }\n\n    if (!childrenUtils.isNil(content)) {\n      return /*#__PURE__*/React.createElement(ElementType, _extends({\n        role: \"list\",\n        className: classes\n      }, rest), content);\n    }\n\n    return /*#__PURE__*/React.createElement(ElementType, _extends({\n      role: \"list\",\n      className: classes\n    }, rest), _map(items, function (item) {\n      return ListItem.create(item, {\n        overrideProps: _this2.handleItemOverrides\n      });\n    }));\n  };\n\n  return List;\n}(Component);\n\nList.handledProps = [\"animated\", \"as\", \"bulleted\", \"celled\", \"children\", \"className\", \"content\", \"divided\", \"floated\", \"horizontal\", \"inverted\", \"items\", \"link\", \"onItemClick\", \"ordered\", \"relaxed\", \"selection\", \"size\", \"verticalAlign\"];\nList.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** A list can animate to set the current item apart from the list. */\n  animated: PropTypes.bool,\n\n  /** A list can mark items with a bullet. */\n  bulleted: PropTypes.bool,\n\n  /** A list can divide its items into cells. */\n  celled: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A list can show divisions between content. */\n  divided: PropTypes.bool,\n\n  /** An list can be floated left or right. */\n  floated: PropTypes.oneOf(SUI.FLOATS),\n\n  /** A list can be formatted to have items appear horizontally. */\n  horizontal: PropTypes.bool,\n\n  /** A list can be inverted to appear on a dark background. */\n  inverted: PropTypes.bool,\n\n  /** Shorthand array of props for ListItem. */\n  items: customPropTypes.collectionShorthand,\n\n  /** A list can be specially formatted for navigation links. */\n  link: PropTypes.bool,\n\n  /**\n   * onClick handler for ListItem. Mutually exclusive with children.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All item props.\n   */\n  onItemClick: customPropTypes.every([customPropTypes.disallow(['children']), PropTypes.func]),\n\n  /** A list can be ordered numerically. */\n  ordered: PropTypes.bool,\n\n  /** A list can relax its padding to provide more negative space. */\n  relaxed: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['very'])]),\n\n  /** A selection list formats list items as possible choices. */\n  selection: PropTypes.bool,\n\n  /** A list can vary in size. */\n  size: PropTypes.oneOf(SUI.SIZES),\n\n  /** An element inside a list can be vertically aligned. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS)\n} : {};\nList.Content = ListContent;\nList.Description = ListDescription;\nList.Header = ListHeader;\nList.Icon = ListIcon;\nList.Item = ListItem;\nList.List = ListList;\nexport default List;","import React, { useEffect, useState } from 'react';\r\nimport { useParams, Redirect, Link } from 'react-router-dom';\r\nimport { Card, Image, Loader, Dimmer } from \"semantic-ui-react\";\r\n\r\nfunction UserDetails() {\r\n    const { userId } = useParams();\r\n    const [userDetails, setUserDetails] = useState(null);\r\n    const [userAlbums, setUserAlbums] = useState([]);\r\n    const [isFetchingUserData, setIsFetchingUserData] = useState(false);\r\n    const [isFetchingUserAlbums, setIsFetchingUserAlbums] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setIsFetchingUserData(true);\r\n        setIsFetchingUserAlbums(true);\r\n        fetch(`https://jsonplaceholder.typicode.com/users/${userId}`)\r\n            .then(response => response.json())\r\n            .then(user => {\r\n                setUserDetails(user);\r\n                setIsFetchingUserData(false);\r\n            })\r\n        fetch(`https://jsonplaceholder.typicode.com/users/${userId}/albums`)\r\n            .then(response => response.json())\r\n            .then(userAlbums => {\r\n                setUserAlbums(userAlbums);\r\n                setIsFetchingUserAlbums(false);\r\n            })\r\n            .catch(err => {\r\n                setIsFetchingUserData(false);\r\n                setIsFetchingUserAlbums(false);\r\n            })\r\n    }, [userId]);\r\n\r\n    if (userDetails === null) return <Loader size='small' active />;\r\n\r\n    if (!userDetails.id) {\r\n        return <Redirect to='/' />\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <Dimmer active={isFetchingUserData}>\r\n                    <Loader active={isFetchingUserData} />\r\n                </Dimmer>\r\n                <Image src='https://react.semantic-ui.com/images/avatar/large/elliot.jpg' wrapped ui={false} />\r\n                <Card.Content>\r\n                    <Card.Header>{userDetails.name}</Card.Header>\r\n                    <Card.Meta>\r\n                        <span className='date'>Email: {userDetails.email}</span>\r\n                    </Card.Meta>\r\n                    <Card.Description>\r\n                        {userDetails.phone}\r\n                    </Card.Description>\r\n                </Card.Content>\r\n            </Card>\r\n            <Card>\r\n                <Dimmer active={isFetchingUserAlbums}>\r\n                    <Loader active={isFetchingUserAlbums} />\r\n                </Dimmer>\r\n                <Card.Content>\r\n                    <Card.Header>Albums:</Card.Header>\r\n                    {userAlbums.map((a, i) => {\r\n                        return (\r\n                            <Card.Description key={a.id}>\r\n                                {/* <span>{i + 1}. </span>\r\n                                {a.title} */}\r\n                                <Link to={`/home-work/5/album/${a.id}`}>\r\n                                    <span>{i + 1}. </span>\r\n                                    {a.title}</Link>\r\n                            </Card.Description>\r\n                        )\r\n                    })}\r\n\r\n                </Card.Content>\r\n            </Card>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default UserDetails;","import React, { useState, useEffect } from 'react';\r\nimport { Link, Route, Switch, useRouteMatch } from 'react-router-dom';\r\nimport { Container, List, Image, Grid, GridColumn, Loader } from \"semantic-ui-react\";\r\nimport UserDetails from \"./UserDetails\";\r\n\r\nfunction Users() {\r\n\r\n    const [users, setUsers] = useState([]);\r\n    const [isFetchingUsers, setIsFetchingUsers] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setIsFetchingUsers(true);\r\n        fetch(`https://jsonplaceholder.typicode.com/users`)\r\n            .then(response => response.json())\r\n            .then(users =>  {\r\n                setUsers(users);\r\n                setIsFetchingUsers(false);\r\n            })\r\n    }, []);\r\n\r\n    const { path } = useRouteMatch();\r\n\r\n    return (\r\n        <Container fluid>\r\n            <Grid columns={2}>\r\n                <GridColumn>\r\n                    {isFetchingUsers ?\r\n                        <Loader active={isFetchingUsers} />\r\n                        :\r\n                        <List>\r\n                            {users.map(user => (\r\n                                <List.Item key={user.id}>\r\n                                    <Image avatar src='https://react.semantic-ui.com/images/avatar/small/rachel.png' />\r\n                                    <List.Content>\r\n                                        <List.Header>\r\n                                            <Link to={`${path}/${user.id}`}>{user.name}</Link>\r\n                                        </List.Header>\r\n                                        <List.Description>\r\n                                            {user.email}, {user.phone}\r\n                                        </List.Description>\r\n                                    </List.Content>\r\n                                </List.Item>\r\n                            ))}\r\n                        </List>\r\n                    }\r\n                </GridColumn>\r\n                <GridColumn>\r\n                    <Switch>\r\n                        <Route path={`${path}/:userId`} exact>\r\n                            <UserDetails />\r\n                        </Route>\r\n                    </Switch>\r\n                </GridColumn>\r\n            </Grid>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Users;","import React, { useEffect, useState } from 'react';\r\nimport { useParams, Redirect, Link } from 'react-router-dom';\r\nimport { Card, Image, Loader, Dimmer } from \"semantic-ui-react\";\r\n\r\nfunction AlbumDetails() {\r\n    const { albumId } = useParams();\r\n    const [albums, setAlbums] = useState(null);\r\n    const [photos, setPhotos] = useState([]);\r\n    const [isFetchingAlbums, setIsFetchingAlbums] = useState(false);\r\n    const [isFetchingAlbumsPhotos, setIsFetchingAlbumsPhotos] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setIsFetchingAlbums(true);\r\n        setIsFetchingAlbumsPhotos(true);\r\n        fetch(`https://jsonplaceholder.typicode.com/albums/${albumId}`)\r\n            .then(response => response.json())\r\n            .then(albums => {\r\n                setAlbums(albums);\r\n                setIsFetchingAlbums(false);\r\n            })\r\n        fetch(`https://jsonplaceholder.typicode.com/albums/${albumId}/photos`)\r\n            .then(response => response.json())\r\n            .then(photos => {\r\n                setPhotos(photos);\r\n                setIsFetchingAlbumsPhotos(false);\r\n            })\r\n            .catch(err => {\r\n                setIsFetchingAlbums(false);\r\n                setIsFetchingAlbumsPhotos(false);\r\n            })\r\n    }, [albumId]);\r\n\r\n    if (albums === null) return <Loader size='small' active />;\r\n\r\n    if (!albums.id) {\r\n        return <Redirect to='/' />\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <Dimmer active={isFetchingAlbums}>\r\n                    <Loader active={isFetchingAlbumsPhotos} />\r\n                </Dimmer>\r\n\r\n                <Card.Content>\r\n                    <Card.Header><Image avatar src='https://react.semantic-ui.com/images/avatar/small/rachel.png' /> User - {albums.userId}</Card.Header>\r\n                    <br />\r\n                    <Card.Meta>\r\n                        <span className='date'>Title: {albums.title}</span>\r\n                    </Card.Meta>\r\n                    <Card.Description>\r\n                        <Link to={`/home-work/5/album-photos/${albums.id}`}>Show in Glider</Link>\r\n                    </Card.Description>\r\n                </Card.Content>\r\n            </Card>\r\n            <Card>\r\n                <Dimmer active={isFetchingAlbumsPhotos}>\r\n                    <Loader active={isFetchingAlbumsPhotos} />\r\n                </Dimmer>\r\n                <Card.Content>\r\n                    <Card.Header>Photos: {photos.length}</Card.Header>\r\n                    {photos.map((p, i) => {\r\n                        return (\r\n                            <Card.Description key={p.id}>\r\n                                <Image avatar src={p.thumbnailUrl} />\r\n                                {p.title}\r\n                            </Card.Description>\r\n                        )\r\n                    })}\r\n\r\n                </Card.Content>\r\n            </Card>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AlbumDetails;","import React, { useState, useEffect } from 'react';\r\nimport { Link, Route, Switch, useRouteMatch } from 'react-router-dom';\r\nimport { Container, List, Grid, GridColumn, Loader, Icon } from \"semantic-ui-react\";\r\nimport AlbumDetails from \"./AlbumDetails\";\r\n\r\nfunction Albums() {\r\n\r\n    const [albums, setAlbums] = useState([]);\r\n    const [isFetchingAlbums, setIsFetchingAlbums] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setIsFetchingAlbums(true);\r\n        fetch(`https://jsonplaceholder.typicode.com/albums`)\r\n            .then(response => response.json())\r\n            .then(albums => {\r\n                setAlbums(albums);\r\n                setIsFetchingAlbums(false);\r\n            })\r\n    }, []);\r\n\r\n    const { path } = useRouteMatch();\r\n\r\n    return (\r\n        <Container fluid>\r\n            <Grid columns={2}>\r\n                <GridColumn>\r\n                    {isFetchingAlbums ?\r\n                        <Loader active={isFetchingAlbums} />\r\n                        :\r\n                        <List>\r\n                            {albums.map(album => (\r\n                                <List.Item key={album.id}>\r\n                                    <Icon name='file' />\r\n                                    <List.Content>\r\n                                        <List.Header>\r\n                                            <Link to={`${path}/${album.id}`}>album - {album.id}/{album.title}</Link>\r\n                                        </List.Header>\r\n                                        <List.Description>\r\n                                            <Link to={`/home-work/5/user/${album.userId}`}>user - {album.userId}</Link>\r\n                                        </List.Description>\r\n                                    </List.Content>\r\n                                </List.Item>\r\n                            ))}\r\n                        </List>\r\n                    }\r\n                </GridColumn>\r\n                <GridColumn>\r\n                    <Switch>\r\n                        <Route path={`${path}/:albumId`} exact>\r\n                            <AlbumDetails />\r\n                        </Route>\r\n                    </Switch>\r\n                </GridColumn>\r\n            </Grid>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Albums;","import React, { useState, useEffect } from 'react';\r\nimport Glider from './../../hw2/components/Glider';\r\nimport { useParams } from 'react-router-dom';\r\nimport imagesData from '../../data/glide-images.json';\r\n\r\nfunction AlbumPhotos() {\r\n  const { albumId } = useParams();\r\n  const [photos, setPhotos] = useState(Object.assign([], imagesData));\r\n  const [isFetchingUserAlbums, setIsFetchingUserAlbums] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setIsFetchingUserAlbums(true);\r\n    fetch(`https://jsonplaceholder.typicode.com/albums/${albumId}/photos`)\r\n        .then(response => response.json())\r\n        .then(photos => {\r\n            setPhotos(photos);\r\n            setIsFetchingUserAlbums(false);\r\n        })\r\n        .catch(err => {\r\n            setIsFetchingUserAlbums(false);\r\n        })\r\n}, [albumId]);\r\n\r\n  return (\r\n    <>\r\n      {!isFetchingUserAlbums && photos.length ?\r\n        <Glider options={{ autoplay: 2000, type:'carousel', perView: 3 }} bullets=\"true\">\r\n          {photos.map((img, i) => <img key={i} src={img.url} alt=\"\" />)}\r\n        </Glider> : null\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AlbumPhotos;","import React from 'react';\r\nimport {\r\n  Switch,\r\n  Route,\r\n  useRouteMatch, NavLink, Redirect\r\n} from \"react-router-dom\";\r\nimport { Menu, Segment } from 'semantic-ui-react'\r\n\r\nimport Posts from \"./Posts\";\r\nimport Users from './Users';\r\nimport Albums from './Albums';\r\nimport UserDetails from './UserDetails';\r\nimport AlbumDetails from './AlbumDetails';\r\nimport AlbumPhotos from './AlbumPhotos';\r\n\r\nfunction Blog() {\r\n  let { path, url } = useRouteMatch();\r\n\r\n  return (\r\n    <div>\r\n      <Menu tabular attached='top'>\r\n        <Menu.Item\r\n          name=\"Posts\"\r\n          to={`${url}/posts`}\r\n          as={NavLink} activeClassName=\"active\"\r\n        />\r\n        <Menu.Item\r\n          name=\"Albums\"\r\n          to={`${url}/albums`}\r\n          as={NavLink} activeClassName=\"active\"\r\n        />\r\n        <Menu.Item\r\n          name=\"Users\"\r\n          to={`${url}/users`}\r\n          as={NavLink} activeClassName=\"active\"\r\n        />\r\n      </Menu>\r\n\r\n      <Segment attached='bottom'>\r\n        <Switch>\r\n          <Route path={`${path}/posts`}>\r\n            <Posts />\r\n          </Route>\r\n          <Route path={`${path}/albums`}>\r\n            <Albums />\r\n          </Route>\r\n          <Route path={`${path}/users`}>\r\n            <Users></Users>\r\n          </Route>\r\n          <Route path={`${path}/user/:userId`} exact>\r\n            <UserDetails />\r\n          </Route>\r\n          <Route path={`${path}/album/:albumId`} exact>\r\n            <AlbumDetails />\r\n          </Route>\r\n          <Route path={`${path}/album-photos/:albumId`} exact>\r\n            <AlbumPhotos />\r\n          </Route>\r\n          <Route path={`${path}`} exact>\r\n            <Redirect to={`${path}/posts`} />\r\n          </Route>\r\n          <Route path='*'>\r\n            404\r\n          </Route>\r\n        </Switch>\r\n      </Segment>\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Blog;","import React from 'react';\r\nimport Blog from \"./Blog\";\r\nimport HomeWorkDescription from '../../hw1/components/HomeWorkDescription';\r\nimport Descriptions from '../../data/hw.json';\r\n\r\nfunction HomeWork5() {\r\n  return (\r\n    <div id=\"hw3\">\r\n      <h1>Home Work 2</h1>\r\n      <div>\r\n        <HomeWorkDescription data={Descriptions.hw5.description}></HomeWorkDescription>\r\n      </div>\r\n      <br></br>\r\n      <Blog/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomeWork5;"],"sourceRoot":""}