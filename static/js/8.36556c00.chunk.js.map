{"version":3,"sources":["hw1/components/HomeWorkDescription.js","hw2/components/Glider.js","hw2/components/HomeWork2.js"],"names":["HomeWorkDescription","state","open","handleOpen","setState","handleClose","this","closeOnTriggerClick","onOpen","onClose","openOnTriggerClick","trigger","content","negative","positive","className","dangerouslySetInnerHTML","__html","props","data","Component","Glider","glider","options","bullets","children","slider","useRef","useEffect","Glide","current","mount","destroy","ref","id","data-glide-el","map","img","i","key","data-glide-dir","_","HomeWork2","useState","autoplay","setAutoplay","type","setType","perView","setPerView","setBullets","Object","assign","imagesData","images","setImages","Descriptions","hw2","description","Field","value","onChange","e","target","label","checked","name","onClick","index","min","max","rand","Math","random","round","randomInteger","push","pop","length","src","alt"],"mappings":"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","file":"static/js/8.36556c00.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport {\r\n    Button,\r\n    TransitionablePortal,\r\n} from 'semantic-ui-react'\r\n\r\nexport default class HomeWorkDescription extends Component {\r\n    state = {\r\n        open: false\r\n    }\r\n\r\n    handleOpen = () => this.setState({ open: true })\r\n\r\n    handleClose = () => this.setState({ open: false })\r\n\r\n    render() {\r\n        const { open } = this.state\r\n\r\n        return (\r\n            <TransitionablePortal\r\n                closeOnTriggerClick\r\n                onOpen={this.handleOpen}\r\n                onClose={this.handleClose}\r\n                openOnTriggerClick\r\n                trigger={\r\n                    <Button\r\n                        content={open ? 'Close Description' : 'Open Description'}\r\n                        negative={open}\r\n                        positive={!open}\r\n                    />\r\n                }\r\n            >\r\n                <div className=\"hw-description\" dangerouslySetInnerHTML={{ __html: this.props.data }} />\r\n            </TransitionablePortal>\r\n        )\r\n    }\r\n}","import React, { useEffect, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Glide from \"@glidejs/glide\";\r\nimport \"@glidejs/glide/dist/css/glide.core.min.css\";\r\nimport \"@glidejs/glide/dist/css/glide.theme.min.css\";\r\n\r\n\r\nfunction Glider({ options, bullets, children }) {\r\n    let glider;\r\n    let slider = useRef();\r\n\r\n    useEffect(() => {\r\n        glider = new Glide(slider.current, options).mount();\r\n\r\n        return () => {\r\n            glider.destroy();\r\n        }\r\n    });\r\n\r\n    return (\r\n        <div ref={slider} className=\"glide\" id=\"glide1\">\r\n            <div className=\"glide__track\" data-glide-el=\"track\">\r\n                <ul className=\"glide__slides\">\r\n                    {children.map((img, i) => <li className=\"glide__slide\" key={i}>{img}</li>)}\r\n                </ul>\r\n            </div>\r\n            <div className=\"glide__arrows\" data-glide-el=\"controls\">\r\n                <button className=\"glide__arrow glide__arrow--left\" data-glide-dir=\"<\">prev</button>\r\n                <button className=\"glide__arrow glide__arrow--right\" data-glide-dir=\">\">next</button>\r\n            </div>\r\n            {bullets &&\r\n                <div className=\"glide__bullets\" data-glide-el=\"controls[nav]\">\r\n                    {children.map((_, i) => <button key={i} className=\"glide__bullet\" data-glide-dir={`=${i}`} />)}\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nGlider.propTypes = {\r\n    children: PropTypes.array\r\n}\r\n\r\nexport default Glider;","import React, { useState } from 'react';\r\nimport Glider from './Glider';\r\nimport { Checkbox, Radio, Form, Input, Button } from \"semantic-ui-react\";\r\nimport HomeWorkDescription from './../../hw1/components/HomeWorkDescription';\r\nimport imagesData from './../../data/glide-images.json';\r\nimport Descriptions from '../../data/hw.json';\r\n\r\nfunction randomInteger(min, max) {\r\n  let rand = min + Math.random() * (max - min);\r\n  return Math.round(rand);\r\n}\r\n\r\nfunction HomeWork2() {\r\n  const [autoplay, setAutoplay] = useState(false);\r\n  const [type, setType] = useState('carousel');\r\n  const [perView, setPerView] = useState(3);\r\n  const [bullets, setBullets] = useState(true);\r\n  const [images, setImages] = useState(Object.assign([], imagesData));\r\n\r\n  const addImage = () => {\r\n    var index = randomInteger(0, 4);\r\n    images.push(imagesData[index]);\r\n    setImages([...images]);\r\n  }\r\n\r\n  const removeImage = () => {\r\n    images.pop();\r\n    setImages([...images]);\r\n  }\r\n\r\n  return (\r\n    <div id=\"hw2\">\r\n      <h1>Home Work 2</h1>\r\n      <div>\r\n        <HomeWorkDescription data={Descriptions.hw2.description}></HomeWorkDescription>\r\n      </div>\r\n      <br></br>\r\n      <Form>\r\n        <Form.Field>\r\n          <Input value={perView} type='number' onChange={(e) => setPerView(e.target.value)} />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <Checkbox label='Autoplay' checked={autoplay} onChange={() => setAutoplay(!autoplay)} />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <Checkbox label='Bullets' checked={bullets} onChange={() => setBullets(!bullets)} />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <Radio\r\n            label='Carousel'\r\n            name='type'\r\n            value='carousel'\r\n            checked={type === 'carousel'}\r\n            onChange={() => setType('carousel')}\r\n          />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <Radio\r\n            label='Slider'\r\n            name='type'\r\n            value='slider'\r\n            checked={type === 'slider'}\r\n            onChange={() => setType('slider')}\r\n          />\r\n        </Form.Field>\r\n      </Form>\r\n      <br></br>\r\n      <Button onClick={addImage}>+</Button>\r\n      <Button onClick={removeImage}>-</Button>\r\n      {images.length ?\r\n        <Glider options={{ autoplay: autoplay ? 2000 : false, type, perView }} bullets={bullets}>\r\n          {images.map((img, i) => <img key={i} src={img} alt=\"\" />)}\r\n        </Glider> : null\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomeWork2;"],"sourceRoot":""}